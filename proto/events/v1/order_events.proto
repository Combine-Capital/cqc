syntax = "proto3";

package cqc.events.v1;

option go_package = "github.com/Combine-Capital/cqc/gen/go/cqc/events/v1;eventsv1";

import "google/protobuf/timestamp.proto";
import "proto/venues/v1/order.proto";

// OrderPlaced event is published when a new order is submitted to a venue.
// This event notifies services of new trading activity for execution tracking, risk monitoring, and portfolio updates.
message OrderPlaced {
  // Unique event identifier for idempotency and deduplication.
  optional string event_id = 1;

  // Timestamp when this event was generated.
  optional google.protobuf.Timestamp timestamp = 2;

  // Identifier of the actor (user, service, or system) that placed the order.
  // Format: "user:{uuid}", "service:{service_name}", or "system".
  optional string actor_id = 3;

  // The order that was placed.
  optional cqc.venues.v1.Order order = 4;

  // Portfolio identifier associated with this order.
  // Duplicated from order for event filtering purposes.
  optional string portfolio_id = 5;

  // Venue where the order was placed.
  // Duplicated from order for event filtering purposes.
  optional string venue_id = 6;

  // Asset identifier for the base currency being traded.
  // Duplicated from order for event filtering purposes.
  optional string asset_id = 7;

  // Order side (buy or sell).
  // Duplicated from order for event filtering purposes.
  optional cqc.venues.v1.OrderSide side = 8;

  // Order type (market, limit, etc.).
  // Duplicated from order for event filtering purposes.
  optional cqc.venues.v1.OrderType order_type = 9;

  // Requested order quantity.
  // Duplicated from order for event filtering purposes.
  optional double quantity = 10;

  // Limit price (if applicable).
  // NULL/unset for market orders.
  optional double price = 11;

  // Estimated total value of the order in quote currency.
  // For market orders, this is an estimate; for limit orders, it's quantity * price.
  optional double estimated_value = 12;

  // Client-provided order identifier for tracking.
  // Duplicated from order for event correlation.
  optional string client_order_id = 13;
}
