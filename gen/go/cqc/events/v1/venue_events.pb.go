// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v3.12.4
// source: proto/events/v1/venue_events.proto

package eventsv1

import (
	v1 "github.com/Combine-Capital/cqc/gen/go/cqc/venues/v1"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// VenueAssetListed event is published when an asset becomes available on a venue.
// This event notifies services that a new asset can be deposited, withdrawn, or traded on a venue.
type VenueAssetListed struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique event identifier for idempotency and deduplication.
	EventId *string `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3,oneof" json:"event_id,omitempty"`
	// Timestamp when this event was generated.
	Timestamp *timestamp.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3,oneof" json:"timestamp,omitempty"`
	// Identifier of the actor (user, service, or system) that listed the asset.
	// Format: "service:{service_name}" (e.g., "service:cqar"), or "user:{user_id}".
	ActorId *string `protobuf:"bytes,3,opt,name=actor_id,json=actorId,proto3,oneof" json:"actor_id,omitempty"`
	// The venue asset listing information.
	VenueAsset *v1.VenueAsset `protobuf:"bytes,4,opt,name=venue_asset,json=venueAsset,proto3,oneof" json:"venue_asset,omitempty"`
	// Whether this is the first time this asset is listed on this venue.
	IsNewListing  *bool `protobuf:"varint,5,opt,name=is_new_listing,json=isNewListing,proto3,oneof" json:"is_new_listing,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VenueAssetListed) Reset() {
	*x = VenueAssetListed{}
	mi := &file_proto_events_v1_venue_events_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VenueAssetListed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VenueAssetListed) ProtoMessage() {}

func (x *VenueAssetListed) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_v1_venue_events_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VenueAssetListed.ProtoReflect.Descriptor instead.
func (*VenueAssetListed) Descriptor() ([]byte, []int) {
	return file_proto_events_v1_venue_events_proto_rawDescGZIP(), []int{0}
}

func (x *VenueAssetListed) GetEventId() string {
	if x != nil && x.EventId != nil {
		return *x.EventId
	}
	return ""
}

func (x *VenueAssetListed) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *VenueAssetListed) GetActorId() string {
	if x != nil && x.ActorId != nil {
		return *x.ActorId
	}
	return ""
}

func (x *VenueAssetListed) GetVenueAsset() *v1.VenueAsset {
	if x != nil {
		return x.VenueAsset
	}
	return nil
}

func (x *VenueAssetListed) GetIsNewListing() bool {
	if x != nil && x.IsNewListing != nil {
		return *x.IsNewListing
	}
	return false
}

// VenueAssetDelisted event is published when an asset is removed from a venue.
// This event notifies services that an asset is no longer available on a venue.
type VenueAssetDelisted struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique event identifier for idempotency and deduplication.
	EventId *string `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3,oneof" json:"event_id,omitempty"`
	// Timestamp when this event was generated.
	Timestamp *timestamp.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3,oneof" json:"timestamp,omitempty"`
	// Identifier of the actor (user, service, or system) that delisted the asset.
	ActorId *string `protobuf:"bytes,3,opt,name=actor_id,json=actorId,proto3,oneof" json:"actor_id,omitempty"`
	// Venue identifier where the asset was delisted.
	VenueId *string `protobuf:"bytes,4,opt,name=venue_id,json=venueId,proto3,oneof" json:"venue_id,omitempty"`
	// Asset identifier that was delisted.
	AssetId *string `protobuf:"bytes,5,opt,name=asset_id,json=assetId,proto3,oneof" json:"asset_id,omitempty"`
	// Reason for delisting (if available).
	Reason        *string `protobuf:"bytes,6,opt,name=reason,proto3,oneof" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VenueAssetDelisted) Reset() {
	*x = VenueAssetDelisted{}
	mi := &file_proto_events_v1_venue_events_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VenueAssetDelisted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VenueAssetDelisted) ProtoMessage() {}

func (x *VenueAssetDelisted) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_v1_venue_events_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VenueAssetDelisted.ProtoReflect.Descriptor instead.
func (*VenueAssetDelisted) Descriptor() ([]byte, []int) {
	return file_proto_events_v1_venue_events_proto_rawDescGZIP(), []int{1}
}

func (x *VenueAssetDelisted) GetEventId() string {
	if x != nil && x.EventId != nil {
		return *x.EventId
	}
	return ""
}

func (x *VenueAssetDelisted) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *VenueAssetDelisted) GetActorId() string {
	if x != nil && x.ActorId != nil {
		return *x.ActorId
	}
	return ""
}

func (x *VenueAssetDelisted) GetVenueId() string {
	if x != nil && x.VenueId != nil {
		return *x.VenueId
	}
	return ""
}

func (x *VenueAssetDelisted) GetAssetId() string {
	if x != nil && x.AssetId != nil {
		return *x.AssetId
	}
	return ""
}

func (x *VenueAssetDelisted) GetReason() string {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return ""
}

// VenueSymbolListed event is published when a trading symbol/market becomes available on a venue.
// This event notifies services that a new symbol can be traded on a venue.
type VenueSymbolListed struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique event identifier for idempotency and deduplication.
	EventId *string `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3,oneof" json:"event_id,omitempty"`
	// Timestamp when this event was generated.
	Timestamp *timestamp.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3,oneof" json:"timestamp,omitempty"`
	// Identifier of the actor (user, service, or system) that listed the symbol.
	// Format: "service:{service_name}" (e.g., "service:cqar"), or "user:{user_id}".
	ActorId *string `protobuf:"bytes,3,opt,name=actor_id,json=actorId,proto3,oneof" json:"actor_id,omitempty"`
	// The venue symbol listing information.
	VenueSymbol *v1.VenueSymbol `protobuf:"bytes,4,opt,name=venue_symbol,json=venueSymbol,proto3,oneof" json:"venue_symbol,omitempty"`
	// Whether this is the first time this symbol is listed on this venue.
	IsNewListing  *bool `protobuf:"varint,5,opt,name=is_new_listing,json=isNewListing,proto3,oneof" json:"is_new_listing,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VenueSymbolListed) Reset() {
	*x = VenueSymbolListed{}
	mi := &file_proto_events_v1_venue_events_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VenueSymbolListed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VenueSymbolListed) ProtoMessage() {}

func (x *VenueSymbolListed) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_v1_venue_events_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VenueSymbolListed.ProtoReflect.Descriptor instead.
func (*VenueSymbolListed) Descriptor() ([]byte, []int) {
	return file_proto_events_v1_venue_events_proto_rawDescGZIP(), []int{2}
}

func (x *VenueSymbolListed) GetEventId() string {
	if x != nil && x.EventId != nil {
		return *x.EventId
	}
	return ""
}

func (x *VenueSymbolListed) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *VenueSymbolListed) GetActorId() string {
	if x != nil && x.ActorId != nil {
		return *x.ActorId
	}
	return ""
}

func (x *VenueSymbolListed) GetVenueSymbol() *v1.VenueSymbol {
	if x != nil {
		return x.VenueSymbol
	}
	return nil
}

func (x *VenueSymbolListed) GetIsNewListing() bool {
	if x != nil && x.IsNewListing != nil {
		return *x.IsNewListing
	}
	return false
}

// VenueSymbolDelisted event is published when a trading symbol is removed from a venue.
// This event notifies services that a symbol is no longer tradeable on a venue.
type VenueSymbolDelisted struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique event identifier for idempotency and deduplication.
	EventId *string `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3,oneof" json:"event_id,omitempty"`
	// Timestamp when this event was generated.
	Timestamp *timestamp.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3,oneof" json:"timestamp,omitempty"`
	// Identifier of the actor (user, service, or system) that delisted the symbol.
	ActorId *string `protobuf:"bytes,3,opt,name=actor_id,json=actorId,proto3,oneof" json:"actor_id,omitempty"`
	// Venue identifier where the symbol was delisted.
	VenueId *string `protobuf:"bytes,4,opt,name=venue_id,json=venueId,proto3,oneof" json:"venue_id,omitempty"`
	// Symbol identifier that was delisted.
	SymbolId *string `protobuf:"bytes,5,opt,name=symbol_id,json=symbolId,proto3,oneof" json:"symbol_id,omitempty"`
	// Reason for delisting (if available).
	Reason        *string `protobuf:"bytes,6,opt,name=reason,proto3,oneof" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VenueSymbolDelisted) Reset() {
	*x = VenueSymbolDelisted{}
	mi := &file_proto_events_v1_venue_events_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VenueSymbolDelisted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VenueSymbolDelisted) ProtoMessage() {}

func (x *VenueSymbolDelisted) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_v1_venue_events_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VenueSymbolDelisted.ProtoReflect.Descriptor instead.
func (*VenueSymbolDelisted) Descriptor() ([]byte, []int) {
	return file_proto_events_v1_venue_events_proto_rawDescGZIP(), []int{3}
}

func (x *VenueSymbolDelisted) GetEventId() string {
	if x != nil && x.EventId != nil {
		return *x.EventId
	}
	return ""
}

func (x *VenueSymbolDelisted) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *VenueSymbolDelisted) GetActorId() string {
	if x != nil && x.ActorId != nil {
		return *x.ActorId
	}
	return ""
}

func (x *VenueSymbolDelisted) GetVenueId() string {
	if x != nil && x.VenueId != nil {
		return *x.VenueId
	}
	return ""
}

func (x *VenueSymbolDelisted) GetSymbolId() string {
	if x != nil && x.SymbolId != nil {
		return *x.SymbolId
	}
	return ""
}

func (x *VenueSymbolDelisted) GetReason() string {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return ""
}

var File_proto_events_v1_venue_events_proto protoreflect.FileDescriptor

const file_proto_events_v1_venue_events_proto_rawDesc = "" +
	"\n" +
	"\"proto/events/v1/venue_events.proto\x12\rcqc.events.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a!proto/venues/v1/venue_asset.proto\x1a\"proto/venues/v1/venue_symbol.proto\"\xc8\x02\n" +
	"\x10VenueAssetListed\x12\x1e\n" +
	"\bevent_id\x18\x01 \x01(\tH\x00R\aeventId\x88\x01\x01\x12=\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampH\x01R\ttimestamp\x88\x01\x01\x12\x1e\n" +
	"\bactor_id\x18\x03 \x01(\tH\x02R\aactorId\x88\x01\x01\x12?\n" +
	"\vvenue_asset\x18\x04 \x01(\v2\x19.cqc.venues.v1.VenueAssetH\x03R\n" +
	"venueAsset\x88\x01\x01\x12)\n" +
	"\x0eis_new_listing\x18\x05 \x01(\bH\x04R\fisNewListing\x88\x01\x01B\v\n" +
	"\t_event_idB\f\n" +
	"\n" +
	"_timestampB\v\n" +
	"\t_actor_idB\x0e\n" +
	"\f_venue_assetB\x11\n" +
	"\x0f_is_new_listing\"\xbd\x02\n" +
	"\x12VenueAssetDelisted\x12\x1e\n" +
	"\bevent_id\x18\x01 \x01(\tH\x00R\aeventId\x88\x01\x01\x12=\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampH\x01R\ttimestamp\x88\x01\x01\x12\x1e\n" +
	"\bactor_id\x18\x03 \x01(\tH\x02R\aactorId\x88\x01\x01\x12\x1e\n" +
	"\bvenue_id\x18\x04 \x01(\tH\x03R\avenueId\x88\x01\x01\x12\x1e\n" +
	"\basset_id\x18\x05 \x01(\tH\x04R\aassetId\x88\x01\x01\x12\x1b\n" +
	"\x06reason\x18\x06 \x01(\tH\x05R\x06reason\x88\x01\x01B\v\n" +
	"\t_event_idB\f\n" +
	"\n" +
	"_timestampB\v\n" +
	"\t_actor_idB\v\n" +
	"\t_venue_idB\v\n" +
	"\t_asset_idB\t\n" +
	"\a_reason\"\xcd\x02\n" +
	"\x11VenueSymbolListed\x12\x1e\n" +
	"\bevent_id\x18\x01 \x01(\tH\x00R\aeventId\x88\x01\x01\x12=\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampH\x01R\ttimestamp\x88\x01\x01\x12\x1e\n" +
	"\bactor_id\x18\x03 \x01(\tH\x02R\aactorId\x88\x01\x01\x12B\n" +
	"\fvenue_symbol\x18\x04 \x01(\v2\x1a.cqc.venues.v1.VenueSymbolH\x03R\vvenueSymbol\x88\x01\x01\x12)\n" +
	"\x0eis_new_listing\x18\x05 \x01(\bH\x04R\fisNewListing\x88\x01\x01B\v\n" +
	"\t_event_idB\f\n" +
	"\n" +
	"_timestampB\v\n" +
	"\t_actor_idB\x0f\n" +
	"\r_venue_symbolB\x11\n" +
	"\x0f_is_new_listing\"\xc1\x02\n" +
	"\x13VenueSymbolDelisted\x12\x1e\n" +
	"\bevent_id\x18\x01 \x01(\tH\x00R\aeventId\x88\x01\x01\x12=\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampH\x01R\ttimestamp\x88\x01\x01\x12\x1e\n" +
	"\bactor_id\x18\x03 \x01(\tH\x02R\aactorId\x88\x01\x01\x12\x1e\n" +
	"\bvenue_id\x18\x04 \x01(\tH\x03R\avenueId\x88\x01\x01\x12 \n" +
	"\tsymbol_id\x18\x05 \x01(\tH\x04R\bsymbolId\x88\x01\x01\x12\x1b\n" +
	"\x06reason\x18\x06 \x01(\tH\x05R\x06reason\x88\x01\x01B\v\n" +
	"\t_event_idB\f\n" +
	"\n" +
	"_timestampB\v\n" +
	"\t_actor_idB\v\n" +
	"\t_venue_idB\f\n" +
	"\n" +
	"_symbol_idB\t\n" +
	"\a_reasonB>Z<github.com/Combine-Capital/cqc/gen/go/cqc/events/v1;eventsv1b\x06proto3"

var (
	file_proto_events_v1_venue_events_proto_rawDescOnce sync.Once
	file_proto_events_v1_venue_events_proto_rawDescData []byte
)

func file_proto_events_v1_venue_events_proto_rawDescGZIP() []byte {
	file_proto_events_v1_venue_events_proto_rawDescOnce.Do(func() {
		file_proto_events_v1_venue_events_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_events_v1_venue_events_proto_rawDesc), len(file_proto_events_v1_venue_events_proto_rawDesc)))
	})
	return file_proto_events_v1_venue_events_proto_rawDescData
}

var file_proto_events_v1_venue_events_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_proto_events_v1_venue_events_proto_goTypes = []any{
	(*VenueAssetListed)(nil),    // 0: cqc.events.v1.VenueAssetListed
	(*VenueAssetDelisted)(nil),  // 1: cqc.events.v1.VenueAssetDelisted
	(*VenueSymbolListed)(nil),   // 2: cqc.events.v1.VenueSymbolListed
	(*VenueSymbolDelisted)(nil), // 3: cqc.events.v1.VenueSymbolDelisted
	(*timestamp.Timestamp)(nil), // 4: google.protobuf.Timestamp
	(*v1.VenueAsset)(nil),       // 5: cqc.venues.v1.VenueAsset
	(*v1.VenueSymbol)(nil),      // 6: cqc.venues.v1.VenueSymbol
}
var file_proto_events_v1_venue_events_proto_depIdxs = []int32{
	4, // 0: cqc.events.v1.VenueAssetListed.timestamp:type_name -> google.protobuf.Timestamp
	5, // 1: cqc.events.v1.VenueAssetListed.venue_asset:type_name -> cqc.venues.v1.VenueAsset
	4, // 2: cqc.events.v1.VenueAssetDelisted.timestamp:type_name -> google.protobuf.Timestamp
	4, // 3: cqc.events.v1.VenueSymbolListed.timestamp:type_name -> google.protobuf.Timestamp
	6, // 4: cqc.events.v1.VenueSymbolListed.venue_symbol:type_name -> cqc.venues.v1.VenueSymbol
	4, // 5: cqc.events.v1.VenueSymbolDelisted.timestamp:type_name -> google.protobuf.Timestamp
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_proto_events_v1_venue_events_proto_init() }
func file_proto_events_v1_venue_events_proto_init() {
	if File_proto_events_v1_venue_events_proto != nil {
		return
	}
	file_proto_events_v1_venue_events_proto_msgTypes[0].OneofWrappers = []any{}
	file_proto_events_v1_venue_events_proto_msgTypes[1].OneofWrappers = []any{}
	file_proto_events_v1_venue_events_proto_msgTypes[2].OneofWrappers = []any{}
	file_proto_events_v1_venue_events_proto_msgTypes[3].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_events_v1_venue_events_proto_rawDesc), len(file_proto_events_v1_venue_events_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_events_v1_venue_events_proto_goTypes,
		DependencyIndexes: file_proto_events_v1_venue_events_proto_depIdxs,
		MessageInfos:      file_proto_events_v1_venue_events_proto_msgTypes,
	}.Build()
	File_proto_events_v1_venue_events_proto = out.File
	file_proto_events_v1_venue_events_proto_goTypes = nil
	file_proto_events_v1_venue_events_proto_depIdxs = nil
}
