// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v3.12.4
// source: proto/events/v1/market_events.proto

package eventsv1

import (
	v1 "github.com/Combine-Capital/cqc/gen/go/cqc/markets/v1"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// InstrumentCreated event is published when a new trading instrument is registered.
// This event notifies services that a new instrument is available for trading and market data.
type InstrumentCreated struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique event identifier for idempotency and deduplication.
	EventId *string `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3,oneof" json:"event_id,omitempty"`
	// Timestamp when this event was generated.
	Timestamp *timestamp.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3,oneof" json:"timestamp,omitempty"`
	// Identifier of the actor (user, service, or system) that created the instrument.
	// Format: "service:{service_name}" (e.g., "service:cqar"), or "user:{user_id}".
	ActorId *string `protobuf:"bytes,3,opt,name=actor_id,json=actorId,proto3,oneof" json:"actor_id,omitempty"`
	// The newly created instrument.
	Instrument    *v1.Instrument `protobuf:"bytes,4,opt,name=instrument,proto3,oneof" json:"instrument,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InstrumentCreated) Reset() {
	*x = InstrumentCreated{}
	mi := &file_proto_events_v1_market_events_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstrumentCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstrumentCreated) ProtoMessage() {}

func (x *InstrumentCreated) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_v1_market_events_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstrumentCreated.ProtoReflect.Descriptor instead.
func (*InstrumentCreated) Descriptor() ([]byte, []int) {
	return file_proto_events_v1_market_events_proto_rawDescGZIP(), []int{0}
}

func (x *InstrumentCreated) GetEventId() string {
	if x != nil && x.EventId != nil {
		return *x.EventId
	}
	return ""
}

func (x *InstrumentCreated) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *InstrumentCreated) GetActorId() string {
	if x != nil && x.ActorId != nil {
		return *x.ActorId
	}
	return ""
}

func (x *InstrumentCreated) GetInstrument() *v1.Instrument {
	if x != nil {
		return x.Instrument
	}
	return nil
}

// MarketCreated event is published when a new market listing is registered.
// This event notifies services that a new market is available on a venue.
type MarketCreated struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique event identifier for idempotency and deduplication.
	EventId *string `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3,oneof" json:"event_id,omitempty"`
	// Timestamp when this event was generated.
	Timestamp *timestamp.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3,oneof" json:"timestamp,omitempty"`
	// Identifier of the actor (user, service, or system) that created the market.
	// Format: "service:{service_name}" (e.g., "service:cqar"), or "user:{user_id}".
	ActorId *string `protobuf:"bytes,3,opt,name=actor_id,json=actorId,proto3,oneof" json:"actor_id,omitempty"`
	// The newly created market.
	Market        *v1.Market `protobuf:"bytes,4,opt,name=market,proto3,oneof" json:"market,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarketCreated) Reset() {
	*x = MarketCreated{}
	mi := &file_proto_events_v1_market_events_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarketCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketCreated) ProtoMessage() {}

func (x *MarketCreated) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_v1_market_events_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketCreated.ProtoReflect.Descriptor instead.
func (*MarketCreated) Descriptor() ([]byte, []int) {
	return file_proto_events_v1_market_events_proto_rawDescGZIP(), []int{1}
}

func (x *MarketCreated) GetEventId() string {
	if x != nil && x.EventId != nil {
		return *x.EventId
	}
	return ""
}

func (x *MarketCreated) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *MarketCreated) GetActorId() string {
	if x != nil && x.ActorId != nil {
		return *x.ActorId
	}
	return ""
}

func (x *MarketCreated) GetMarket() *v1.Market {
	if x != nil {
		return x.Market
	}
	return nil
}

// PriceUpdated event is published when a new price observation is recorded.
// This event notifies services of price changes for real-time market data, risk calculations, and portfolio valuations.
type PriceUpdated struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique event identifier for idempotency and deduplication.
	EventId *string `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3,oneof" json:"event_id,omitempty"`
	// Timestamp when this event was generated.
	Timestamp *timestamp.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3,oneof" json:"timestamp,omitempty"`
	// Identifier of the actor (user, service, or system) that updated the price.
	// Format: "service:{service_name}" (e.g., "service:cqmd"), or "system".
	ActorId *string `protobuf:"bytes,3,opt,name=actor_id,json=actorId,proto3,oneof" json:"actor_id,omitempty"`
	// The new price observation.
	Price *v1.Price `protobuf:"bytes,4,opt,name=price,proto3,oneof" json:"price,omitempty"`
	// Previous price value for this asset (if available).
	// NULL/unset if this is the first price observation.
	PreviousValue *float64 `protobuf:"fixed64,5,opt,name=previous_value,json=previousValue,proto3,oneof" json:"previous_value,omitempty"`
	// Percentage change from previous price.
	// NULL/unset if this is the first price observation.
	ChangePercent *float64 `protobuf:"fixed64,6,opt,name=change_percent,json=changePercent,proto3,oneof" json:"change_percent,omitempty"`
	// Source of the price update (e.g., "exchange_api", "chainlink_oracle", "aggregator").
	// Duplicated from price for event filtering purposes.
	Source *string `protobuf:"bytes,7,opt,name=source,proto3,oneof" json:"source,omitempty"`
	// Venue where this price was observed.
	// NULL for aggregated/oracle prices.
	// Duplicated from price for event filtering purposes.
	VenueId *string `protobuf:"bytes,8,opt,name=venue_id,json=venueId,proto3,oneof" json:"venue_id,omitempty"`
	// Whether this is a significant price change (threshold-based trigger).
	// Can be used for alerting or filtering important updates.
	IsSignificant *bool `protobuf:"varint,9,opt,name=is_significant,json=isSignificant,proto3,oneof" json:"is_significant,omitempty"`
	// Threshold percentage that triggered this event (if applicable).
	// Example: 5.0 for a 5% change threshold.
	TriggerThreshold *float64 `protobuf:"fixed64,10,opt,name=trigger_threshold,json=triggerThreshold,proto3,oneof" json:"trigger_threshold,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *PriceUpdated) Reset() {
	*x = PriceUpdated{}
	mi := &file_proto_events_v1_market_events_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PriceUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PriceUpdated) ProtoMessage() {}

func (x *PriceUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_v1_market_events_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PriceUpdated.ProtoReflect.Descriptor instead.
func (*PriceUpdated) Descriptor() ([]byte, []int) {
	return file_proto_events_v1_market_events_proto_rawDescGZIP(), []int{2}
}

func (x *PriceUpdated) GetEventId() string {
	if x != nil && x.EventId != nil {
		return *x.EventId
	}
	return ""
}

func (x *PriceUpdated) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *PriceUpdated) GetActorId() string {
	if x != nil && x.ActorId != nil {
		return *x.ActorId
	}
	return ""
}

func (x *PriceUpdated) GetPrice() *v1.Price {
	if x != nil {
		return x.Price
	}
	return nil
}

func (x *PriceUpdated) GetPreviousValue() float64 {
	if x != nil && x.PreviousValue != nil {
		return *x.PreviousValue
	}
	return 0
}

func (x *PriceUpdated) GetChangePercent() float64 {
	if x != nil && x.ChangePercent != nil {
		return *x.ChangePercent
	}
	return 0
}

func (x *PriceUpdated) GetSource() string {
	if x != nil && x.Source != nil {
		return *x.Source
	}
	return ""
}

func (x *PriceUpdated) GetVenueId() string {
	if x != nil && x.VenueId != nil {
		return *x.VenueId
	}
	return ""
}

func (x *PriceUpdated) GetIsSignificant() bool {
	if x != nil && x.IsSignificant != nil {
		return *x.IsSignificant
	}
	return false
}

func (x *PriceUpdated) GetTriggerThreshold() float64 {
	if x != nil && x.TriggerThreshold != nil {
		return *x.TriggerThreshold
	}
	return 0
}

var File_proto_events_v1_market_events_proto protoreflect.FileDescriptor

const file_proto_events_v1_market_events_proto_rawDesc = "" +
	"\n" +
	"#proto/events/v1/market_events.proto\x12\rcqc.events.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a!proto/markets/v1/instrument.proto\x1a\x1dproto/markets/v1/market.proto\x1a\x1cproto/markets/v1/price.proto\"\x8a\x02\n" +
	"\x11InstrumentCreated\x12\x1e\n" +
	"\bevent_id\x18\x01 \x01(\tH\x00R\aeventId\x88\x01\x01\x12=\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampH\x01R\ttimestamp\x88\x01\x01\x12\x1e\n" +
	"\bactor_id\x18\x03 \x01(\tH\x02R\aactorId\x88\x01\x01\x12?\n" +
	"\n" +
	"instrument\x18\x04 \x01(\v2\x1a.cqc.markets.v1.InstrumentH\x03R\n" +
	"instrument\x88\x01\x01B\v\n" +
	"\t_event_idB\f\n" +
	"\n" +
	"_timestampB\v\n" +
	"\t_actor_idB\r\n" +
	"\v_instrument\"\xf6\x01\n" +
	"\rMarketCreated\x12\x1e\n" +
	"\bevent_id\x18\x01 \x01(\tH\x00R\aeventId\x88\x01\x01\x12=\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampH\x01R\ttimestamp\x88\x01\x01\x12\x1e\n" +
	"\bactor_id\x18\x03 \x01(\tH\x02R\aactorId\x88\x01\x01\x123\n" +
	"\x06market\x18\x04 \x01(\v2\x16.cqc.markets.v1.MarketH\x03R\x06market\x88\x01\x01B\v\n" +
	"\t_event_idB\f\n" +
	"\n" +
	"_timestampB\v\n" +
	"\t_actor_idB\t\n" +
	"\a_market\"\xcb\x04\n" +
	"\fPriceUpdated\x12\x1e\n" +
	"\bevent_id\x18\x01 \x01(\tH\x00R\aeventId\x88\x01\x01\x12=\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampH\x01R\ttimestamp\x88\x01\x01\x12\x1e\n" +
	"\bactor_id\x18\x03 \x01(\tH\x02R\aactorId\x88\x01\x01\x120\n" +
	"\x05price\x18\x04 \x01(\v2\x15.cqc.markets.v1.PriceH\x03R\x05price\x88\x01\x01\x12*\n" +
	"\x0eprevious_value\x18\x05 \x01(\x01H\x04R\rpreviousValue\x88\x01\x01\x12*\n" +
	"\x0echange_percent\x18\x06 \x01(\x01H\x05R\rchangePercent\x88\x01\x01\x12\x1b\n" +
	"\x06source\x18\a \x01(\tH\x06R\x06source\x88\x01\x01\x12\x1e\n" +
	"\bvenue_id\x18\b \x01(\tH\aR\avenueId\x88\x01\x01\x12*\n" +
	"\x0eis_significant\x18\t \x01(\bH\bR\risSignificant\x88\x01\x01\x120\n" +
	"\x11trigger_threshold\x18\n" +
	" \x01(\x01H\tR\x10triggerThreshold\x88\x01\x01B\v\n" +
	"\t_event_idB\f\n" +
	"\n" +
	"_timestampB\v\n" +
	"\t_actor_idB\b\n" +
	"\x06_priceB\x11\n" +
	"\x0f_previous_valueB\x11\n" +
	"\x0f_change_percentB\t\n" +
	"\a_sourceB\v\n" +
	"\t_venue_idB\x11\n" +
	"\x0f_is_significantB\x14\n" +
	"\x12_trigger_thresholdB>Z<github.com/Combine-Capital/cqc/gen/go/cqc/events/v1;eventsv1b\x06proto3"

var (
	file_proto_events_v1_market_events_proto_rawDescOnce sync.Once
	file_proto_events_v1_market_events_proto_rawDescData []byte
)

func file_proto_events_v1_market_events_proto_rawDescGZIP() []byte {
	file_proto_events_v1_market_events_proto_rawDescOnce.Do(func() {
		file_proto_events_v1_market_events_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_events_v1_market_events_proto_rawDesc), len(file_proto_events_v1_market_events_proto_rawDesc)))
	})
	return file_proto_events_v1_market_events_proto_rawDescData
}

var file_proto_events_v1_market_events_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_proto_events_v1_market_events_proto_goTypes = []any{
	(*InstrumentCreated)(nil),   // 0: cqc.events.v1.InstrumentCreated
	(*MarketCreated)(nil),       // 1: cqc.events.v1.MarketCreated
	(*PriceUpdated)(nil),        // 2: cqc.events.v1.PriceUpdated
	(*timestamp.Timestamp)(nil), // 3: google.protobuf.Timestamp
	(*v1.Instrument)(nil),       // 4: cqc.markets.v1.Instrument
	(*v1.Market)(nil),           // 5: cqc.markets.v1.Market
	(*v1.Price)(nil),            // 6: cqc.markets.v1.Price
}
var file_proto_events_v1_market_events_proto_depIdxs = []int32{
	3, // 0: cqc.events.v1.InstrumentCreated.timestamp:type_name -> google.protobuf.Timestamp
	4, // 1: cqc.events.v1.InstrumentCreated.instrument:type_name -> cqc.markets.v1.Instrument
	3, // 2: cqc.events.v1.MarketCreated.timestamp:type_name -> google.protobuf.Timestamp
	5, // 3: cqc.events.v1.MarketCreated.market:type_name -> cqc.markets.v1.Market
	3, // 4: cqc.events.v1.PriceUpdated.timestamp:type_name -> google.protobuf.Timestamp
	6, // 5: cqc.events.v1.PriceUpdated.price:type_name -> cqc.markets.v1.Price
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_proto_events_v1_market_events_proto_init() }
func file_proto_events_v1_market_events_proto_init() {
	if File_proto_events_v1_market_events_proto != nil {
		return
	}
	file_proto_events_v1_market_events_proto_msgTypes[0].OneofWrappers = []any{}
	file_proto_events_v1_market_events_proto_msgTypes[1].OneofWrappers = []any{}
	file_proto_events_v1_market_events_proto_msgTypes[2].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_events_v1_market_events_proto_rawDesc), len(file_proto_events_v1_market_events_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_events_v1_market_events_proto_goTypes,
		DependencyIndexes: file_proto_events_v1_market_events_proto_depIdxs,
		MessageInfos:      file_proto_events_v1_market_events_proto_msgTypes,
	}.Build()
	File_proto_events_v1_market_events_proto = out.File
	file_proto_events_v1_market_events_proto_goTypes = nil
	file_proto_events_v1_market_events_proto_depIdxs = nil
}
