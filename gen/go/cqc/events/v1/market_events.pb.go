// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.12.4
// source: proto/events/v1/market_events.proto

package eventsv1

import (
	v1 "github.com/Combine-Capital/cqc/gen/go/cqc/markets/v1"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// PriceUpdated event is published when a new price observation is recorded.
// This event notifies services of price changes for real-time market data, risk calculations, and portfolio valuations.
type PriceUpdated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique event identifier for idempotency and deduplication.
	EventId *string `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3,oneof" json:"event_id,omitempty"`
	// Timestamp when this event was generated.
	Timestamp *timestamp.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3,oneof" json:"timestamp,omitempty"`
	// Identifier of the actor (user, service, or system) that updated the price.
	// Format: "service:{service_name}" (e.g., "service:cqmd"), or "system".
	ActorId *string `protobuf:"bytes,3,opt,name=actor_id,json=actorId,proto3,oneof" json:"actor_id,omitempty"`
	// The new price observation.
	Price *v1.Price `protobuf:"bytes,4,opt,name=price,proto3,oneof" json:"price,omitempty"`
	// Previous price value for this asset (if available).
	// NULL/unset if this is the first price observation.
	PreviousValue *float64 `protobuf:"fixed64,5,opt,name=previous_value,json=previousValue,proto3,oneof" json:"previous_value,omitempty"`
	// Percentage change from previous price.
	// NULL/unset if this is the first price observation.
	ChangePercent *float64 `protobuf:"fixed64,6,opt,name=change_percent,json=changePercent,proto3,oneof" json:"change_percent,omitempty"`
	// Source of the price update (e.g., "exchange_api", "chainlink_oracle", "aggregator").
	// Duplicated from price for event filtering purposes.
	Source *string `protobuf:"bytes,7,opt,name=source,proto3,oneof" json:"source,omitempty"`
	// Venue where this price was observed.
	// NULL for aggregated/oracle prices.
	// Duplicated from price for event filtering purposes.
	VenueId *string `protobuf:"bytes,8,opt,name=venue_id,json=venueId,proto3,oneof" json:"venue_id,omitempty"`
	// Whether this is a significant price change (threshold-based trigger).
	// Can be used for alerting or filtering important updates.
	IsSignificant *bool `protobuf:"varint,9,opt,name=is_significant,json=isSignificant,proto3,oneof" json:"is_significant,omitempty"`
	// Threshold percentage that triggered this event (if applicable).
	// Example: 5.0 for a 5% change threshold.
	TriggerThreshold *float64 `protobuf:"fixed64,10,opt,name=trigger_threshold,json=triggerThreshold,proto3,oneof" json:"trigger_threshold,omitempty"`
}

func (x *PriceUpdated) Reset() {
	*x = PriceUpdated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_events_v1_market_events_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PriceUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PriceUpdated) ProtoMessage() {}

func (x *PriceUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_v1_market_events_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PriceUpdated.ProtoReflect.Descriptor instead.
func (*PriceUpdated) Descriptor() ([]byte, []int) {
	return file_proto_events_v1_market_events_proto_rawDescGZIP(), []int{0}
}

func (x *PriceUpdated) GetEventId() string {
	if x != nil && x.EventId != nil {
		return *x.EventId
	}
	return ""
}

func (x *PriceUpdated) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *PriceUpdated) GetActorId() string {
	if x != nil && x.ActorId != nil {
		return *x.ActorId
	}
	return ""
}

func (x *PriceUpdated) GetPrice() *v1.Price {
	if x != nil {
		return x.Price
	}
	return nil
}

func (x *PriceUpdated) GetPreviousValue() float64 {
	if x != nil && x.PreviousValue != nil {
		return *x.PreviousValue
	}
	return 0
}

func (x *PriceUpdated) GetChangePercent() float64 {
	if x != nil && x.ChangePercent != nil {
		return *x.ChangePercent
	}
	return 0
}

func (x *PriceUpdated) GetSource() string {
	if x != nil && x.Source != nil {
		return *x.Source
	}
	return ""
}

func (x *PriceUpdated) GetVenueId() string {
	if x != nil && x.VenueId != nil {
		return *x.VenueId
	}
	return ""
}

func (x *PriceUpdated) GetIsSignificant() bool {
	if x != nil && x.IsSignificant != nil {
		return *x.IsSignificant
	}
	return false
}

func (x *PriceUpdated) GetTriggerThreshold() float64 {
	if x != nil && x.TriggerThreshold != nil {
		return *x.TriggerThreshold
	}
	return 0
}

var File_proto_events_v1_market_events_proto protoreflect.FileDescriptor

var file_proto_events_v1_market_events_proto_rawDesc = []byte{
	0x0a, 0x23, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76,
	0x31, 0x2f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x63, 0x71, 0x63, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xcb, 0x04, 0x0a, 0x0c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x3d, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x48, 0x01, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x07, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x48, 0x03, 0x52, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75,
	0x73, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x48, 0x04, 0x52,
	0x0d, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x48, 0x05, 0x52, 0x0d, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a,
	0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52,
	0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x76, 0x65,
	0x6e, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x07,
	0x76, 0x65, 0x6e, 0x75, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x69, 0x73,
	0x5f, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x66, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x08, 0x48, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x11, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x01, 0x48, 0x09, 0x52, 0x10, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x54, 0x68, 0x72, 0x65,
	0x73, 0x68, 0x6f, 0x6c, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x70,
	0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x11, 0x0a,
	0x0f, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x76, 0x65, 0x6e, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x69, 0x73, 0x5f,
	0x73, 0x69, 0x67, 0x6e, 0x69, 0x66, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x42, 0x14, 0x0a, 0x12, 0x5f,
	0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c,
	0x64, 0x42, 0x3e, 0x5a, 0x3c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x2d, 0x43, 0x61, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x2f,
	0x63, 0x71, 0x63, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x63, 0x71, 0x63, 0x2f, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x3b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x76,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_events_v1_market_events_proto_rawDescOnce sync.Once
	file_proto_events_v1_market_events_proto_rawDescData = file_proto_events_v1_market_events_proto_rawDesc
)

func file_proto_events_v1_market_events_proto_rawDescGZIP() []byte {
	file_proto_events_v1_market_events_proto_rawDescOnce.Do(func() {
		file_proto_events_v1_market_events_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_events_v1_market_events_proto_rawDescData)
	})
	return file_proto_events_v1_market_events_proto_rawDescData
}

var file_proto_events_v1_market_events_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_proto_events_v1_market_events_proto_goTypes = []interface{}{
	(*PriceUpdated)(nil),        // 0: cqc.events.v1.PriceUpdated
	(*timestamp.Timestamp)(nil), // 1: google.protobuf.Timestamp
	(*v1.Price)(nil),            // 2: cqc.markets.v1.Price
}
var file_proto_events_v1_market_events_proto_depIdxs = []int32{
	1, // 0: cqc.events.v1.PriceUpdated.timestamp:type_name -> google.protobuf.Timestamp
	2, // 1: cqc.events.v1.PriceUpdated.price:type_name -> cqc.markets.v1.Price
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_proto_events_v1_market_events_proto_init() }
func file_proto_events_v1_market_events_proto_init() {
	if File_proto_events_v1_market_events_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_events_v1_market_events_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PriceUpdated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_events_v1_market_events_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_events_v1_market_events_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_events_v1_market_events_proto_goTypes,
		DependencyIndexes: file_proto_events_v1_market_events_proto_depIdxs,
		MessageInfos:      file_proto_events_v1_market_events_proto_msgTypes,
	}.Build()
	File_proto_events_v1_market_events_proto = out.File
	file_proto_events_v1_market_events_proto_rawDesc = nil
	file_proto_events_v1_market_events_proto_goTypes = nil
	file_proto_events_v1_market_events_proto_depIdxs = nil
}
