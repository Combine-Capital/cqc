// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.12.4
// source: proto/events/v1/order_events.proto

package eventsv1

import (
	v1 "github.com/Combine-Capital/cqc/gen/go/cqc/venues/v1"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// OrderPlaced event is published when a new order is submitted to a venue.
// This event notifies services of new trading activity for execution tracking, risk monitoring, and portfolio updates.
type OrderPlaced struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique event identifier for idempotency and deduplication.
	EventId *string `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3,oneof" json:"event_id,omitempty"`
	// Timestamp when this event was generated.
	Timestamp *timestamp.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3,oneof" json:"timestamp,omitempty"`
	// Identifier of the actor (user, service, or system) that placed the order.
	// Format: "user:{uuid}", "service:{service_name}", or "system".
	ActorId *string `protobuf:"bytes,3,opt,name=actor_id,json=actorId,proto3,oneof" json:"actor_id,omitempty"`
	// The order that was placed.
	Order *v1.Order `protobuf:"bytes,4,opt,name=order,proto3,oneof" json:"order,omitempty"`
	// Portfolio identifier associated with this order.
	// Duplicated from order for event filtering purposes.
	PortfolioId *string `protobuf:"bytes,5,opt,name=portfolio_id,json=portfolioId,proto3,oneof" json:"portfolio_id,omitempty"`
	// Venue where the order was placed.
	// Duplicated from order for event filtering purposes.
	VenueId *string `protobuf:"bytes,6,opt,name=venue_id,json=venueId,proto3,oneof" json:"venue_id,omitempty"`
	// Asset identifier for the base currency being traded.
	// Duplicated from order for event filtering purposes.
	AssetId *string `protobuf:"bytes,7,opt,name=asset_id,json=assetId,proto3,oneof" json:"asset_id,omitempty"`
	// Order side (buy or sell).
	// Duplicated from order for event filtering purposes.
	Side *v1.OrderSide `protobuf:"varint,8,opt,name=side,proto3,enum=cqc.venues.v1.OrderSide,oneof" json:"side,omitempty"`
	// Order type (market, limit, etc.).
	// Duplicated from order for event filtering purposes.
	OrderType *v1.OrderType `protobuf:"varint,9,opt,name=order_type,json=orderType,proto3,enum=cqc.venues.v1.OrderType,oneof" json:"order_type,omitempty"`
	// Requested order quantity.
	// Duplicated from order for event filtering purposes.
	Quantity *float64 `protobuf:"fixed64,10,opt,name=quantity,proto3,oneof" json:"quantity,omitempty"`
	// Limit price (if applicable).
	// NULL/unset for market orders.
	Price *float64 `protobuf:"fixed64,11,opt,name=price,proto3,oneof" json:"price,omitempty"`
	// Estimated total value of the order in quote currency.
	// For market orders, this is an estimate; for limit orders, it's quantity * price.
	EstimatedValue *float64 `protobuf:"fixed64,12,opt,name=estimated_value,json=estimatedValue,proto3,oneof" json:"estimated_value,omitempty"`
	// Client-provided order identifier for tracking.
	// Duplicated from order for event correlation.
	ClientOrderId *string `protobuf:"bytes,13,opt,name=client_order_id,json=clientOrderId,proto3,oneof" json:"client_order_id,omitempty"`
}

func (x *OrderPlaced) Reset() {
	*x = OrderPlaced{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_events_v1_order_events_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderPlaced) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderPlaced) ProtoMessage() {}

func (x *OrderPlaced) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_v1_order_events_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderPlaced.ProtoReflect.Descriptor instead.
func (*OrderPlaced) Descriptor() ([]byte, []int) {
	return file_proto_events_v1_order_events_proto_rawDescGZIP(), []int{0}
}

func (x *OrderPlaced) GetEventId() string {
	if x != nil && x.EventId != nil {
		return *x.EventId
	}
	return ""
}

func (x *OrderPlaced) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *OrderPlaced) GetActorId() string {
	if x != nil && x.ActorId != nil {
		return *x.ActorId
	}
	return ""
}

func (x *OrderPlaced) GetOrder() *v1.Order {
	if x != nil {
		return x.Order
	}
	return nil
}

func (x *OrderPlaced) GetPortfolioId() string {
	if x != nil && x.PortfolioId != nil {
		return *x.PortfolioId
	}
	return ""
}

func (x *OrderPlaced) GetVenueId() string {
	if x != nil && x.VenueId != nil {
		return *x.VenueId
	}
	return ""
}

func (x *OrderPlaced) GetAssetId() string {
	if x != nil && x.AssetId != nil {
		return *x.AssetId
	}
	return ""
}

func (x *OrderPlaced) GetSide() v1.OrderSide {
	if x != nil && x.Side != nil {
		return *x.Side
	}
	return v1.OrderSide(0)
}

func (x *OrderPlaced) GetOrderType() v1.OrderType {
	if x != nil && x.OrderType != nil {
		return *x.OrderType
	}
	return v1.OrderType(0)
}

func (x *OrderPlaced) GetQuantity() float64 {
	if x != nil && x.Quantity != nil {
		return *x.Quantity
	}
	return 0
}

func (x *OrderPlaced) GetPrice() float64 {
	if x != nil && x.Price != nil {
		return *x.Price
	}
	return 0
}

func (x *OrderPlaced) GetEstimatedValue() float64 {
	if x != nil && x.EstimatedValue != nil {
		return *x.EstimatedValue
	}
	return 0
}

func (x *OrderPlaced) GetClientOrderId() string {
	if x != nil && x.ClientOrderId != nil {
		return *x.ClientOrderId
	}
	return ""
}

var File_proto_events_v1_order_events_proto protoreflect.FileDescriptor

var file_proto_events_v1_order_events_proto_rawDesc = []byte{
	0x0a, 0x22, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76,
	0x31, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x63, 0x71, 0x63, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x65, 0x6e, 0x75,
	0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xe1, 0x05, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x63, 0x65,
	0x64, 0x12, 0x1e, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x3d, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x48, 0x01, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x88, 0x01, 0x01,
	0x12, 0x1e, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x02, 0x52, 0x07, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x2f, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x48, 0x03, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x88, 0x01,
	0x01, 0x12, 0x26, 0x0a, 0x0c, 0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0b, 0x70, 0x6f, 0x72, 0x74, 0x66,
	0x6f, 0x6c, 0x69, 0x6f, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x76, 0x65, 0x6e,
	0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x07, 0x76,
	0x65, 0x6e, 0x75, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x07, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x04, 0x73, 0x69, 0x64,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x76, 0x65,
	0x6e, 0x75, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x69, 0x64,
	0x65, 0x48, 0x07, 0x52, 0x04, 0x73, 0x69, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3c, 0x0a, 0x0a,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x18, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x48, 0x08, 0x52, 0x09, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x48, 0x09, 0x52, 0x08,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x48, 0x0a, 0x52, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x0f, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x48,
	0x0b, 0x52, 0x0e, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0c, 0x52,
	0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01,
	0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x0c,
	0x0a, 0x0a, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x0b, 0x0a, 0x09,
	0x5f, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69,
	0x6f, 0x5f, 0x69, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x5f, 0x69,
	0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x73, 0x69, 0x64, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x12, 0x0a,
	0x10, 0x5f, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x3e, 0x5a, 0x3c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x2d, 0x43, 0x61, 0x70, 0x69,
	0x74, 0x61, 0x6c, 0x2f, 0x63, 0x71, 0x63, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x63,
	0x71, 0x63, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x3b, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_events_v1_order_events_proto_rawDescOnce sync.Once
	file_proto_events_v1_order_events_proto_rawDescData = file_proto_events_v1_order_events_proto_rawDesc
)

func file_proto_events_v1_order_events_proto_rawDescGZIP() []byte {
	file_proto_events_v1_order_events_proto_rawDescOnce.Do(func() {
		file_proto_events_v1_order_events_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_events_v1_order_events_proto_rawDescData)
	})
	return file_proto_events_v1_order_events_proto_rawDescData
}

var file_proto_events_v1_order_events_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_proto_events_v1_order_events_proto_goTypes = []interface{}{
	(*OrderPlaced)(nil),         // 0: cqc.events.v1.OrderPlaced
	(*timestamp.Timestamp)(nil), // 1: google.protobuf.Timestamp
	(*v1.Order)(nil),            // 2: cqc.venues.v1.Order
	(v1.OrderSide)(0),           // 3: cqc.venues.v1.OrderSide
	(v1.OrderType)(0),           // 4: cqc.venues.v1.OrderType
}
var file_proto_events_v1_order_events_proto_depIdxs = []int32{
	1, // 0: cqc.events.v1.OrderPlaced.timestamp:type_name -> google.protobuf.Timestamp
	2, // 1: cqc.events.v1.OrderPlaced.order:type_name -> cqc.venues.v1.Order
	3, // 2: cqc.events.v1.OrderPlaced.side:type_name -> cqc.venues.v1.OrderSide
	4, // 3: cqc.events.v1.OrderPlaced.order_type:type_name -> cqc.venues.v1.OrderType
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_proto_events_v1_order_events_proto_init() }
func file_proto_events_v1_order_events_proto_init() {
	if File_proto_events_v1_order_events_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_events_v1_order_events_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderPlaced); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_events_v1_order_events_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_events_v1_order_events_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_events_v1_order_events_proto_goTypes,
		DependencyIndexes: file_proto_events_v1_order_events_proto_depIdxs,
		MessageInfos:      file_proto_events_v1_order_events_proto_msgTypes,
	}.Build()
	File_proto_events_v1_order_events_proto = out.File
	file_proto_events_v1_order_events_proto_rawDesc = nil
	file_proto_events_v1_order_events_proto_goTypes = nil
	file_proto_events_v1_order_events_proto_depIdxs = nil
}
