// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.12.4
// source: proto/events/v1/position_events.proto

package eventsv1

import (
	v1 "github.com/Combine-Capital/cqc/gen/go/cqc/portfolio/v1"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// PositionChangeType represents the nature of the position change.
type PositionChangeType int32

const (
	PositionChangeType_POSITION_CHANGE_TYPE_UNSPECIFIED  PositionChangeType = 0
	PositionChangeType_POSITION_CHANGE_TYPE_OPENED       PositionChangeType = 1 // New position opened
	PositionChangeType_POSITION_CHANGE_TYPE_INCREASED    PositionChangeType = 2 // Position size increased
	PositionChangeType_POSITION_CHANGE_TYPE_DECREASED    PositionChangeType = 3 // Position size decreased
	PositionChangeType_POSITION_CHANGE_TYPE_CLOSED       PositionChangeType = 4 // Position fully closed
	PositionChangeType_POSITION_CHANGE_TYPE_PRICE_UPDATE PositionChangeType = 5 // P&L changed due to price update
	PositionChangeType_POSITION_CHANGE_TYPE_TRANSFER     PositionChangeType = 6 // Position transferred between accounts
	PositionChangeType_POSITION_CHANGE_TYPE_LIQUIDATED   PositionChangeType = 7 // Position liquidated (leveraged positions)
	PositionChangeType_POSITION_CHANGE_TYPE_REBALANCED   PositionChangeType = 8 // Position adjusted during portfolio rebalancing
)

// Enum value maps for PositionChangeType.
var (
	PositionChangeType_name = map[int32]string{
		0: "POSITION_CHANGE_TYPE_UNSPECIFIED",
		1: "POSITION_CHANGE_TYPE_OPENED",
		2: "POSITION_CHANGE_TYPE_INCREASED",
		3: "POSITION_CHANGE_TYPE_DECREASED",
		4: "POSITION_CHANGE_TYPE_CLOSED",
		5: "POSITION_CHANGE_TYPE_PRICE_UPDATE",
		6: "POSITION_CHANGE_TYPE_TRANSFER",
		7: "POSITION_CHANGE_TYPE_LIQUIDATED",
		8: "POSITION_CHANGE_TYPE_REBALANCED",
	}
	PositionChangeType_value = map[string]int32{
		"POSITION_CHANGE_TYPE_UNSPECIFIED":  0,
		"POSITION_CHANGE_TYPE_OPENED":       1,
		"POSITION_CHANGE_TYPE_INCREASED":    2,
		"POSITION_CHANGE_TYPE_DECREASED":    3,
		"POSITION_CHANGE_TYPE_CLOSED":       4,
		"POSITION_CHANGE_TYPE_PRICE_UPDATE": 5,
		"POSITION_CHANGE_TYPE_TRANSFER":     6,
		"POSITION_CHANGE_TYPE_LIQUIDATED":   7,
		"POSITION_CHANGE_TYPE_REBALANCED":   8,
	}
)

func (x PositionChangeType) Enum() *PositionChangeType {
	p := new(PositionChangeType)
	*p = x
	return p
}

func (x PositionChangeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PositionChangeType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_events_v1_position_events_proto_enumTypes[0].Descriptor()
}

func (PositionChangeType) Type() protoreflect.EnumType {
	return &file_proto_events_v1_position_events_proto_enumTypes[0]
}

func (x PositionChangeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PositionChangeType.Descriptor instead.
func (PositionChangeType) EnumDescriptor() ([]byte, []int) {
	return file_proto_events_v1_position_events_proto_rawDescGZIP(), []int{0}
}

// PositionChanged event is published when a position is created, modified, or closed.
// This event notifies services of portfolio changes for risk monitoring, P&L tracking, and reporting.
type PositionChanged struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique event identifier for idempotency and deduplication.
	EventId *string `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3,oneof" json:"event_id,omitempty"`
	// Timestamp when this event was generated.
	Timestamp *timestamp.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3,oneof" json:"timestamp,omitempty"`
	// Identifier of the actor (user, service, or system) that triggered the position change.
	// Format: "user:{uuid}", "service:{service_name}", or "system".
	ActorId *string `protobuf:"bytes,3,opt,name=actor_id,json=actorId,proto3,oneof" json:"actor_id,omitempty"`
	// The current state of the position after the change.
	CurrentPosition *v1.Position `protobuf:"bytes,4,opt,name=current_position,json=currentPosition,proto3,oneof" json:"current_position,omitempty"`
	// The previous state of the position before the change.
	// NULL/unset for newly opened positions.
	PreviousPosition *v1.Position `protobuf:"bytes,5,opt,name=previous_position,json=previousPosition,proto3,oneof" json:"previous_position,omitempty"`
	// Type of change that occurred.
	ChangeType *PositionChangeType `protobuf:"varint,6,opt,name=change_type,json=changeType,proto3,enum=cqc.events.v1.PositionChangeType,oneof" json:"change_type,omitempty"`
	// Portfolio identifier.
	// Duplicated from position for event filtering purposes.
	PortfolioId *string `protobuf:"bytes,7,opt,name=portfolio_id,json=portfolioId,proto3,oneof" json:"portfolio_id,omitempty"`
	// Asset identifier.
	// Duplicated from position for event filtering purposes.
	AssetId *string `protobuf:"bytes,8,opt,name=asset_id,json=assetId,proto3,oneof" json:"asset_id,omitempty"`
	// Venue identifier where the position is held.
	// Duplicated from position for event filtering purposes.
	VenueId *string `protobuf:"bytes,9,opt,name=venue_id,json=venueId,proto3,oneof" json:"venue_id,omitempty"`
	// Change in quantity (positive for increases, negative for decreases).
	QuantityDelta *float64 `protobuf:"fixed64,10,opt,name=quantity_delta,json=quantityDelta,proto3,oneof" json:"quantity_delta,omitempty"`
	// Change in value (current_value - previous_value).
	ValueDelta *float64 `protobuf:"fixed64,11,opt,name=value_delta,json=valueDelta,proto3,oneof" json:"value_delta,omitempty"`
	// Change in unrealized P&L.
	PnlDelta *float64 `protobuf:"fixed64,12,opt,name=pnl_delta,json=pnlDelta,proto3,oneof" json:"pnl_delta,omitempty"`
	// Realized P&L from this change (for partial/full closes).
	// Zero for price updates or position increases.
	RealizedPnl *float64 `protobuf:"fixed64,13,opt,name=realized_pnl,json=realizedPnl,proto3,oneof" json:"realized_pnl,omitempty"`
	// Order ID that caused this position change (if applicable).
	// NULL for non-order-based changes (price updates, transfers, etc.).
	OrderId *string `protobuf:"bytes,14,opt,name=order_id,json=orderId,proto3,oneof" json:"order_id,omitempty"`
	// Transaction ID that caused this position change (if applicable).
	TransactionId *string `protobuf:"bytes,15,opt,name=transaction_id,json=transactionId,proto3,oneof" json:"transaction_id,omitempty"`
	// Whether this position is now closed.
	IsClosed *bool `protobuf:"varint,16,opt,name=is_closed,json=isClosed,proto3,oneof" json:"is_closed,omitempty"`
	// Reason for the position change (e.g., "trade_execution", "price_update", "manual_adjustment", "liquidation").
	Reason *string `protobuf:"bytes,17,opt,name=reason,proto3,oneof" json:"reason,omitempty"`
}

func (x *PositionChanged) Reset() {
	*x = PositionChanged{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_events_v1_position_events_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PositionChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PositionChanged) ProtoMessage() {}

func (x *PositionChanged) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_v1_position_events_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PositionChanged.ProtoReflect.Descriptor instead.
func (*PositionChanged) Descriptor() ([]byte, []int) {
	return file_proto_events_v1_position_events_proto_rawDescGZIP(), []int{0}
}

func (x *PositionChanged) GetEventId() string {
	if x != nil && x.EventId != nil {
		return *x.EventId
	}
	return ""
}

func (x *PositionChanged) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *PositionChanged) GetActorId() string {
	if x != nil && x.ActorId != nil {
		return *x.ActorId
	}
	return ""
}

func (x *PositionChanged) GetCurrentPosition() *v1.Position {
	if x != nil {
		return x.CurrentPosition
	}
	return nil
}

func (x *PositionChanged) GetPreviousPosition() *v1.Position {
	if x != nil {
		return x.PreviousPosition
	}
	return nil
}

func (x *PositionChanged) GetChangeType() PositionChangeType {
	if x != nil && x.ChangeType != nil {
		return *x.ChangeType
	}
	return PositionChangeType_POSITION_CHANGE_TYPE_UNSPECIFIED
}

func (x *PositionChanged) GetPortfolioId() string {
	if x != nil && x.PortfolioId != nil {
		return *x.PortfolioId
	}
	return ""
}

func (x *PositionChanged) GetAssetId() string {
	if x != nil && x.AssetId != nil {
		return *x.AssetId
	}
	return ""
}

func (x *PositionChanged) GetVenueId() string {
	if x != nil && x.VenueId != nil {
		return *x.VenueId
	}
	return ""
}

func (x *PositionChanged) GetQuantityDelta() float64 {
	if x != nil && x.QuantityDelta != nil {
		return *x.QuantityDelta
	}
	return 0
}

func (x *PositionChanged) GetValueDelta() float64 {
	if x != nil && x.ValueDelta != nil {
		return *x.ValueDelta
	}
	return 0
}

func (x *PositionChanged) GetPnlDelta() float64 {
	if x != nil && x.PnlDelta != nil {
		return *x.PnlDelta
	}
	return 0
}

func (x *PositionChanged) GetRealizedPnl() float64 {
	if x != nil && x.RealizedPnl != nil {
		return *x.RealizedPnl
	}
	return 0
}

func (x *PositionChanged) GetOrderId() string {
	if x != nil && x.OrderId != nil {
		return *x.OrderId
	}
	return ""
}

func (x *PositionChanged) GetTransactionId() string {
	if x != nil && x.TransactionId != nil {
		return *x.TransactionId
	}
	return ""
}

func (x *PositionChanged) GetIsClosed() bool {
	if x != nil && x.IsClosed != nil {
		return *x.IsClosed
	}
	return false
}

func (x *PositionChanged) GetReason() string {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return ""
}

var File_proto_events_v1_position_events_proto protoreflect.FileDescriptor

var file_proto_events_v1_position_events_proto_rawDesc = []byte{
	0x0a, 0x25, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76,
	0x31, 0x2f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x63, 0x71, 0x63, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70,
	0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8b, 0x08, 0x0a, 0x0f, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x12, 0x1e,
	0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x3d,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x01, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a,
	0x08, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x02, 0x52, 0x07, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x4a, 0x0a,
	0x10, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x70, 0x6f,
	0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x48, 0x03, 0x52, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x4c, 0x0a, 0x11, 0x70, 0x72, 0x65,
	0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x66,
	0x6f, 0x6c, 0x69, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x04, 0x52, 0x10, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x47, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x63,
	0x71, 0x63, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x48,
	0x05, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x26, 0x0a, 0x0c, 0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x5f, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x0b, 0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f,
	0x6c, 0x69, 0x6f, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x07, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x76, 0x65, 0x6e, 0x75,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x07, 0x76, 0x65,
	0x6e, 0x75, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x71, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01,
	0x48, 0x09, 0x52, 0x0d, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x65, 0x6c, 0x74,
	0x61, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x64, 0x65,
	0x6c, 0x74, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x48, 0x0a, 0x52, 0x0a, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x70, 0x6e,
	0x6c, 0x5f, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x48, 0x0b, 0x52,
	0x08, 0x70, 0x6e, 0x6c, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c,
	0x72, 0x65, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x70, 0x6e, 0x6c, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x01, 0x48, 0x0c, 0x52, 0x0b, 0x72, 0x65, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x50, 0x6e,
	0x6c, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0d, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0e, 0x52, 0x0d,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x20, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x08, 0x48, 0x0f, 0x52, 0x08, 0x69, 0x73, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x10, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x14, 0x0a, 0x12,
	0x5f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f,
	0x5f, 0x69, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x42, 0x11, 0x0a,
	0x0f, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x64, 0x65, 0x6c, 0x74, 0x61,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x64, 0x65, 0x6c, 0x74, 0x61,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x6e, 0x6c, 0x5f, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x42, 0x0f,
	0x0a, 0x0d, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x70, 0x6e, 0x6c, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x11, 0x0a, 0x0f,
	0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x69, 0x73, 0x5f, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x2a, 0xd8, 0x02, 0x0a, 0x12, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x24, 0x0a, 0x20, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x48, 0x41, 0x4e,
	0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1f, 0x0a, 0x1b, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4f, 0x50,
	0x45, 0x4e, 0x45, 0x44, 0x10, 0x01, 0x12, 0x22, 0x0a, 0x1e, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49,
	0x4e, 0x43, 0x52, 0x45, 0x41, 0x53, 0x45, 0x44, 0x10, 0x02, 0x12, 0x22, 0x0a, 0x1e, 0x50, 0x4f,
	0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x44, 0x45, 0x43, 0x52, 0x45, 0x41, 0x53, 0x45, 0x44, 0x10, 0x03, 0x12, 0x1f,
	0x0a, 0x1b, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47,
	0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x44, 0x10, 0x04, 0x12,
	0x25, 0x0a, 0x21, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x48, 0x41, 0x4e,
	0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x52, 0x49, 0x43, 0x45, 0x5f, 0x55, 0x50,
	0x44, 0x41, 0x54, 0x45, 0x10, 0x05, 0x12, 0x21, 0x0a, 0x1d, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54,
	0x52, 0x41, 0x4e, 0x53, 0x46, 0x45, 0x52, 0x10, 0x06, 0x12, 0x23, 0x0a, 0x1f, 0x50, 0x4f, 0x53,
	0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x4c, 0x49, 0x51, 0x55, 0x49, 0x44, 0x41, 0x54, 0x45, 0x44, 0x10, 0x07, 0x12, 0x23,
	0x0a, 0x1f, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47,
	0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x42, 0x41, 0x4c, 0x41, 0x4e, 0x43, 0x45,
	0x44, 0x10, 0x08, 0x42, 0x3e, 0x5a, 0x3c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x2d, 0x43, 0x61, 0x70, 0x69, 0x74, 0x61,
	0x6c, 0x2f, 0x63, 0x71, 0x63, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x63, 0x71, 0x63,
	0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x3b, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_events_v1_position_events_proto_rawDescOnce sync.Once
	file_proto_events_v1_position_events_proto_rawDescData = file_proto_events_v1_position_events_proto_rawDesc
)

func file_proto_events_v1_position_events_proto_rawDescGZIP() []byte {
	file_proto_events_v1_position_events_proto_rawDescOnce.Do(func() {
		file_proto_events_v1_position_events_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_events_v1_position_events_proto_rawDescData)
	})
	return file_proto_events_v1_position_events_proto_rawDescData
}

var file_proto_events_v1_position_events_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_events_v1_position_events_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_proto_events_v1_position_events_proto_goTypes = []interface{}{
	(PositionChangeType)(0),     // 0: cqc.events.v1.PositionChangeType
	(*PositionChanged)(nil),     // 1: cqc.events.v1.PositionChanged
	(*timestamp.Timestamp)(nil), // 2: google.protobuf.Timestamp
	(*v1.Position)(nil),         // 3: cqc.portfolio.v1.Position
}
var file_proto_events_v1_position_events_proto_depIdxs = []int32{
	2, // 0: cqc.events.v1.PositionChanged.timestamp:type_name -> google.protobuf.Timestamp
	3, // 1: cqc.events.v1.PositionChanged.current_position:type_name -> cqc.portfolio.v1.Position
	3, // 2: cqc.events.v1.PositionChanged.previous_position:type_name -> cqc.portfolio.v1.Position
	0, // 3: cqc.events.v1.PositionChanged.change_type:type_name -> cqc.events.v1.PositionChangeType
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_proto_events_v1_position_events_proto_init() }
func file_proto_events_v1_position_events_proto_init() {
	if File_proto_events_v1_position_events_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_events_v1_position_events_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PositionChanged); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_events_v1_position_events_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_events_v1_position_events_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_events_v1_position_events_proto_goTypes,
		DependencyIndexes: file_proto_events_v1_position_events_proto_depIdxs,
		EnumInfos:         file_proto_events_v1_position_events_proto_enumTypes,
		MessageInfos:      file_proto_events_v1_position_events_proto_msgTypes,
	}.Build()
	File_proto_events_v1_position_events_proto = out.File
	file_proto_events_v1_position_events_proto_rawDesc = nil
	file_proto_events_v1_position_events_proto_goTypes = nil
	file_proto_events_v1_position_events_proto_depIdxs = nil
}
