// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v3.12.4
// source: proto/events/v1/position_events.proto

package eventsv1

import (
	v1 "github.com/Combine-Capital/cqc/gen/go/cqc/portfolio/v1"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// PositionChangeType represents the nature of the position change.
type PositionChangeType int32

const (
	PositionChangeType_POSITION_CHANGE_TYPE_UNSPECIFIED  PositionChangeType = 0
	PositionChangeType_POSITION_CHANGE_TYPE_OPENED       PositionChangeType = 1 // New position opened
	PositionChangeType_POSITION_CHANGE_TYPE_INCREASED    PositionChangeType = 2 // Position size increased
	PositionChangeType_POSITION_CHANGE_TYPE_DECREASED    PositionChangeType = 3 // Position size decreased
	PositionChangeType_POSITION_CHANGE_TYPE_CLOSED       PositionChangeType = 4 // Position fully closed
	PositionChangeType_POSITION_CHANGE_TYPE_PRICE_UPDATE PositionChangeType = 5 // P&L changed due to price update
	PositionChangeType_POSITION_CHANGE_TYPE_TRANSFER     PositionChangeType = 6 // Position transferred between accounts
	PositionChangeType_POSITION_CHANGE_TYPE_LIQUIDATED   PositionChangeType = 7 // Position liquidated (leveraged positions)
	PositionChangeType_POSITION_CHANGE_TYPE_REBALANCED   PositionChangeType = 8 // Position adjusted during portfolio rebalancing
)

// Enum value maps for PositionChangeType.
var (
	PositionChangeType_name = map[int32]string{
		0: "POSITION_CHANGE_TYPE_UNSPECIFIED",
		1: "POSITION_CHANGE_TYPE_OPENED",
		2: "POSITION_CHANGE_TYPE_INCREASED",
		3: "POSITION_CHANGE_TYPE_DECREASED",
		4: "POSITION_CHANGE_TYPE_CLOSED",
		5: "POSITION_CHANGE_TYPE_PRICE_UPDATE",
		6: "POSITION_CHANGE_TYPE_TRANSFER",
		7: "POSITION_CHANGE_TYPE_LIQUIDATED",
		8: "POSITION_CHANGE_TYPE_REBALANCED",
	}
	PositionChangeType_value = map[string]int32{
		"POSITION_CHANGE_TYPE_UNSPECIFIED":  0,
		"POSITION_CHANGE_TYPE_OPENED":       1,
		"POSITION_CHANGE_TYPE_INCREASED":    2,
		"POSITION_CHANGE_TYPE_DECREASED":    3,
		"POSITION_CHANGE_TYPE_CLOSED":       4,
		"POSITION_CHANGE_TYPE_PRICE_UPDATE": 5,
		"POSITION_CHANGE_TYPE_TRANSFER":     6,
		"POSITION_CHANGE_TYPE_LIQUIDATED":   7,
		"POSITION_CHANGE_TYPE_REBALANCED":   8,
	}
)

func (x PositionChangeType) Enum() *PositionChangeType {
	p := new(PositionChangeType)
	*p = x
	return p
}

func (x PositionChangeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PositionChangeType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_events_v1_position_events_proto_enumTypes[0].Descriptor()
}

func (PositionChangeType) Type() protoreflect.EnumType {
	return &file_proto_events_v1_position_events_proto_enumTypes[0]
}

func (x PositionChangeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PositionChangeType.Descriptor instead.
func (PositionChangeType) EnumDescriptor() ([]byte, []int) {
	return file_proto_events_v1_position_events_proto_rawDescGZIP(), []int{0}
}

// PositionChanged event is published when a position is created, modified, or closed.
// This event notifies services of portfolio changes for risk monitoring, P&L tracking, and reporting.
type PositionChanged struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique event identifier for idempotency and deduplication.
	EventId *string `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3,oneof" json:"event_id,omitempty"`
	// Timestamp when this event was generated.
	Timestamp *timestamp.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3,oneof" json:"timestamp,omitempty"`
	// Identifier of the actor (user, service, or system) that triggered the position change.
	// Format: "user:{uuid}", "service:{service_name}", or "system".
	ActorId *string `protobuf:"bytes,3,opt,name=actor_id,json=actorId,proto3,oneof" json:"actor_id,omitempty"`
	// The current state of the position after the change.
	CurrentPosition *v1.Position `protobuf:"bytes,4,opt,name=current_position,json=currentPosition,proto3,oneof" json:"current_position,omitempty"`
	// The previous state of the position before the change.
	// NULL/unset for newly opened positions.
	PreviousPosition *v1.Position `protobuf:"bytes,5,opt,name=previous_position,json=previousPosition,proto3,oneof" json:"previous_position,omitempty"`
	// Type of change that occurred.
	ChangeType *PositionChangeType `protobuf:"varint,6,opt,name=change_type,json=changeType,proto3,enum=cqc.events.v1.PositionChangeType,oneof" json:"change_type,omitempty"`
	// Portfolio identifier.
	// Duplicated from position for event filtering purposes.
	PortfolioId *string `protobuf:"bytes,7,opt,name=portfolio_id,json=portfolioId,proto3,oneof" json:"portfolio_id,omitempty"`
	// Asset identifier.
	// Duplicated from position for event filtering purposes.
	AssetId *string `protobuf:"bytes,8,opt,name=asset_id,json=assetId,proto3,oneof" json:"asset_id,omitempty"`
	// Venue identifier where the position is held.
	// Duplicated from position for event filtering purposes.
	VenueId *string `protobuf:"bytes,9,opt,name=venue_id,json=venueId,proto3,oneof" json:"venue_id,omitempty"`
	// Change in quantity (positive for increases, negative for decreases).
	QuantityDelta *float64 `protobuf:"fixed64,10,opt,name=quantity_delta,json=quantityDelta,proto3,oneof" json:"quantity_delta,omitempty"`
	// Change in value (current_value - previous_value).
	ValueDelta *float64 `protobuf:"fixed64,11,opt,name=value_delta,json=valueDelta,proto3,oneof" json:"value_delta,omitempty"`
	// Change in unrealized P&L.
	PnlDelta *float64 `protobuf:"fixed64,12,opt,name=pnl_delta,json=pnlDelta,proto3,oneof" json:"pnl_delta,omitempty"`
	// Realized P&L from this change (for partial/full closes).
	// Zero for price updates or position increases.
	RealizedPnl *float64 `protobuf:"fixed64,13,opt,name=realized_pnl,json=realizedPnl,proto3,oneof" json:"realized_pnl,omitempty"`
	// Order ID that caused this position change (if applicable).
	// NULL for non-order-based changes (price updates, transfers, etc.).
	OrderId *string `protobuf:"bytes,14,opt,name=order_id,json=orderId,proto3,oneof" json:"order_id,omitempty"`
	// Transaction ID that caused this position change (if applicable).
	TransactionId *string `protobuf:"bytes,15,opt,name=transaction_id,json=transactionId,proto3,oneof" json:"transaction_id,omitempty"`
	// Whether this position is now closed.
	IsClosed *bool `protobuf:"varint,16,opt,name=is_closed,json=isClosed,proto3,oneof" json:"is_closed,omitempty"`
	// Reason for the position change (e.g., "trade_execution", "price_update", "manual_adjustment", "liquidation").
	Reason        *string `protobuf:"bytes,17,opt,name=reason,proto3,oneof" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PositionChanged) Reset() {
	*x = PositionChanged{}
	mi := &file_proto_events_v1_position_events_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PositionChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PositionChanged) ProtoMessage() {}

func (x *PositionChanged) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_v1_position_events_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PositionChanged.ProtoReflect.Descriptor instead.
func (*PositionChanged) Descriptor() ([]byte, []int) {
	return file_proto_events_v1_position_events_proto_rawDescGZIP(), []int{0}
}

func (x *PositionChanged) GetEventId() string {
	if x != nil && x.EventId != nil {
		return *x.EventId
	}
	return ""
}

func (x *PositionChanged) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *PositionChanged) GetActorId() string {
	if x != nil && x.ActorId != nil {
		return *x.ActorId
	}
	return ""
}

func (x *PositionChanged) GetCurrentPosition() *v1.Position {
	if x != nil {
		return x.CurrentPosition
	}
	return nil
}

func (x *PositionChanged) GetPreviousPosition() *v1.Position {
	if x != nil {
		return x.PreviousPosition
	}
	return nil
}

func (x *PositionChanged) GetChangeType() PositionChangeType {
	if x != nil && x.ChangeType != nil {
		return *x.ChangeType
	}
	return PositionChangeType_POSITION_CHANGE_TYPE_UNSPECIFIED
}

func (x *PositionChanged) GetPortfolioId() string {
	if x != nil && x.PortfolioId != nil {
		return *x.PortfolioId
	}
	return ""
}

func (x *PositionChanged) GetAssetId() string {
	if x != nil && x.AssetId != nil {
		return *x.AssetId
	}
	return ""
}

func (x *PositionChanged) GetVenueId() string {
	if x != nil && x.VenueId != nil {
		return *x.VenueId
	}
	return ""
}

func (x *PositionChanged) GetQuantityDelta() float64 {
	if x != nil && x.QuantityDelta != nil {
		return *x.QuantityDelta
	}
	return 0
}

func (x *PositionChanged) GetValueDelta() float64 {
	if x != nil && x.ValueDelta != nil {
		return *x.ValueDelta
	}
	return 0
}

func (x *PositionChanged) GetPnlDelta() float64 {
	if x != nil && x.PnlDelta != nil {
		return *x.PnlDelta
	}
	return 0
}

func (x *PositionChanged) GetRealizedPnl() float64 {
	if x != nil && x.RealizedPnl != nil {
		return *x.RealizedPnl
	}
	return 0
}

func (x *PositionChanged) GetOrderId() string {
	if x != nil && x.OrderId != nil {
		return *x.OrderId
	}
	return ""
}

func (x *PositionChanged) GetTransactionId() string {
	if x != nil && x.TransactionId != nil {
		return *x.TransactionId
	}
	return ""
}

func (x *PositionChanged) GetIsClosed() bool {
	if x != nil && x.IsClosed != nil {
		return *x.IsClosed
	}
	return false
}

func (x *PositionChanged) GetReason() string {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return ""
}

var File_proto_events_v1_position_events_proto protoreflect.FileDescriptor

const file_proto_events_v1_position_events_proto_rawDesc = "" +
	"\n" +
	"%proto/events/v1/position_events.proto\x12\rcqc.events.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a!proto/portfolio/v1/position.proto\"\x8b\b\n" +
	"\x0fPositionChanged\x12\x1e\n" +
	"\bevent_id\x18\x01 \x01(\tH\x00R\aeventId\x88\x01\x01\x12=\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampH\x01R\ttimestamp\x88\x01\x01\x12\x1e\n" +
	"\bactor_id\x18\x03 \x01(\tH\x02R\aactorId\x88\x01\x01\x12J\n" +
	"\x10current_position\x18\x04 \x01(\v2\x1a.cqc.portfolio.v1.PositionH\x03R\x0fcurrentPosition\x88\x01\x01\x12L\n" +
	"\x11previous_position\x18\x05 \x01(\v2\x1a.cqc.portfolio.v1.PositionH\x04R\x10previousPosition\x88\x01\x01\x12G\n" +
	"\vchange_type\x18\x06 \x01(\x0e2!.cqc.events.v1.PositionChangeTypeH\x05R\n" +
	"changeType\x88\x01\x01\x12&\n" +
	"\fportfolio_id\x18\a \x01(\tH\x06R\vportfolioId\x88\x01\x01\x12\x1e\n" +
	"\basset_id\x18\b \x01(\tH\aR\aassetId\x88\x01\x01\x12\x1e\n" +
	"\bvenue_id\x18\t \x01(\tH\bR\avenueId\x88\x01\x01\x12*\n" +
	"\x0equantity_delta\x18\n" +
	" \x01(\x01H\tR\rquantityDelta\x88\x01\x01\x12$\n" +
	"\vvalue_delta\x18\v \x01(\x01H\n" +
	"R\n" +
	"valueDelta\x88\x01\x01\x12 \n" +
	"\tpnl_delta\x18\f \x01(\x01H\vR\bpnlDelta\x88\x01\x01\x12&\n" +
	"\frealized_pnl\x18\r \x01(\x01H\fR\vrealizedPnl\x88\x01\x01\x12\x1e\n" +
	"\border_id\x18\x0e \x01(\tH\rR\aorderId\x88\x01\x01\x12*\n" +
	"\x0etransaction_id\x18\x0f \x01(\tH\x0eR\rtransactionId\x88\x01\x01\x12 \n" +
	"\tis_closed\x18\x10 \x01(\bH\x0fR\bisClosed\x88\x01\x01\x12\x1b\n" +
	"\x06reason\x18\x11 \x01(\tH\x10R\x06reason\x88\x01\x01B\v\n" +
	"\t_event_idB\f\n" +
	"\n" +
	"_timestampB\v\n" +
	"\t_actor_idB\x13\n" +
	"\x11_current_positionB\x14\n" +
	"\x12_previous_positionB\x0e\n" +
	"\f_change_typeB\x0f\n" +
	"\r_portfolio_idB\v\n" +
	"\t_asset_idB\v\n" +
	"\t_venue_idB\x11\n" +
	"\x0f_quantity_deltaB\x0e\n" +
	"\f_value_deltaB\f\n" +
	"\n" +
	"_pnl_deltaB\x0f\n" +
	"\r_realized_pnlB\v\n" +
	"\t_order_idB\x11\n" +
	"\x0f_transaction_idB\f\n" +
	"\n" +
	"_is_closedB\t\n" +
	"\a_reason*\xd8\x02\n" +
	"\x12PositionChangeType\x12$\n" +
	" POSITION_CHANGE_TYPE_UNSPECIFIED\x10\x00\x12\x1f\n" +
	"\x1bPOSITION_CHANGE_TYPE_OPENED\x10\x01\x12\"\n" +
	"\x1ePOSITION_CHANGE_TYPE_INCREASED\x10\x02\x12\"\n" +
	"\x1ePOSITION_CHANGE_TYPE_DECREASED\x10\x03\x12\x1f\n" +
	"\x1bPOSITION_CHANGE_TYPE_CLOSED\x10\x04\x12%\n" +
	"!POSITION_CHANGE_TYPE_PRICE_UPDATE\x10\x05\x12!\n" +
	"\x1dPOSITION_CHANGE_TYPE_TRANSFER\x10\x06\x12#\n" +
	"\x1fPOSITION_CHANGE_TYPE_LIQUIDATED\x10\a\x12#\n" +
	"\x1fPOSITION_CHANGE_TYPE_REBALANCED\x10\bB>Z<github.com/Combine-Capital/cqc/gen/go/cqc/events/v1;eventsv1b\x06proto3"

var (
	file_proto_events_v1_position_events_proto_rawDescOnce sync.Once
	file_proto_events_v1_position_events_proto_rawDescData []byte
)

func file_proto_events_v1_position_events_proto_rawDescGZIP() []byte {
	file_proto_events_v1_position_events_proto_rawDescOnce.Do(func() {
		file_proto_events_v1_position_events_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_events_v1_position_events_proto_rawDesc), len(file_proto_events_v1_position_events_proto_rawDesc)))
	})
	return file_proto_events_v1_position_events_proto_rawDescData
}

var file_proto_events_v1_position_events_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_events_v1_position_events_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_proto_events_v1_position_events_proto_goTypes = []any{
	(PositionChangeType)(0),     // 0: cqc.events.v1.PositionChangeType
	(*PositionChanged)(nil),     // 1: cqc.events.v1.PositionChanged
	(*timestamp.Timestamp)(nil), // 2: google.protobuf.Timestamp
	(*v1.Position)(nil),         // 3: cqc.portfolio.v1.Position
}
var file_proto_events_v1_position_events_proto_depIdxs = []int32{
	2, // 0: cqc.events.v1.PositionChanged.timestamp:type_name -> google.protobuf.Timestamp
	3, // 1: cqc.events.v1.PositionChanged.current_position:type_name -> cqc.portfolio.v1.Position
	3, // 2: cqc.events.v1.PositionChanged.previous_position:type_name -> cqc.portfolio.v1.Position
	0, // 3: cqc.events.v1.PositionChanged.change_type:type_name -> cqc.events.v1.PositionChangeType
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_proto_events_v1_position_events_proto_init() }
func file_proto_events_v1_position_events_proto_init() {
	if File_proto_events_v1_position_events_proto != nil {
		return
	}
	file_proto_events_v1_position_events_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_events_v1_position_events_proto_rawDesc), len(file_proto_events_v1_position_events_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_events_v1_position_events_proto_goTypes,
		DependencyIndexes: file_proto_events_v1_position_events_proto_depIdxs,
		EnumInfos:         file_proto_events_v1_position_events_proto_enumTypes,
		MessageInfos:      file_proto_events_v1_position_events_proto_msgTypes,
	}.Build()
	File_proto_events_v1_position_events_proto = out.File
	file_proto_events_v1_position_events_proto_goTypes = nil
	file_proto_events_v1_position_events_proto_depIdxs = nil
}
