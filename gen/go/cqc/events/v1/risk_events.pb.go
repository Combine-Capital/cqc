// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v3.12.4
// source: proto/events/v1/risk_events.proto

package eventsv1

import (
	v1 "github.com/Combine-Capital/cqc/gen/go/cqc/assets/v1"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// RiskAlertType represents the category of risk alert.
type RiskAlertType int32

const (
	RiskAlertType_RISK_ALERT_TYPE_UNSPECIFIED      RiskAlertType = 0
	RiskAlertType_RISK_ALERT_TYPE_POSITION_LIMIT   RiskAlertType = 1  // Position size exceeds limits
	RiskAlertType_RISK_ALERT_TYPE_CONCENTRATION    RiskAlertType = 2  // Portfolio concentration risk
	RiskAlertType_RISK_ALERT_TYPE_LEVERAGE         RiskAlertType = 3  // Leverage exceeds thresholds
	RiskAlertType_RISK_ALERT_TYPE_MARGIN_CALL      RiskAlertType = 4  // Margin call triggered
	RiskAlertType_RISK_ALERT_TYPE_LIQUIDATION_RISK RiskAlertType = 5  // Position approaching liquidation
	RiskAlertType_RISK_ALERT_TYPE_VOLATILITY       RiskAlertType = 6  // High volatility detected
	RiskAlertType_RISK_ALERT_TYPE_CORRELATION      RiskAlertType = 7  // Correlation risk identified
	RiskAlertType_RISK_ALERT_TYPE_LIQUIDITY        RiskAlertType = 8  // Insufficient liquidity
	RiskAlertType_RISK_ALERT_TYPE_EXPOSURE         RiskAlertType = 9  // Excessive exposure to asset/venue/chain
	RiskAlertType_RISK_ALERT_TYPE_DRAWDOWN         RiskAlertType = 10 // Drawdown threshold exceeded
	RiskAlertType_RISK_ALERT_TYPE_VAR_BREACH       RiskAlertType = 11 // Value-at-Risk threshold breached
	RiskAlertType_RISK_ALERT_TYPE_COUNTERPARTY     RiskAlertType = 12 // Counterparty risk concern
)

// Enum value maps for RiskAlertType.
var (
	RiskAlertType_name = map[int32]string{
		0:  "RISK_ALERT_TYPE_UNSPECIFIED",
		1:  "RISK_ALERT_TYPE_POSITION_LIMIT",
		2:  "RISK_ALERT_TYPE_CONCENTRATION",
		3:  "RISK_ALERT_TYPE_LEVERAGE",
		4:  "RISK_ALERT_TYPE_MARGIN_CALL",
		5:  "RISK_ALERT_TYPE_LIQUIDATION_RISK",
		6:  "RISK_ALERT_TYPE_VOLATILITY",
		7:  "RISK_ALERT_TYPE_CORRELATION",
		8:  "RISK_ALERT_TYPE_LIQUIDITY",
		9:  "RISK_ALERT_TYPE_EXPOSURE",
		10: "RISK_ALERT_TYPE_DRAWDOWN",
		11: "RISK_ALERT_TYPE_VAR_BREACH",
		12: "RISK_ALERT_TYPE_COUNTERPARTY",
	}
	RiskAlertType_value = map[string]int32{
		"RISK_ALERT_TYPE_UNSPECIFIED":      0,
		"RISK_ALERT_TYPE_POSITION_LIMIT":   1,
		"RISK_ALERT_TYPE_CONCENTRATION":    2,
		"RISK_ALERT_TYPE_LEVERAGE":         3,
		"RISK_ALERT_TYPE_MARGIN_CALL":      4,
		"RISK_ALERT_TYPE_LIQUIDATION_RISK": 5,
		"RISK_ALERT_TYPE_VOLATILITY":       6,
		"RISK_ALERT_TYPE_CORRELATION":      7,
		"RISK_ALERT_TYPE_LIQUIDITY":        8,
		"RISK_ALERT_TYPE_EXPOSURE":         9,
		"RISK_ALERT_TYPE_DRAWDOWN":         10,
		"RISK_ALERT_TYPE_VAR_BREACH":       11,
		"RISK_ALERT_TYPE_COUNTERPARTY":     12,
	}
)

func (x RiskAlertType) Enum() *RiskAlertType {
	p := new(RiskAlertType)
	*p = x
	return p
}

func (x RiskAlertType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RiskAlertType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_events_v1_risk_events_proto_enumTypes[0].Descriptor()
}

func (RiskAlertType) Type() protoreflect.EnumType {
	return &file_proto_events_v1_risk_events_proto_enumTypes[0]
}

func (x RiskAlertType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RiskAlertType.Descriptor instead.
func (RiskAlertType) EnumDescriptor() ([]byte, []int) {
	return file_proto_events_v1_risk_events_proto_rawDescGZIP(), []int{0}
}

// RiskAlertSeverity represents the criticality of the risk alert.
type RiskAlertSeverity int32

const (
	RiskAlertSeverity_RISK_ALERT_SEVERITY_UNSPECIFIED RiskAlertSeverity = 0
	RiskAlertSeverity_RISK_ALERT_SEVERITY_INFO        RiskAlertSeverity = 1 // Informational alert
	RiskAlertSeverity_RISK_ALERT_SEVERITY_LOW         RiskAlertSeverity = 2 // Low severity - monitor
	RiskAlertSeverity_RISK_ALERT_SEVERITY_MEDIUM      RiskAlertSeverity = 3 // Medium severity - review required
	RiskAlertSeverity_RISK_ALERT_SEVERITY_HIGH        RiskAlertSeverity = 4 // High severity - action recommended
	RiskAlertSeverity_RISK_ALERT_SEVERITY_CRITICAL    RiskAlertSeverity = 5 // Critical severity - immediate action required
)

// Enum value maps for RiskAlertSeverity.
var (
	RiskAlertSeverity_name = map[int32]string{
		0: "RISK_ALERT_SEVERITY_UNSPECIFIED",
		1: "RISK_ALERT_SEVERITY_INFO",
		2: "RISK_ALERT_SEVERITY_LOW",
		3: "RISK_ALERT_SEVERITY_MEDIUM",
		4: "RISK_ALERT_SEVERITY_HIGH",
		5: "RISK_ALERT_SEVERITY_CRITICAL",
	}
	RiskAlertSeverity_value = map[string]int32{
		"RISK_ALERT_SEVERITY_UNSPECIFIED": 0,
		"RISK_ALERT_SEVERITY_INFO":        1,
		"RISK_ALERT_SEVERITY_LOW":         2,
		"RISK_ALERT_SEVERITY_MEDIUM":      3,
		"RISK_ALERT_SEVERITY_HIGH":        4,
		"RISK_ALERT_SEVERITY_CRITICAL":    5,
	}
)

func (x RiskAlertSeverity) Enum() *RiskAlertSeverity {
	p := new(RiskAlertSeverity)
	*p = x
	return p
}

func (x RiskAlertSeverity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RiskAlertSeverity) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_events_v1_risk_events_proto_enumTypes[1].Descriptor()
}

func (RiskAlertSeverity) Type() protoreflect.EnumType {
	return &file_proto_events_v1_risk_events_proto_enumTypes[1]
}

func (x RiskAlertSeverity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RiskAlertSeverity.Descriptor instead.
func (RiskAlertSeverity) EnumDescriptor() ([]byte, []int) {
	return file_proto_events_v1_risk_events_proto_rawDescGZIP(), []int{1}
}

// RiskAlert event is published when a risk threshold is breached or a risk condition is detected.
// This event notifies services and users of potential risks requiring attention or action.
type RiskAlert struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique event identifier for idempotency and deduplication.
	EventId *string `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3,oneof" json:"event_id,omitempty"`
	// Timestamp when this event was generated.
	Timestamp *timestamp.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3,oneof" json:"timestamp,omitempty"`
	// Identifier of the service or system that detected the risk.
	// Format: "service:{service_name}" (typically "service:risk_engine").
	ActorId *string `protobuf:"bytes,3,opt,name=actor_id,json=actorId,proto3,oneof" json:"actor_id,omitempty"`
	// Type of risk alert.
	AlertType *RiskAlertType `protobuf:"varint,4,opt,name=alert_type,json=alertType,proto3,enum=cqc.events.v1.RiskAlertType,oneof" json:"alert_type,omitempty"`
	// Severity level of this alert.
	Severity *RiskAlertSeverity `protobuf:"varint,5,opt,name=severity,proto3,enum=cqc.events.v1.RiskAlertSeverity,oneof" json:"severity,omitempty"`
	// Human-readable message describing the risk.
	Message *string `protobuf:"bytes,6,opt,name=message,proto3,oneof" json:"message,omitempty"`
	// Portfolio identifier affected by this risk (if applicable).
	PortfolioId *string `protobuf:"bytes,7,opt,name=portfolio_id,json=portfolioId,proto3,oneof" json:"portfolio_id,omitempty"`
	// Position identifier affected by this risk (if applicable).
	PositionId *string `protobuf:"bytes,8,opt,name=position_id,json=positionId,proto3,oneof" json:"position_id,omitempty"`
	// Asset identifier affected by this risk (if applicable).
	AssetId *string `protobuf:"bytes,9,opt,name=asset_id,json=assetId,proto3,oneof" json:"asset_id,omitempty"`
	// Venue identifier affected by this risk (if applicable).
	VenueId *string `protobuf:"bytes,10,opt,name=venue_id,json=venueId,proto3,oneof" json:"venue_id,omitempty"`
	// Threshold value that triggered this alert.
	// Example: 0.25 for 25% concentration threshold.
	ThresholdValue *float64 `protobuf:"fixed64,11,opt,name=threshold_value,json=thresholdValue,proto3,oneof" json:"threshold_value,omitempty"`
	// Current value that exceeded the threshold.
	// Example: 0.32 for 32% actual concentration.
	CurrentValue *float64 `protobuf:"fixed64,12,opt,name=current_value,json=currentValue,proto3,oneof" json:"current_value,omitempty"`
	// Recommended action to mitigate the risk.
	RecommendedAction *string `protobuf:"bytes,13,opt,name=recommended_action,json=recommendedAction,proto3,oneof" json:"recommended_action,omitempty"`
	// Risk score or metric associated with this alert (0.0 to 1.0 or unbounded).
	RiskScore *float64 `protobuf:"fixed64,14,opt,name=risk_score,json=riskScore,proto3,oneof" json:"risk_score,omitempty"`
	// Whether this alert requires immediate action.
	RequiresImmediateAction *bool `protobuf:"varint,15,opt,name=requires_immediate_action,json=requiresImmediateAction,proto3,oneof" json:"requires_immediate_action,omitempty"`
	// Timestamp when this alert should be considered resolved (auto-expiry).
	// NULL/unset if the alert remains active until manually resolved.
	ExpiresAt *timestamp.Timestamp `protobuf:"bytes,16,opt,name=expires_at,json=expiresAt,proto3,oneof" json:"expires_at,omitempty"`
	// Additional alert-specific context or metadata.
	// Can include detailed calculations, affected entities, etc.
	Context       *string `protobuf:"bytes,17,opt,name=context,proto3,oneof" json:"context,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RiskAlert) Reset() {
	*x = RiskAlert{}
	mi := &file_proto_events_v1_risk_events_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RiskAlert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskAlert) ProtoMessage() {}

func (x *RiskAlert) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_v1_risk_events_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskAlert.ProtoReflect.Descriptor instead.
func (*RiskAlert) Descriptor() ([]byte, []int) {
	return file_proto_events_v1_risk_events_proto_rawDescGZIP(), []int{0}
}

func (x *RiskAlert) GetEventId() string {
	if x != nil && x.EventId != nil {
		return *x.EventId
	}
	return ""
}

func (x *RiskAlert) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *RiskAlert) GetActorId() string {
	if x != nil && x.ActorId != nil {
		return *x.ActorId
	}
	return ""
}

func (x *RiskAlert) GetAlertType() RiskAlertType {
	if x != nil && x.AlertType != nil {
		return *x.AlertType
	}
	return RiskAlertType_RISK_ALERT_TYPE_UNSPECIFIED
}

func (x *RiskAlert) GetSeverity() RiskAlertSeverity {
	if x != nil && x.Severity != nil {
		return *x.Severity
	}
	return RiskAlertSeverity_RISK_ALERT_SEVERITY_UNSPECIFIED
}

func (x *RiskAlert) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *RiskAlert) GetPortfolioId() string {
	if x != nil && x.PortfolioId != nil {
		return *x.PortfolioId
	}
	return ""
}

func (x *RiskAlert) GetPositionId() string {
	if x != nil && x.PositionId != nil {
		return *x.PositionId
	}
	return ""
}

func (x *RiskAlert) GetAssetId() string {
	if x != nil && x.AssetId != nil {
		return *x.AssetId
	}
	return ""
}

func (x *RiskAlert) GetVenueId() string {
	if x != nil && x.VenueId != nil {
		return *x.VenueId
	}
	return ""
}

func (x *RiskAlert) GetThresholdValue() float64 {
	if x != nil && x.ThresholdValue != nil {
		return *x.ThresholdValue
	}
	return 0
}

func (x *RiskAlert) GetCurrentValue() float64 {
	if x != nil && x.CurrentValue != nil {
		return *x.CurrentValue
	}
	return 0
}

func (x *RiskAlert) GetRecommendedAction() string {
	if x != nil && x.RecommendedAction != nil {
		return *x.RecommendedAction
	}
	return ""
}

func (x *RiskAlert) GetRiskScore() float64 {
	if x != nil && x.RiskScore != nil {
		return *x.RiskScore
	}
	return 0
}

func (x *RiskAlert) GetRequiresImmediateAction() bool {
	if x != nil && x.RequiresImmediateAction != nil {
		return *x.RequiresImmediateAction
	}
	return false
}

func (x *RiskAlert) GetExpiresAt() *timestamp.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *RiskAlert) GetContext() string {
	if x != nil && x.Context != nil {
		return *x.Context
	}
	return ""
}

// QualityFlagRaised event is published when a quality or safety flag is raised for an asset.
// This event notifies services of potential issues with assets (scams, exploits, low liquidity, etc.).
type QualityFlagRaised struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique event identifier for idempotency and deduplication.
	EventId *string `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3,oneof" json:"event_id,omitempty"`
	// Timestamp when this event was generated.
	Timestamp *timestamp.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3,oneof" json:"timestamp,omitempty"`
	// Identifier of the service or system that raised the flag.
	// Format: "service:{service_name}" or "system".
	ActorId *string `protobuf:"bytes,3,opt,name=actor_id,json=actorId,proto3,oneof" json:"actor_id,omitempty"`
	// The quality flag that was raised.
	Flag *v1.AssetQualityFlag `protobuf:"bytes,4,opt,name=flag,proto3,oneof" json:"flag,omitempty"`
	// Asset identifier affected by this flag.
	// Duplicated from flag for event filtering purposes.
	AssetId *string `protobuf:"bytes,5,opt,name=asset_id,json=assetId,proto3,oneof" json:"asset_id,omitempty"`
	// Type of flag raised.
	// Duplicated from flag for event filtering purposes.
	FlagType *v1.FlagType `protobuf:"varint,6,opt,name=flag_type,json=flagType,proto3,enum=cqc.assets.v1.FlagType,oneof" json:"flag_type,omitempty"`
	// Severity level of this flag.
	// Duplicated from flag for event filtering purposes.
	Severity *v1.FlagSeverity `protobuf:"varint,7,opt,name=severity,proto3,enum=cqc.assets.v1.FlagSeverity,oneof" json:"severity,omitempty"`
	// Source of the flag (e.g., "certik", "tokensniffer", "manual", "coingecko").
	// Duplicated from flag for event filtering purposes.
	Source *string `protobuf:"bytes,8,opt,name=source,proto3,oneof" json:"source,omitempty"`
	// Whether trading should be automatically suspended for this asset.
	SuspendTrading *bool `protobuf:"varint,9,opt,name=suspend_trading,json=suspendTrading,proto3,oneof" json:"suspend_trading,omitempty"`
	// Whether existing positions should be automatically closed.
	ForceClosePositions *bool `protobuf:"varint,10,opt,name=force_close_positions,json=forceClosePositions,proto3,oneof" json:"force_close_positions,omitempty"`
	// Human-readable alert message for users.
	AlertMessage  *string `protobuf:"bytes,11,opt,name=alert_message,json=alertMessage,proto3,oneof" json:"alert_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QualityFlagRaised) Reset() {
	*x = QualityFlagRaised{}
	mi := &file_proto_events_v1_risk_events_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QualityFlagRaised) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QualityFlagRaised) ProtoMessage() {}

func (x *QualityFlagRaised) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_v1_risk_events_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QualityFlagRaised.ProtoReflect.Descriptor instead.
func (*QualityFlagRaised) Descriptor() ([]byte, []int) {
	return file_proto_events_v1_risk_events_proto_rawDescGZIP(), []int{1}
}

func (x *QualityFlagRaised) GetEventId() string {
	if x != nil && x.EventId != nil {
		return *x.EventId
	}
	return ""
}

func (x *QualityFlagRaised) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *QualityFlagRaised) GetActorId() string {
	if x != nil && x.ActorId != nil {
		return *x.ActorId
	}
	return ""
}

func (x *QualityFlagRaised) GetFlag() *v1.AssetQualityFlag {
	if x != nil {
		return x.Flag
	}
	return nil
}

func (x *QualityFlagRaised) GetAssetId() string {
	if x != nil && x.AssetId != nil {
		return *x.AssetId
	}
	return ""
}

func (x *QualityFlagRaised) GetFlagType() v1.FlagType {
	if x != nil && x.FlagType != nil {
		return *x.FlagType
	}
	return v1.FlagType(0)
}

func (x *QualityFlagRaised) GetSeverity() v1.FlagSeverity {
	if x != nil && x.Severity != nil {
		return *x.Severity
	}
	return v1.FlagSeverity(0)
}

func (x *QualityFlagRaised) GetSource() string {
	if x != nil && x.Source != nil {
		return *x.Source
	}
	return ""
}

func (x *QualityFlagRaised) GetSuspendTrading() bool {
	if x != nil && x.SuspendTrading != nil {
		return *x.SuspendTrading
	}
	return false
}

func (x *QualityFlagRaised) GetForceClosePositions() bool {
	if x != nil && x.ForceClosePositions != nil {
		return *x.ForceClosePositions
	}
	return false
}

func (x *QualityFlagRaised) GetAlertMessage() string {
	if x != nil && x.AlertMessage != nil {
		return *x.AlertMessage
	}
	return ""
}

var File_proto_events_v1_risk_events_proto protoreflect.FileDescriptor

const file_proto_events_v1_risk_events_proto_rawDesc = "" +
	"\n" +
	"!proto/events/v1/risk_events.proto\x12\rcqc.events.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1dproto/assets/v1/quality.proto\"\x9c\b\n" +
	"\tRiskAlert\x12\x1e\n" +
	"\bevent_id\x18\x01 \x01(\tH\x00R\aeventId\x88\x01\x01\x12=\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampH\x01R\ttimestamp\x88\x01\x01\x12\x1e\n" +
	"\bactor_id\x18\x03 \x01(\tH\x02R\aactorId\x88\x01\x01\x12@\n" +
	"\n" +
	"alert_type\x18\x04 \x01(\x0e2\x1c.cqc.events.v1.RiskAlertTypeH\x03R\talertType\x88\x01\x01\x12A\n" +
	"\bseverity\x18\x05 \x01(\x0e2 .cqc.events.v1.RiskAlertSeverityH\x04R\bseverity\x88\x01\x01\x12\x1d\n" +
	"\amessage\x18\x06 \x01(\tH\x05R\amessage\x88\x01\x01\x12&\n" +
	"\fportfolio_id\x18\a \x01(\tH\x06R\vportfolioId\x88\x01\x01\x12$\n" +
	"\vposition_id\x18\b \x01(\tH\aR\n" +
	"positionId\x88\x01\x01\x12\x1e\n" +
	"\basset_id\x18\t \x01(\tH\bR\aassetId\x88\x01\x01\x12\x1e\n" +
	"\bvenue_id\x18\n" +
	" \x01(\tH\tR\avenueId\x88\x01\x01\x12,\n" +
	"\x0fthreshold_value\x18\v \x01(\x01H\n" +
	"R\x0ethresholdValue\x88\x01\x01\x12(\n" +
	"\rcurrent_value\x18\f \x01(\x01H\vR\fcurrentValue\x88\x01\x01\x122\n" +
	"\x12recommended_action\x18\r \x01(\tH\fR\x11recommendedAction\x88\x01\x01\x12\"\n" +
	"\n" +
	"risk_score\x18\x0e \x01(\x01H\rR\triskScore\x88\x01\x01\x12?\n" +
	"\x19requires_immediate_action\x18\x0f \x01(\bH\x0eR\x17requiresImmediateAction\x88\x01\x01\x12>\n" +
	"\n" +
	"expires_at\x18\x10 \x01(\v2\x1a.google.protobuf.TimestampH\x0fR\texpiresAt\x88\x01\x01\x12\x1d\n" +
	"\acontext\x18\x11 \x01(\tH\x10R\acontext\x88\x01\x01B\v\n" +
	"\t_event_idB\f\n" +
	"\n" +
	"_timestampB\v\n" +
	"\t_actor_idB\r\n" +
	"\v_alert_typeB\v\n" +
	"\t_severityB\n" +
	"\n" +
	"\b_messageB\x0f\n" +
	"\r_portfolio_idB\x0e\n" +
	"\f_position_idB\v\n" +
	"\t_asset_idB\v\n" +
	"\t_venue_idB\x12\n" +
	"\x10_threshold_valueB\x10\n" +
	"\x0e_current_valueB\x15\n" +
	"\x13_recommended_actionB\r\n" +
	"\v_risk_scoreB\x1c\n" +
	"\x1a_requires_immediate_actionB\r\n" +
	"\v_expires_atB\n" +
	"\n" +
	"\b_context\"\xb7\x05\n" +
	"\x11QualityFlagRaised\x12\x1e\n" +
	"\bevent_id\x18\x01 \x01(\tH\x00R\aeventId\x88\x01\x01\x12=\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampH\x01R\ttimestamp\x88\x01\x01\x12\x1e\n" +
	"\bactor_id\x18\x03 \x01(\tH\x02R\aactorId\x88\x01\x01\x128\n" +
	"\x04flag\x18\x04 \x01(\v2\x1f.cqc.assets.v1.AssetQualityFlagH\x03R\x04flag\x88\x01\x01\x12\x1e\n" +
	"\basset_id\x18\x05 \x01(\tH\x04R\aassetId\x88\x01\x01\x129\n" +
	"\tflag_type\x18\x06 \x01(\x0e2\x17.cqc.assets.v1.FlagTypeH\x05R\bflagType\x88\x01\x01\x12<\n" +
	"\bseverity\x18\a \x01(\x0e2\x1b.cqc.assets.v1.FlagSeverityH\x06R\bseverity\x88\x01\x01\x12\x1b\n" +
	"\x06source\x18\b \x01(\tH\aR\x06source\x88\x01\x01\x12,\n" +
	"\x0fsuspend_trading\x18\t \x01(\bH\bR\x0esuspendTrading\x88\x01\x01\x127\n" +
	"\x15force_close_positions\x18\n" +
	" \x01(\bH\tR\x13forceClosePositions\x88\x01\x01\x12(\n" +
	"\ralert_message\x18\v \x01(\tH\n" +
	"R\falertMessage\x88\x01\x01B\v\n" +
	"\t_event_idB\f\n" +
	"\n" +
	"_timestampB\v\n" +
	"\t_actor_idB\a\n" +
	"\x05_flagB\v\n" +
	"\t_asset_idB\f\n" +
	"\n" +
	"_flag_typeB\v\n" +
	"\t_severityB\t\n" +
	"\a_sourceB\x12\n" +
	"\x10_suspend_tradingB\x18\n" +
	"\x16_force_close_positionsB\x10\n" +
	"\x0e_alert_message*\xba\x03\n" +
	"\rRiskAlertType\x12\x1f\n" +
	"\x1bRISK_ALERT_TYPE_UNSPECIFIED\x10\x00\x12\"\n" +
	"\x1eRISK_ALERT_TYPE_POSITION_LIMIT\x10\x01\x12!\n" +
	"\x1dRISK_ALERT_TYPE_CONCENTRATION\x10\x02\x12\x1c\n" +
	"\x18RISK_ALERT_TYPE_LEVERAGE\x10\x03\x12\x1f\n" +
	"\x1bRISK_ALERT_TYPE_MARGIN_CALL\x10\x04\x12$\n" +
	" RISK_ALERT_TYPE_LIQUIDATION_RISK\x10\x05\x12\x1e\n" +
	"\x1aRISK_ALERT_TYPE_VOLATILITY\x10\x06\x12\x1f\n" +
	"\x1bRISK_ALERT_TYPE_CORRELATION\x10\a\x12\x1d\n" +
	"\x19RISK_ALERT_TYPE_LIQUIDITY\x10\b\x12\x1c\n" +
	"\x18RISK_ALERT_TYPE_EXPOSURE\x10\t\x12\x1c\n" +
	"\x18RISK_ALERT_TYPE_DRAWDOWN\x10\n" +
	"\x12\x1e\n" +
	"\x1aRISK_ALERT_TYPE_VAR_BREACH\x10\v\x12 \n" +
	"\x1cRISK_ALERT_TYPE_COUNTERPARTY\x10\f*\xd3\x01\n" +
	"\x11RiskAlertSeverity\x12#\n" +
	"\x1fRISK_ALERT_SEVERITY_UNSPECIFIED\x10\x00\x12\x1c\n" +
	"\x18RISK_ALERT_SEVERITY_INFO\x10\x01\x12\x1b\n" +
	"\x17RISK_ALERT_SEVERITY_LOW\x10\x02\x12\x1e\n" +
	"\x1aRISK_ALERT_SEVERITY_MEDIUM\x10\x03\x12\x1c\n" +
	"\x18RISK_ALERT_SEVERITY_HIGH\x10\x04\x12 \n" +
	"\x1cRISK_ALERT_SEVERITY_CRITICAL\x10\x05B>Z<github.com/Combine-Capital/cqc/gen/go/cqc/events/v1;eventsv1b\x06proto3"

var (
	file_proto_events_v1_risk_events_proto_rawDescOnce sync.Once
	file_proto_events_v1_risk_events_proto_rawDescData []byte
)

func file_proto_events_v1_risk_events_proto_rawDescGZIP() []byte {
	file_proto_events_v1_risk_events_proto_rawDescOnce.Do(func() {
		file_proto_events_v1_risk_events_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_events_v1_risk_events_proto_rawDesc), len(file_proto_events_v1_risk_events_proto_rawDesc)))
	})
	return file_proto_events_v1_risk_events_proto_rawDescData
}

var file_proto_events_v1_risk_events_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_events_v1_risk_events_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_proto_events_v1_risk_events_proto_goTypes = []any{
	(RiskAlertType)(0),          // 0: cqc.events.v1.RiskAlertType
	(RiskAlertSeverity)(0),      // 1: cqc.events.v1.RiskAlertSeverity
	(*RiskAlert)(nil),           // 2: cqc.events.v1.RiskAlert
	(*QualityFlagRaised)(nil),   // 3: cqc.events.v1.QualityFlagRaised
	(*timestamp.Timestamp)(nil), // 4: google.protobuf.Timestamp
	(*v1.AssetQualityFlag)(nil), // 5: cqc.assets.v1.AssetQualityFlag
	(v1.FlagType)(0),            // 6: cqc.assets.v1.FlagType
	(v1.FlagSeverity)(0),        // 7: cqc.assets.v1.FlagSeverity
}
var file_proto_events_v1_risk_events_proto_depIdxs = []int32{
	4, // 0: cqc.events.v1.RiskAlert.timestamp:type_name -> google.protobuf.Timestamp
	0, // 1: cqc.events.v1.RiskAlert.alert_type:type_name -> cqc.events.v1.RiskAlertType
	1, // 2: cqc.events.v1.RiskAlert.severity:type_name -> cqc.events.v1.RiskAlertSeverity
	4, // 3: cqc.events.v1.RiskAlert.expires_at:type_name -> google.protobuf.Timestamp
	4, // 4: cqc.events.v1.QualityFlagRaised.timestamp:type_name -> google.protobuf.Timestamp
	5, // 5: cqc.events.v1.QualityFlagRaised.flag:type_name -> cqc.assets.v1.AssetQualityFlag
	6, // 6: cqc.events.v1.QualityFlagRaised.flag_type:type_name -> cqc.assets.v1.FlagType
	7, // 7: cqc.events.v1.QualityFlagRaised.severity:type_name -> cqc.assets.v1.FlagSeverity
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_proto_events_v1_risk_events_proto_init() }
func file_proto_events_v1_risk_events_proto_init() {
	if File_proto_events_v1_risk_events_proto != nil {
		return
	}
	file_proto_events_v1_risk_events_proto_msgTypes[0].OneofWrappers = []any{}
	file_proto_events_v1_risk_events_proto_msgTypes[1].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_events_v1_risk_events_proto_rawDesc), len(file_proto_events_v1_risk_events_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_events_v1_risk_events_proto_goTypes,
		DependencyIndexes: file_proto_events_v1_risk_events_proto_depIdxs,
		EnumInfos:         file_proto_events_v1_risk_events_proto_enumTypes,
		MessageInfos:      file_proto_events_v1_risk_events_proto_msgTypes,
	}.Build()
	File_proto_events_v1_risk_events_proto = out.File
	file_proto_events_v1_risk_events_proto_goTypes = nil
	file_proto_events_v1_risk_events_proto_depIdxs = nil
}
