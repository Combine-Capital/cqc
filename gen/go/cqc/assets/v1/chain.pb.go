// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.12.4
// source: proto/assets/v1/chain.proto

package assetsv1

import (
	_struct "github.com/golang/protobuf/ptypes/struct"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Chain represents a blockchain network.
type Chain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique chain identifier (e.g., "ethereum", "polygon", "arbitrum", "solana", "bitcoin").
	ChainId *string `protobuf:"bytes,1,opt,name=chain_id,json=chainId,proto3,oneof" json:"chain_id,omitempty"`
	// Human-readable chain name (e.g., "Ethereum", "Polygon", "Arbitrum", "Solana", "Bitcoin").
	ChainName *string `protobuf:"bytes,2,opt,name=chain_name,json=chainName,proto3,oneof" json:"chain_name,omitempty"`
	// Asset UUID of the native token for this chain.
	// Example: ETH asset UUID for Ethereum, SOL asset UUID for Solana.
	NativeAssetId *string `protobuf:"bytes,3,opt,name=native_asset_id,json=nativeAssetId,proto3,oneof" json:"native_asset_id,omitempty"`
	// Chain type/architecture (e.g., "evm", "solana", "bitcoin", "cosmos").
	ChainType *string `protobuf:"bytes,4,opt,name=chain_type,json=chainType,proto3,oneof" json:"chain_type,omitempty"`
	// Network ID or chain ID for transaction signing (e.g., 1 for Ethereum mainnet, 137 for Polygon).
	// Used primarily for EVM chains.
	NetworkId *int64 `protobuf:"varint,5,opt,name=network_id,json=networkId,proto3,oneof" json:"network_id,omitempty"`
	// Block explorer URL for this chain (e.g., "https://etherscan.io", "https://solscan.io").
	ExplorerUrl *string `protobuf:"bytes,6,opt,name=explorer_url,json=explorerUrl,proto3,oneof" json:"explorer_url,omitempty"`
	// Primary RPC endpoint URL for connecting to this chain.
	RpcUrl *string `protobuf:"bytes,7,opt,name=rpc_url,json=rpcUrl,proto3,oneof" json:"rpc_url,omitempty"`
	// Whether this is a testnet (true) or mainnet (false).
	IsTestnet *bool `protobuf:"varint,8,opt,name=is_testnet,json=isTestnet,proto3,oneof" json:"is_testnet,omitempty"`
	// Additional chain-specific metadata.
	Metadata *_struct.Struct `protobuf:"bytes,9,opt,name=metadata,proto3,oneof" json:"metadata,omitempty"`
}

func (x *Chain) Reset() {
	*x = Chain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_assets_v1_chain_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Chain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chain) ProtoMessage() {}

func (x *Chain) ProtoReflect() protoreflect.Message {
	mi := &file_proto_assets_v1_chain_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chain.ProtoReflect.Descriptor instead.
func (*Chain) Descriptor() ([]byte, []int) {
	return file_proto_assets_v1_chain_proto_rawDescGZIP(), []int{0}
}

func (x *Chain) GetChainId() string {
	if x != nil && x.ChainId != nil {
		return *x.ChainId
	}
	return ""
}

func (x *Chain) GetChainName() string {
	if x != nil && x.ChainName != nil {
		return *x.ChainName
	}
	return ""
}

func (x *Chain) GetNativeAssetId() string {
	if x != nil && x.NativeAssetId != nil {
		return *x.NativeAssetId
	}
	return ""
}

func (x *Chain) GetChainType() string {
	if x != nil && x.ChainType != nil {
		return *x.ChainType
	}
	return ""
}

func (x *Chain) GetNetworkId() int64 {
	if x != nil && x.NetworkId != nil {
		return *x.NetworkId
	}
	return 0
}

func (x *Chain) GetExplorerUrl() string {
	if x != nil && x.ExplorerUrl != nil {
		return *x.ExplorerUrl
	}
	return ""
}

func (x *Chain) GetRpcUrl() string {
	if x != nil && x.RpcUrl != nil {
		return *x.RpcUrl
	}
	return ""
}

func (x *Chain) GetIsTestnet() bool {
	if x != nil && x.IsTestnet != nil {
		return *x.IsTestnet
	}
	return false
}

func (x *Chain) GetMetadata() *_struct.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

var File_proto_assets_v1_chain_proto protoreflect.FileDescriptor

var file_proto_assets_v1_chain_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x63,
	0x71, 0x63, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xeb, 0x03, 0x0a, 0x05, 0x43,
	0x68, 0x61, 0x69, 0x6e, 0x12, 0x1e, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x09, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0f, 0x6e, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x02, 0x52, 0x0d, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x09, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x48, 0x04, 0x52,
	0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a,
	0x0c, 0x65, 0x78, 0x70, 0x6c, 0x6f, 0x72, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x6c, 0x6f, 0x72, 0x65, 0x72, 0x55,
	0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07, 0x72, 0x70, 0x63, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x06, 0x72, 0x70, 0x63, 0x55, 0x72, 0x6c,
	0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x6e, 0x65,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x48, 0x07, 0x52, 0x09, 0x69, 0x73, 0x54, 0x65, 0x73,
	0x74, 0x6e, 0x65, 0x74, 0x88, 0x01, 0x01, 0x12, 0x38, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x48, 0x08, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x88, 0x01,
	0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x12, 0x0a,
	0x10, 0x5f, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69,
	0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x64, 0x42,
	0x0f, 0x0a, 0x0d, 0x5f, 0x65, 0x78, 0x70, 0x6c, 0x6f, 0x72, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x72, 0x70, 0x63, 0x5f, 0x75, 0x72, 0x6c, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x69, 0x73, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x6e, 0x65, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x42, 0x3e, 0x5a, 0x3c, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x2d, 0x43,
	0x61, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x2f, 0x63, 0x71, 0x63, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67,
	0x6f, 0x2f, 0x63, 0x71, 0x63, 0x2f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x3b,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_assets_v1_chain_proto_rawDescOnce sync.Once
	file_proto_assets_v1_chain_proto_rawDescData = file_proto_assets_v1_chain_proto_rawDesc
)

func file_proto_assets_v1_chain_proto_rawDescGZIP() []byte {
	file_proto_assets_v1_chain_proto_rawDescOnce.Do(func() {
		file_proto_assets_v1_chain_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_assets_v1_chain_proto_rawDescData)
	})
	return file_proto_assets_v1_chain_proto_rawDescData
}

var file_proto_assets_v1_chain_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_proto_assets_v1_chain_proto_goTypes = []interface{}{
	(*Chain)(nil),          // 0: cqc.assets.v1.Chain
	(*_struct.Struct)(nil), // 1: google.protobuf.Struct
}
var file_proto_assets_v1_chain_proto_depIdxs = []int32{
	1, // 0: cqc.assets.v1.Chain.metadata:type_name -> google.protobuf.Struct
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_assets_v1_chain_proto_init() }
func file_proto_assets_v1_chain_proto_init() {
	if File_proto_assets_v1_chain_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_assets_v1_chain_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Chain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_assets_v1_chain_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_assets_v1_chain_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_assets_v1_chain_proto_goTypes,
		DependencyIndexes: file_proto_assets_v1_chain_proto_depIdxs,
		MessageInfos:      file_proto_assets_v1_chain_proto_msgTypes,
	}.Build()
	File_proto_assets_v1_chain_proto = out.File
	file_proto_assets_v1_chain_proto_rawDesc = nil
	file_proto_assets_v1_chain_proto_goTypes = nil
	file_proto_assets_v1_chain_proto_depIdxs = nil
}
