// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v3.12.4
// source: proto/assets/v1/quality.proto

package assetsv1

import (
	_struct "github.com/golang/protobuf/ptypes/struct"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// FlagType represents the category of quality flag raised for an asset.
type FlagType int32

const (
	FlagType_FLAG_TYPE_UNSPECIFIED   FlagType = 0
	FlagType_FLAG_TYPE_SCAM          FlagType = 1 // Known scam or fraudulent token
	FlagType_FLAG_TYPE_RUGPULL       FlagType = 2 // Project executed a rug pull
	FlagType_FLAG_TYPE_EXPLOITED     FlagType = 3 // Contract has been exploited
	FlagType_FLAG_TYPE_DEPRECATED    FlagType = 4 // Token deprecated by issuer
	FlagType_FLAG_TYPE_PAUSED        FlagType = 5 // Contract functionality paused
	FlagType_FLAG_TYPE_UNVERIFIED    FlagType = 6 // Contract not verified on explorer
	FlagType_FLAG_TYPE_LOW_LIQUIDITY FlagType = 7 // Insufficient liquidity for trading
	FlagType_FLAG_TYPE_HONEYPOT      FlagType = 8 // Cannot sell after buying
	FlagType_FLAG_TYPE_TAX_TOKEN     FlagType = 9 // Buy/sell tax mechanism present
)

// Enum value maps for FlagType.
var (
	FlagType_name = map[int32]string{
		0: "FLAG_TYPE_UNSPECIFIED",
		1: "FLAG_TYPE_SCAM",
		2: "FLAG_TYPE_RUGPULL",
		3: "FLAG_TYPE_EXPLOITED",
		4: "FLAG_TYPE_DEPRECATED",
		5: "FLAG_TYPE_PAUSED",
		6: "FLAG_TYPE_UNVERIFIED",
		7: "FLAG_TYPE_LOW_LIQUIDITY",
		8: "FLAG_TYPE_HONEYPOT",
		9: "FLAG_TYPE_TAX_TOKEN",
	}
	FlagType_value = map[string]int32{
		"FLAG_TYPE_UNSPECIFIED":   0,
		"FLAG_TYPE_SCAM":          1,
		"FLAG_TYPE_RUGPULL":       2,
		"FLAG_TYPE_EXPLOITED":     3,
		"FLAG_TYPE_DEPRECATED":    4,
		"FLAG_TYPE_PAUSED":        5,
		"FLAG_TYPE_UNVERIFIED":    6,
		"FLAG_TYPE_LOW_LIQUIDITY": 7,
		"FLAG_TYPE_HONEYPOT":      8,
		"FLAG_TYPE_TAX_TOKEN":     9,
	}
)

func (x FlagType) Enum() *FlagType {
	p := new(FlagType)
	*p = x
	return p
}

func (x FlagType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FlagType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_assets_v1_quality_proto_enumTypes[0].Descriptor()
}

func (FlagType) Type() protoreflect.EnumType {
	return &file_proto_assets_v1_quality_proto_enumTypes[0]
}

func (x FlagType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FlagType.Descriptor instead.
func (FlagType) EnumDescriptor() ([]byte, []int) {
	return file_proto_assets_v1_quality_proto_rawDescGZIP(), []int{0}
}

// FlagSeverity indicates the criticality of a quality flag.
type FlagSeverity int32

const (
	FlagSeverity_FLAG_SEVERITY_UNSPECIFIED FlagSeverity = 0
	FlagSeverity_FLAG_SEVERITY_INFO        FlagSeverity = 1 // Informational flag
	FlagSeverity_FLAG_SEVERITY_LOW         FlagSeverity = 2 // Low severity issue
	FlagSeverity_FLAG_SEVERITY_MEDIUM      FlagSeverity = 3 // Medium severity issue
	FlagSeverity_FLAG_SEVERITY_HIGH        FlagSeverity = 4 // High severity issue
	FlagSeverity_FLAG_SEVERITY_CRITICAL    FlagSeverity = 5 // Critical issue - avoid trading
)

// Enum value maps for FlagSeverity.
var (
	FlagSeverity_name = map[int32]string{
		0: "FLAG_SEVERITY_UNSPECIFIED",
		1: "FLAG_SEVERITY_INFO",
		2: "FLAG_SEVERITY_LOW",
		3: "FLAG_SEVERITY_MEDIUM",
		4: "FLAG_SEVERITY_HIGH",
		5: "FLAG_SEVERITY_CRITICAL",
	}
	FlagSeverity_value = map[string]int32{
		"FLAG_SEVERITY_UNSPECIFIED": 0,
		"FLAG_SEVERITY_INFO":        1,
		"FLAG_SEVERITY_LOW":         2,
		"FLAG_SEVERITY_MEDIUM":      3,
		"FLAG_SEVERITY_HIGH":        4,
		"FLAG_SEVERITY_CRITICAL":    5,
	}
)

func (x FlagSeverity) Enum() *FlagSeverity {
	p := new(FlagSeverity)
	*p = x
	return p
}

func (x FlagSeverity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FlagSeverity) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_assets_v1_quality_proto_enumTypes[1].Descriptor()
}

func (FlagSeverity) Type() protoreflect.EnumType {
	return &file_proto_assets_v1_quality_proto_enumTypes[1]
}

func (x FlagSeverity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FlagSeverity.Descriptor instead.
func (FlagSeverity) EnumDescriptor() ([]byte, []int) {
	return file_proto_assets_v1_quality_proto_rawDescGZIP(), []int{1}
}

// AssetQualityFlag represents a quality or safety flag raised for an asset.
// Flags indicate potential risks or issues with an asset (scams, exploits, low liquidity, etc.).
type AssetQualityFlag struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique flag identifier (UUID).
	FlagId *string `protobuf:"bytes,1,opt,name=flag_id,json=flagId,proto3,oneof" json:"flag_id,omitempty"`
	// Asset UUID this flag applies to.
	AssetId *string `protobuf:"bytes,2,opt,name=asset_id,json=assetId,proto3,oneof" json:"asset_id,omitempty"`
	// Type of flag raised.
	FlagType *FlagType `protobuf:"varint,3,opt,name=flag_type,json=flagType,proto3,enum=cqc.assets.v1.FlagType,oneof" json:"flag_type,omitempty"`
	// Severity level of this flag.
	Severity *FlagSeverity `protobuf:"varint,4,opt,name=severity,proto3,enum=cqc.assets.v1.FlagSeverity,oneof" json:"severity,omitempty"`
	// Source of this flag (e.g., "certik", "tokensniffer", "manual", "coingecko").
	Source *string `protobuf:"bytes,5,opt,name=source,proto3,oneof" json:"source,omitempty"`
	// Detailed explanation of the issue.
	Reason *string `protobuf:"bytes,6,opt,name=reason,proto3,oneof" json:"reason,omitempty"`
	// URL to evidence or documentation supporting this flag.
	EvidenceUrl *string `protobuf:"bytes,7,opt,name=evidence_url,json=evidenceUrl,proto3,oneof" json:"evidence_url,omitempty"`
	// Timestamp when this flag was raised.
	RaisedAt *timestamp.Timestamp `protobuf:"bytes,8,opt,name=raised_at,json=raisedAt,proto3,oneof" json:"raised_at,omitempty"`
	// Timestamp when this flag was resolved, if applicable.
	// NULL/unset if flag is still active.
	ResolvedAt *timestamp.Timestamp `protobuf:"bytes,9,opt,name=resolved_at,json=resolvedAt,proto3,oneof" json:"resolved_at,omitempty"`
	// Who resolved this flag.
	ResolvedBy *string `protobuf:"bytes,10,opt,name=resolved_by,json=resolvedBy,proto3,oneof" json:"resolved_by,omitempty"`
	// Explanation of resolution.
	ResolutionNotes *string `protobuf:"bytes,11,opt,name=resolution_notes,json=resolutionNotes,proto3,oneof" json:"resolution_notes,omitempty"`
	// Additional flag-specific metadata.
	Metadata      *_struct.Struct `protobuf:"bytes,12,opt,name=metadata,proto3,oneof" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssetQualityFlag) Reset() {
	*x = AssetQualityFlag{}
	mi := &file_proto_assets_v1_quality_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssetQualityFlag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetQualityFlag) ProtoMessage() {}

func (x *AssetQualityFlag) ProtoReflect() protoreflect.Message {
	mi := &file_proto_assets_v1_quality_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetQualityFlag.ProtoReflect.Descriptor instead.
func (*AssetQualityFlag) Descriptor() ([]byte, []int) {
	return file_proto_assets_v1_quality_proto_rawDescGZIP(), []int{0}
}

func (x *AssetQualityFlag) GetFlagId() string {
	if x != nil && x.FlagId != nil {
		return *x.FlagId
	}
	return ""
}

func (x *AssetQualityFlag) GetAssetId() string {
	if x != nil && x.AssetId != nil {
		return *x.AssetId
	}
	return ""
}

func (x *AssetQualityFlag) GetFlagType() FlagType {
	if x != nil && x.FlagType != nil {
		return *x.FlagType
	}
	return FlagType_FLAG_TYPE_UNSPECIFIED
}

func (x *AssetQualityFlag) GetSeverity() FlagSeverity {
	if x != nil && x.Severity != nil {
		return *x.Severity
	}
	return FlagSeverity_FLAG_SEVERITY_UNSPECIFIED
}

func (x *AssetQualityFlag) GetSource() string {
	if x != nil && x.Source != nil {
		return *x.Source
	}
	return ""
}

func (x *AssetQualityFlag) GetReason() string {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return ""
}

func (x *AssetQualityFlag) GetEvidenceUrl() string {
	if x != nil && x.EvidenceUrl != nil {
		return *x.EvidenceUrl
	}
	return ""
}

func (x *AssetQualityFlag) GetRaisedAt() *timestamp.Timestamp {
	if x != nil {
		return x.RaisedAt
	}
	return nil
}

func (x *AssetQualityFlag) GetResolvedAt() *timestamp.Timestamp {
	if x != nil {
		return x.ResolvedAt
	}
	return nil
}

func (x *AssetQualityFlag) GetResolvedBy() string {
	if x != nil && x.ResolvedBy != nil {
		return *x.ResolvedBy
	}
	return ""
}

func (x *AssetQualityFlag) GetResolutionNotes() string {
	if x != nil && x.ResolutionNotes != nil {
		return *x.ResolutionNotes
	}
	return ""
}

func (x *AssetQualityFlag) GetMetadata() *_struct.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

var File_proto_assets_v1_quality_proto protoreflect.FileDescriptor

const file_proto_assets_v1_quality_proto_rawDesc = "" +
	"\n" +
	"\x1dproto/assets/v1/quality.proto\x12\rcqc.assets.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1cgoogle/protobuf/struct.proto\"\xe6\x05\n" +
	"\x10AssetQualityFlag\x12\x1c\n" +
	"\aflag_id\x18\x01 \x01(\tH\x00R\x06flagId\x88\x01\x01\x12\x1e\n" +
	"\basset_id\x18\x02 \x01(\tH\x01R\aassetId\x88\x01\x01\x129\n" +
	"\tflag_type\x18\x03 \x01(\x0e2\x17.cqc.assets.v1.FlagTypeH\x02R\bflagType\x88\x01\x01\x12<\n" +
	"\bseverity\x18\x04 \x01(\x0e2\x1b.cqc.assets.v1.FlagSeverityH\x03R\bseverity\x88\x01\x01\x12\x1b\n" +
	"\x06source\x18\x05 \x01(\tH\x04R\x06source\x88\x01\x01\x12\x1b\n" +
	"\x06reason\x18\x06 \x01(\tH\x05R\x06reason\x88\x01\x01\x12&\n" +
	"\fevidence_url\x18\a \x01(\tH\x06R\vevidenceUrl\x88\x01\x01\x12<\n" +
	"\traised_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampH\aR\braisedAt\x88\x01\x01\x12@\n" +
	"\vresolved_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampH\bR\n" +
	"resolvedAt\x88\x01\x01\x12$\n" +
	"\vresolved_by\x18\n" +
	" \x01(\tH\tR\n" +
	"resolvedBy\x88\x01\x01\x12.\n" +
	"\x10resolution_notes\x18\v \x01(\tH\n" +
	"R\x0fresolutionNotes\x88\x01\x01\x128\n" +
	"\bmetadata\x18\f \x01(\v2\x17.google.protobuf.StructH\vR\bmetadata\x88\x01\x01B\n" +
	"\n" +
	"\b_flag_idB\v\n" +
	"\t_asset_idB\f\n" +
	"\n" +
	"_flag_typeB\v\n" +
	"\t_severityB\t\n" +
	"\a_sourceB\t\n" +
	"\a_reasonB\x0f\n" +
	"\r_evidence_urlB\f\n" +
	"\n" +
	"_raised_atB\x0e\n" +
	"\f_resolved_atB\x0e\n" +
	"\f_resolved_byB\x13\n" +
	"\x11_resolution_notesB\v\n" +
	"\t_metadata*\x81\x02\n" +
	"\bFlagType\x12\x19\n" +
	"\x15FLAG_TYPE_UNSPECIFIED\x10\x00\x12\x12\n" +
	"\x0eFLAG_TYPE_SCAM\x10\x01\x12\x15\n" +
	"\x11FLAG_TYPE_RUGPULL\x10\x02\x12\x17\n" +
	"\x13FLAG_TYPE_EXPLOITED\x10\x03\x12\x18\n" +
	"\x14FLAG_TYPE_DEPRECATED\x10\x04\x12\x14\n" +
	"\x10FLAG_TYPE_PAUSED\x10\x05\x12\x18\n" +
	"\x14FLAG_TYPE_UNVERIFIED\x10\x06\x12\x1b\n" +
	"\x17FLAG_TYPE_LOW_LIQUIDITY\x10\a\x12\x16\n" +
	"\x12FLAG_TYPE_HONEYPOT\x10\b\x12\x17\n" +
	"\x13FLAG_TYPE_TAX_TOKEN\x10\t*\xaa\x01\n" +
	"\fFlagSeverity\x12\x1d\n" +
	"\x19FLAG_SEVERITY_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12FLAG_SEVERITY_INFO\x10\x01\x12\x15\n" +
	"\x11FLAG_SEVERITY_LOW\x10\x02\x12\x18\n" +
	"\x14FLAG_SEVERITY_MEDIUM\x10\x03\x12\x16\n" +
	"\x12FLAG_SEVERITY_HIGH\x10\x04\x12\x1a\n" +
	"\x16FLAG_SEVERITY_CRITICAL\x10\x05B>Z<github.com/Combine-Capital/cqc/gen/go/cqc/assets/v1;assetsv1b\x06proto3"

var (
	file_proto_assets_v1_quality_proto_rawDescOnce sync.Once
	file_proto_assets_v1_quality_proto_rawDescData []byte
)

func file_proto_assets_v1_quality_proto_rawDescGZIP() []byte {
	file_proto_assets_v1_quality_proto_rawDescOnce.Do(func() {
		file_proto_assets_v1_quality_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_assets_v1_quality_proto_rawDesc), len(file_proto_assets_v1_quality_proto_rawDesc)))
	})
	return file_proto_assets_v1_quality_proto_rawDescData
}

var file_proto_assets_v1_quality_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_assets_v1_quality_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_proto_assets_v1_quality_proto_goTypes = []any{
	(FlagType)(0),               // 0: cqc.assets.v1.FlagType
	(FlagSeverity)(0),           // 1: cqc.assets.v1.FlagSeverity
	(*AssetQualityFlag)(nil),    // 2: cqc.assets.v1.AssetQualityFlag
	(*timestamp.Timestamp)(nil), // 3: google.protobuf.Timestamp
	(*_struct.Struct)(nil),      // 4: google.protobuf.Struct
}
var file_proto_assets_v1_quality_proto_depIdxs = []int32{
	0, // 0: cqc.assets.v1.AssetQualityFlag.flag_type:type_name -> cqc.assets.v1.FlagType
	1, // 1: cqc.assets.v1.AssetQualityFlag.severity:type_name -> cqc.assets.v1.FlagSeverity
	3, // 2: cqc.assets.v1.AssetQualityFlag.raised_at:type_name -> google.protobuf.Timestamp
	3, // 3: cqc.assets.v1.AssetQualityFlag.resolved_at:type_name -> google.protobuf.Timestamp
	4, // 4: cqc.assets.v1.AssetQualityFlag.metadata:type_name -> google.protobuf.Struct
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_proto_assets_v1_quality_proto_init() }
func file_proto_assets_v1_quality_proto_init() {
	if File_proto_assets_v1_quality_proto != nil {
		return
	}
	file_proto_assets_v1_quality_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_assets_v1_quality_proto_rawDesc), len(file_proto_assets_v1_quality_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_assets_v1_quality_proto_goTypes,
		DependencyIndexes: file_proto_assets_v1_quality_proto_depIdxs,
		EnumInfos:         file_proto_assets_v1_quality_proto_enumTypes,
		MessageInfos:      file_proto_assets_v1_quality_proto_msgTypes,
	}.Build()
	File_proto_assets_v1_quality_proto = out.File
	file_proto_assets_v1_quality_proto_goTypes = nil
	file_proto_assets_v1_quality_proto_depIdxs = nil
}
