// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.12.4
// source: proto/services/v1/asset_registry.proto

package servicesv1

import (
	v1 "github.com/Combine-Capital/cqc/gen/go/cqc/assets/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CreateAssetRequest
type CreateAssetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol      *string       `protobuf:"bytes,1,opt,name=symbol,proto3,oneof" json:"symbol,omitempty"`
	Name        *string       `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	AssetType   *v1.AssetType `protobuf:"varint,3,opt,name=asset_type,json=assetType,proto3,enum=cqc.assets.v1.AssetType,oneof" json:"asset_type,omitempty"`
	Category    *string       `protobuf:"bytes,4,opt,name=category,proto3,oneof" json:"category,omitempty"`
	Description *string       `protobuf:"bytes,5,opt,name=description,proto3,oneof" json:"description,omitempty"`
	LogoUrl     *string       `protobuf:"bytes,6,opt,name=logo_url,json=logoUrl,proto3,oneof" json:"logo_url,omitempty"`
	WebsiteUrl  *string       `protobuf:"bytes,7,opt,name=website_url,json=websiteUrl,proto3,oneof" json:"website_url,omitempty"`
}

func (x *CreateAssetRequest) Reset() {
	*x = CreateAssetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_v1_asset_registry_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAssetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAssetRequest) ProtoMessage() {}

func (x *CreateAssetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_v1_asset_registry_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAssetRequest.ProtoReflect.Descriptor instead.
func (*CreateAssetRequest) Descriptor() ([]byte, []int) {
	return file_proto_services_v1_asset_registry_proto_rawDescGZIP(), []int{0}
}

func (x *CreateAssetRequest) GetSymbol() string {
	if x != nil && x.Symbol != nil {
		return *x.Symbol
	}
	return ""
}

func (x *CreateAssetRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CreateAssetRequest) GetAssetType() v1.AssetType {
	if x != nil && x.AssetType != nil {
		return *x.AssetType
	}
	return v1.AssetType(0)
}

func (x *CreateAssetRequest) GetCategory() string {
	if x != nil && x.Category != nil {
		return *x.Category
	}
	return ""
}

func (x *CreateAssetRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *CreateAssetRequest) GetLogoUrl() string {
	if x != nil && x.LogoUrl != nil {
		return *x.LogoUrl
	}
	return ""
}

func (x *CreateAssetRequest) GetWebsiteUrl() string {
	if x != nil && x.WebsiteUrl != nil {
		return *x.WebsiteUrl
	}
	return ""
}

type CreateAssetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Asset *v1.Asset `protobuf:"bytes,1,opt,name=asset,proto3,oneof" json:"asset,omitempty"`
}

func (x *CreateAssetResponse) Reset() {
	*x = CreateAssetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_v1_asset_registry_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAssetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAssetResponse) ProtoMessage() {}

func (x *CreateAssetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_v1_asset_registry_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAssetResponse.ProtoReflect.Descriptor instead.
func (*CreateAssetResponse) Descriptor() ([]byte, []int) {
	return file_proto_services_v1_asset_registry_proto_rawDescGZIP(), []int{1}
}

func (x *CreateAssetResponse) GetAsset() *v1.Asset {
	if x != nil {
		return x.Asset
	}
	return nil
}

// GetAssetRequest
type GetAssetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetId *string `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3,oneof" json:"asset_id,omitempty"`
}

func (x *GetAssetRequest) Reset() {
	*x = GetAssetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_v1_asset_registry_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAssetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssetRequest) ProtoMessage() {}

func (x *GetAssetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_v1_asset_registry_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssetRequest.ProtoReflect.Descriptor instead.
func (*GetAssetRequest) Descriptor() ([]byte, []int) {
	return file_proto_services_v1_asset_registry_proto_rawDescGZIP(), []int{2}
}

func (x *GetAssetRequest) GetAssetId() string {
	if x != nil && x.AssetId != nil {
		return *x.AssetId
	}
	return ""
}

type GetAssetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Asset *v1.Asset `protobuf:"bytes,1,opt,name=asset,proto3,oneof" json:"asset,omitempty"`
}

func (x *GetAssetResponse) Reset() {
	*x = GetAssetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_v1_asset_registry_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAssetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssetResponse) ProtoMessage() {}

func (x *GetAssetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_v1_asset_registry_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssetResponse.ProtoReflect.Descriptor instead.
func (*GetAssetResponse) Descriptor() ([]byte, []int) {
	return file_proto_services_v1_asset_registry_proto_rawDescGZIP(), []int{3}
}

func (x *GetAssetResponse) GetAsset() *v1.Asset {
	if x != nil {
		return x.Asset
	}
	return nil
}

// UpdateAssetRequest
type UpdateAssetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetId     *string       `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3,oneof" json:"asset_id,omitempty"`
	Symbol      *string       `protobuf:"bytes,2,opt,name=symbol,proto3,oneof" json:"symbol,omitempty"`
	Name        *string       `protobuf:"bytes,3,opt,name=name,proto3,oneof" json:"name,omitempty"`
	AssetType   *v1.AssetType `protobuf:"varint,4,opt,name=asset_type,json=assetType,proto3,enum=cqc.assets.v1.AssetType,oneof" json:"asset_type,omitempty"`
	Category    *string       `protobuf:"bytes,5,opt,name=category,proto3,oneof" json:"category,omitempty"`
	Description *string       `protobuf:"bytes,6,opt,name=description,proto3,oneof" json:"description,omitempty"`
	LogoUrl     *string       `protobuf:"bytes,7,opt,name=logo_url,json=logoUrl,proto3,oneof" json:"logo_url,omitempty"`
	WebsiteUrl  *string       `protobuf:"bytes,8,opt,name=website_url,json=websiteUrl,proto3,oneof" json:"website_url,omitempty"`
}

func (x *UpdateAssetRequest) Reset() {
	*x = UpdateAssetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_v1_asset_registry_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAssetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAssetRequest) ProtoMessage() {}

func (x *UpdateAssetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_v1_asset_registry_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAssetRequest.ProtoReflect.Descriptor instead.
func (*UpdateAssetRequest) Descriptor() ([]byte, []int) {
	return file_proto_services_v1_asset_registry_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateAssetRequest) GetAssetId() string {
	if x != nil && x.AssetId != nil {
		return *x.AssetId
	}
	return ""
}

func (x *UpdateAssetRequest) GetSymbol() string {
	if x != nil && x.Symbol != nil {
		return *x.Symbol
	}
	return ""
}

func (x *UpdateAssetRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateAssetRequest) GetAssetType() v1.AssetType {
	if x != nil && x.AssetType != nil {
		return *x.AssetType
	}
	return v1.AssetType(0)
}

func (x *UpdateAssetRequest) GetCategory() string {
	if x != nil && x.Category != nil {
		return *x.Category
	}
	return ""
}

func (x *UpdateAssetRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *UpdateAssetRequest) GetLogoUrl() string {
	if x != nil && x.LogoUrl != nil {
		return *x.LogoUrl
	}
	return ""
}

func (x *UpdateAssetRequest) GetWebsiteUrl() string {
	if x != nil && x.WebsiteUrl != nil {
		return *x.WebsiteUrl
	}
	return ""
}

type UpdateAssetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Asset *v1.Asset `protobuf:"bytes,1,opt,name=asset,proto3,oneof" json:"asset,omitempty"`
}

func (x *UpdateAssetResponse) Reset() {
	*x = UpdateAssetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_v1_asset_registry_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAssetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAssetResponse) ProtoMessage() {}

func (x *UpdateAssetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_v1_asset_registry_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAssetResponse.ProtoReflect.Descriptor instead.
func (*UpdateAssetResponse) Descriptor() ([]byte, []int) {
	return file_proto_services_v1_asset_registry_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateAssetResponse) GetAsset() *v1.Asset {
	if x != nil {
		return x.Asset
	}
	return nil
}

// DeleteAssetRequest
type DeleteAssetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetId *string `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3,oneof" json:"asset_id,omitempty"`
}

func (x *DeleteAssetRequest) Reset() {
	*x = DeleteAssetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_v1_asset_registry_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAssetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAssetRequest) ProtoMessage() {}

func (x *DeleteAssetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_v1_asset_registry_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAssetRequest.ProtoReflect.Descriptor instead.
func (*DeleteAssetRequest) Descriptor() ([]byte, []int) {
	return file_proto_services_v1_asset_registry_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteAssetRequest) GetAssetId() string {
	if x != nil && x.AssetId != nil {
		return *x.AssetId
	}
	return ""
}

type DeleteAssetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success *bool `protobuf:"varint,1,opt,name=success,proto3,oneof" json:"success,omitempty"`
}

func (x *DeleteAssetResponse) Reset() {
	*x = DeleteAssetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_v1_asset_registry_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAssetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAssetResponse) ProtoMessage() {}

func (x *DeleteAssetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_v1_asset_registry_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAssetResponse.ProtoReflect.Descriptor instead.
func (*DeleteAssetResponse) Descriptor() ([]byte, []int) {
	return file_proto_services_v1_asset_registry_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteAssetResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

// ListAssetsRequest
type ListAssetsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize  *int32        `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3,oneof" json:"page_size,omitempty"`
	PageToken *string       `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3,oneof" json:"page_token,omitempty"`
	AssetType *v1.AssetType `protobuf:"varint,3,opt,name=asset_type,json=assetType,proto3,enum=cqc.assets.v1.AssetType,oneof" json:"asset_type,omitempty"`
	Category  *string       `protobuf:"bytes,4,opt,name=category,proto3,oneof" json:"category,omitempty"`
}

func (x *ListAssetsRequest) Reset() {
	*x = ListAssetsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_v1_asset_registry_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAssetsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAssetsRequest) ProtoMessage() {}

func (x *ListAssetsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_v1_asset_registry_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAssetsRequest.ProtoReflect.Descriptor instead.
func (*ListAssetsRequest) Descriptor() ([]byte, []int) {
	return file_proto_services_v1_asset_registry_proto_rawDescGZIP(), []int{8}
}

func (x *ListAssetsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListAssetsRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

func (x *ListAssetsRequest) GetAssetType() v1.AssetType {
	if x != nil && x.AssetType != nil {
		return *x.AssetType
	}
	return v1.AssetType(0)
}

func (x *ListAssetsRequest) GetCategory() string {
	if x != nil && x.Category != nil {
		return *x.Category
	}
	return ""
}

type ListAssetsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Assets        []*v1.Asset `protobuf:"bytes,1,rep,name=assets,proto3" json:"assets,omitempty"`
	NextPageToken *string     `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3,oneof" json:"next_page_token,omitempty"`
	TotalCount    *int32      `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3,oneof" json:"total_count,omitempty"`
}

func (x *ListAssetsResponse) Reset() {
	*x = ListAssetsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_v1_asset_registry_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAssetsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAssetsResponse) ProtoMessage() {}

func (x *ListAssetsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_v1_asset_registry_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAssetsResponse.ProtoReflect.Descriptor instead.
func (*ListAssetsResponse) Descriptor() ([]byte, []int) {
	return file_proto_services_v1_asset_registry_proto_rawDescGZIP(), []int{9}
}

func (x *ListAssetsResponse) GetAssets() []*v1.Asset {
	if x != nil {
		return x.Assets
	}
	return nil
}

func (x *ListAssetsResponse) GetNextPageToken() string {
	if x != nil && x.NextPageToken != nil {
		return *x.NextPageToken
	}
	return ""
}

func (x *ListAssetsResponse) GetTotalCount() int32 {
	if x != nil && x.TotalCount != nil {
		return *x.TotalCount
	}
	return 0
}

// SearchAssetsRequest
type SearchAssetsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query *string `protobuf:"bytes,1,opt,name=query,proto3,oneof" json:"query,omitempty"`
	Limit *int32  `protobuf:"varint,2,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
}

func (x *SearchAssetsRequest) Reset() {
	*x = SearchAssetsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_v1_asset_registry_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchAssetsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchAssetsRequest) ProtoMessage() {}

func (x *SearchAssetsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_v1_asset_registry_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchAssetsRequest.ProtoReflect.Descriptor instead.
func (*SearchAssetsRequest) Descriptor() ([]byte, []int) {
	return file_proto_services_v1_asset_registry_proto_rawDescGZIP(), []int{10}
}

func (x *SearchAssetsRequest) GetQuery() string {
	if x != nil && x.Query != nil {
		return *x.Query
	}
	return ""
}

func (x *SearchAssetsRequest) GetLimit() int32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

type SearchAssetsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Assets []*v1.Asset `protobuf:"bytes,1,rep,name=assets,proto3" json:"assets,omitempty"`
}

func (x *SearchAssetsResponse) Reset() {
	*x = SearchAssetsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_v1_asset_registry_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchAssetsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchAssetsResponse) ProtoMessage() {}

func (x *SearchAssetsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_v1_asset_registry_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchAssetsResponse.ProtoReflect.Descriptor instead.
func (*SearchAssetsResponse) Descriptor() ([]byte, []int) {
	return file_proto_services_v1_asset_registry_proto_rawDescGZIP(), []int{11}
}

func (x *SearchAssetsResponse) GetAssets() []*v1.Asset {
	if x != nil {
		return x.Assets
	}
	return nil
}

// CreateAssetDeploymentRequest
type CreateAssetDeploymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetId         *string `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3,oneof" json:"asset_id,omitempty"`
	ChainId         *string `protobuf:"bytes,2,opt,name=chain_id,json=chainId,proto3,oneof" json:"chain_id,omitempty"`
	ContractAddress *string `protobuf:"bytes,3,opt,name=contract_address,json=contractAddress,proto3,oneof" json:"contract_address,omitempty"`
	Decimals        *int32  `protobuf:"varint,4,opt,name=decimals,proto3,oneof" json:"decimals,omitempty"`
	IsNative        *bool   `protobuf:"varint,5,opt,name=is_native,json=isNative,proto3,oneof" json:"is_native,omitempty"`
}

func (x *CreateAssetDeploymentRequest) Reset() {
	*x = CreateAssetDeploymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_v1_asset_registry_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAssetDeploymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAssetDeploymentRequest) ProtoMessage() {}

func (x *CreateAssetDeploymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_v1_asset_registry_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAssetDeploymentRequest.ProtoReflect.Descriptor instead.
func (*CreateAssetDeploymentRequest) Descriptor() ([]byte, []int) {
	return file_proto_services_v1_asset_registry_proto_rawDescGZIP(), []int{12}
}

func (x *CreateAssetDeploymentRequest) GetAssetId() string {
	if x != nil && x.AssetId != nil {
		return *x.AssetId
	}
	return ""
}

func (x *CreateAssetDeploymentRequest) GetChainId() string {
	if x != nil && x.ChainId != nil {
		return *x.ChainId
	}
	return ""
}

func (x *CreateAssetDeploymentRequest) GetContractAddress() string {
	if x != nil && x.ContractAddress != nil {
		return *x.ContractAddress
	}
	return ""
}

func (x *CreateAssetDeploymentRequest) GetDecimals() int32 {
	if x != nil && x.Decimals != nil {
		return *x.Decimals
	}
	return 0
}

func (x *CreateAssetDeploymentRequest) GetIsNative() bool {
	if x != nil && x.IsNative != nil {
		return *x.IsNative
	}
	return false
}

type CreateAssetDeploymentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deployment *v1.AssetDeployment `protobuf:"bytes,1,opt,name=deployment,proto3,oneof" json:"deployment,omitempty"`
}

func (x *CreateAssetDeploymentResponse) Reset() {
	*x = CreateAssetDeploymentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_v1_asset_registry_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAssetDeploymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAssetDeploymentResponse) ProtoMessage() {}

func (x *CreateAssetDeploymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_v1_asset_registry_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAssetDeploymentResponse.ProtoReflect.Descriptor instead.
func (*CreateAssetDeploymentResponse) Descriptor() ([]byte, []int) {
	return file_proto_services_v1_asset_registry_proto_rawDescGZIP(), []int{13}
}

func (x *CreateAssetDeploymentResponse) GetDeployment() *v1.AssetDeployment {
	if x != nil {
		return x.Deployment
	}
	return nil
}

// GetAssetDeploymentRequest
type GetAssetDeploymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeploymentId *string `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId,proto3,oneof" json:"deployment_id,omitempty"`
}

func (x *GetAssetDeploymentRequest) Reset() {
	*x = GetAssetDeploymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_v1_asset_registry_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAssetDeploymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssetDeploymentRequest) ProtoMessage() {}

func (x *GetAssetDeploymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_v1_asset_registry_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssetDeploymentRequest.ProtoReflect.Descriptor instead.
func (*GetAssetDeploymentRequest) Descriptor() ([]byte, []int) {
	return file_proto_services_v1_asset_registry_proto_rawDescGZIP(), []int{14}
}

func (x *GetAssetDeploymentRequest) GetDeploymentId() string {
	if x != nil && x.DeploymentId != nil {
		return *x.DeploymentId
	}
	return ""
}

type GetAssetDeploymentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deployment *v1.AssetDeployment `protobuf:"bytes,1,opt,name=deployment,proto3,oneof" json:"deployment,omitempty"`
}

func (x *GetAssetDeploymentResponse) Reset() {
	*x = GetAssetDeploymentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_v1_asset_registry_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAssetDeploymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssetDeploymentResponse) ProtoMessage() {}

func (x *GetAssetDeploymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_v1_asset_registry_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssetDeploymentResponse.ProtoReflect.Descriptor instead.
func (*GetAssetDeploymentResponse) Descriptor() ([]byte, []int) {
	return file_proto_services_v1_asset_registry_proto_rawDescGZIP(), []int{15}
}

func (x *GetAssetDeploymentResponse) GetDeployment() *v1.AssetDeployment {
	if x != nil {
		return x.Deployment
	}
	return nil
}

// ListAssetDeploymentsRequest
type ListAssetDeploymentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetId *string `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3,oneof" json:"asset_id,omitempty"`
	ChainId *string `protobuf:"bytes,2,opt,name=chain_id,json=chainId,proto3,oneof" json:"chain_id,omitempty"`
}

func (x *ListAssetDeploymentsRequest) Reset() {
	*x = ListAssetDeploymentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_v1_asset_registry_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAssetDeploymentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAssetDeploymentsRequest) ProtoMessage() {}

func (x *ListAssetDeploymentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_v1_asset_registry_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAssetDeploymentsRequest.ProtoReflect.Descriptor instead.
func (*ListAssetDeploymentsRequest) Descriptor() ([]byte, []int) {
	return file_proto_services_v1_asset_registry_proto_rawDescGZIP(), []int{16}
}

func (x *ListAssetDeploymentsRequest) GetAssetId() string {
	if x != nil && x.AssetId != nil {
		return *x.AssetId
	}
	return ""
}

func (x *ListAssetDeploymentsRequest) GetChainId() string {
	if x != nil && x.ChainId != nil {
		return *x.ChainId
	}
	return ""
}

type ListAssetDeploymentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deployments []*v1.AssetDeployment `protobuf:"bytes,1,rep,name=deployments,proto3" json:"deployments,omitempty"`
}

func (x *ListAssetDeploymentsResponse) Reset() {
	*x = ListAssetDeploymentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_v1_asset_registry_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAssetDeploymentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAssetDeploymentsResponse) ProtoMessage() {}

func (x *ListAssetDeploymentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_v1_asset_registry_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAssetDeploymentsResponse.ProtoReflect.Descriptor instead.
func (*ListAssetDeploymentsResponse) Descriptor() ([]byte, []int) {
	return file_proto_services_v1_asset_registry_proto_rawDescGZIP(), []int{17}
}

func (x *ListAssetDeploymentsResponse) GetDeployments() []*v1.AssetDeployment {
	if x != nil {
		return x.Deployments
	}
	return nil
}

// CreateAssetIdentifierRequest
type CreateAssetIdentifierRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetId    *string        `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3,oneof" json:"asset_id,omitempty"`
	Source     *v1.DataSource `protobuf:"varint,2,opt,name=source,proto3,enum=cqc.assets.v1.DataSource,oneof" json:"source,omitempty"`
	ExternalId *string        `protobuf:"bytes,3,opt,name=external_id,json=externalId,proto3,oneof" json:"external_id,omitempty"`
	IsPrimary  *bool          `protobuf:"varint,4,opt,name=is_primary,json=isPrimary,proto3,oneof" json:"is_primary,omitempty"`
}

func (x *CreateAssetIdentifierRequest) Reset() {
	*x = CreateAssetIdentifierRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_v1_asset_registry_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAssetIdentifierRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAssetIdentifierRequest) ProtoMessage() {}

func (x *CreateAssetIdentifierRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_v1_asset_registry_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAssetIdentifierRequest.ProtoReflect.Descriptor instead.
func (*CreateAssetIdentifierRequest) Descriptor() ([]byte, []int) {
	return file_proto_services_v1_asset_registry_proto_rawDescGZIP(), []int{18}
}

func (x *CreateAssetIdentifierRequest) GetAssetId() string {
	if x != nil && x.AssetId != nil {
		return *x.AssetId
	}
	return ""
}

func (x *CreateAssetIdentifierRequest) GetSource() v1.DataSource {
	if x != nil && x.Source != nil {
		return *x.Source
	}
	return v1.DataSource(0)
}

func (x *CreateAssetIdentifierRequest) GetExternalId() string {
	if x != nil && x.ExternalId != nil {
		return *x.ExternalId
	}
	return ""
}

func (x *CreateAssetIdentifierRequest) GetIsPrimary() bool {
	if x != nil && x.IsPrimary != nil {
		return *x.IsPrimary
	}
	return false
}

type CreateAssetIdentifierResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier *v1.AssetIdentifier `protobuf:"bytes,1,opt,name=identifier,proto3,oneof" json:"identifier,omitempty"`
}

func (x *CreateAssetIdentifierResponse) Reset() {
	*x = CreateAssetIdentifierResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_v1_asset_registry_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAssetIdentifierResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAssetIdentifierResponse) ProtoMessage() {}

func (x *CreateAssetIdentifierResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_v1_asset_registry_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAssetIdentifierResponse.ProtoReflect.Descriptor instead.
func (*CreateAssetIdentifierResponse) Descriptor() ([]byte, []int) {
	return file_proto_services_v1_asset_registry_proto_rawDescGZIP(), []int{19}
}

func (x *CreateAssetIdentifierResponse) GetIdentifier() *v1.AssetIdentifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

// GetAssetIdentifierRequest
type GetAssetIdentifierRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetId *string        `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3,oneof" json:"asset_id,omitempty"`
	Source  *v1.DataSource `protobuf:"varint,2,opt,name=source,proto3,enum=cqc.assets.v1.DataSource,oneof" json:"source,omitempty"`
}

func (x *GetAssetIdentifierRequest) Reset() {
	*x = GetAssetIdentifierRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_v1_asset_registry_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAssetIdentifierRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssetIdentifierRequest) ProtoMessage() {}

func (x *GetAssetIdentifierRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_v1_asset_registry_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssetIdentifierRequest.ProtoReflect.Descriptor instead.
func (*GetAssetIdentifierRequest) Descriptor() ([]byte, []int) {
	return file_proto_services_v1_asset_registry_proto_rawDescGZIP(), []int{20}
}

func (x *GetAssetIdentifierRequest) GetAssetId() string {
	if x != nil && x.AssetId != nil {
		return *x.AssetId
	}
	return ""
}

func (x *GetAssetIdentifierRequest) GetSource() v1.DataSource {
	if x != nil && x.Source != nil {
		return *x.Source
	}
	return v1.DataSource(0)
}

type GetAssetIdentifierResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier *v1.AssetIdentifier `protobuf:"bytes,1,opt,name=identifier,proto3,oneof" json:"identifier,omitempty"`
}

func (x *GetAssetIdentifierResponse) Reset() {
	*x = GetAssetIdentifierResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_v1_asset_registry_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAssetIdentifierResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssetIdentifierResponse) ProtoMessage() {}

func (x *GetAssetIdentifierResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_v1_asset_registry_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssetIdentifierResponse.ProtoReflect.Descriptor instead.
func (*GetAssetIdentifierResponse) Descriptor() ([]byte, []int) {
	return file_proto_services_v1_asset_registry_proto_rawDescGZIP(), []int{21}
}

func (x *GetAssetIdentifierResponse) GetIdentifier() *v1.AssetIdentifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

// ListAssetIdentifiersRequest
type ListAssetIdentifiersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetId *string `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3,oneof" json:"asset_id,omitempty"`
}

func (x *ListAssetIdentifiersRequest) Reset() {
	*x = ListAssetIdentifiersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_v1_asset_registry_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAssetIdentifiersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAssetIdentifiersRequest) ProtoMessage() {}

func (x *ListAssetIdentifiersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_v1_asset_registry_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAssetIdentifiersRequest.ProtoReflect.Descriptor instead.
func (*ListAssetIdentifiersRequest) Descriptor() ([]byte, []int) {
	return file_proto_services_v1_asset_registry_proto_rawDescGZIP(), []int{22}
}

func (x *ListAssetIdentifiersRequest) GetAssetId() string {
	if x != nil && x.AssetId != nil {
		return *x.AssetId
	}
	return ""
}

type ListAssetIdentifiersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifiers []*v1.AssetIdentifier `protobuf:"bytes,1,rep,name=identifiers,proto3" json:"identifiers,omitempty"`
}

func (x *ListAssetIdentifiersResponse) Reset() {
	*x = ListAssetIdentifiersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_v1_asset_registry_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAssetIdentifiersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAssetIdentifiersResponse) ProtoMessage() {}

func (x *ListAssetIdentifiersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_v1_asset_registry_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAssetIdentifiersResponse.ProtoReflect.Descriptor instead.
func (*ListAssetIdentifiersResponse) Descriptor() ([]byte, []int) {
	return file_proto_services_v1_asset_registry_proto_rawDescGZIP(), []int{23}
}

func (x *ListAssetIdentifiersResponse) GetIdentifiers() []*v1.AssetIdentifier {
	if x != nil {
		return x.Identifiers
	}
	return nil
}

// CreateAssetRelationshipRequest
type CreateAssetRelationshipRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceAssetId    *string              `protobuf:"bytes,1,opt,name=source_asset_id,json=sourceAssetId,proto3,oneof" json:"source_asset_id,omitempty"`
	TargetAssetId    *string              `protobuf:"bytes,2,opt,name=target_asset_id,json=targetAssetId,proto3,oneof" json:"target_asset_id,omitempty"`
	RelationshipType *v1.RelationshipType `protobuf:"varint,3,opt,name=relationship_type,json=relationshipType,proto3,enum=cqc.assets.v1.RelationshipType,oneof" json:"relationship_type,omitempty"`
	Description      *string              `protobuf:"bytes,4,opt,name=description,proto3,oneof" json:"description,omitempty"`
}

func (x *CreateAssetRelationshipRequest) Reset() {
	*x = CreateAssetRelationshipRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_v1_asset_registry_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAssetRelationshipRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAssetRelationshipRequest) ProtoMessage() {}

func (x *CreateAssetRelationshipRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_v1_asset_registry_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAssetRelationshipRequest.ProtoReflect.Descriptor instead.
func (*CreateAssetRelationshipRequest) Descriptor() ([]byte, []int) {
	return file_proto_services_v1_asset_registry_proto_rawDescGZIP(), []int{24}
}

func (x *CreateAssetRelationshipRequest) GetSourceAssetId() string {
	if x != nil && x.SourceAssetId != nil {
		return *x.SourceAssetId
	}
	return ""
}

func (x *CreateAssetRelationshipRequest) GetTargetAssetId() string {
	if x != nil && x.TargetAssetId != nil {
		return *x.TargetAssetId
	}
	return ""
}

func (x *CreateAssetRelationshipRequest) GetRelationshipType() v1.RelationshipType {
	if x != nil && x.RelationshipType != nil {
		return *x.RelationshipType
	}
	return v1.RelationshipType(0)
}

func (x *CreateAssetRelationshipRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

type CreateAssetRelationshipResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Relationship *v1.AssetRelationship `protobuf:"bytes,1,opt,name=relationship,proto3,oneof" json:"relationship,omitempty"`
}

func (x *CreateAssetRelationshipResponse) Reset() {
	*x = CreateAssetRelationshipResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_v1_asset_registry_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAssetRelationshipResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAssetRelationshipResponse) ProtoMessage() {}

func (x *CreateAssetRelationshipResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_v1_asset_registry_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAssetRelationshipResponse.ProtoReflect.Descriptor instead.
func (*CreateAssetRelationshipResponse) Descriptor() ([]byte, []int) {
	return file_proto_services_v1_asset_registry_proto_rawDescGZIP(), []int{25}
}

func (x *CreateAssetRelationshipResponse) GetRelationship() *v1.AssetRelationship {
	if x != nil {
		return x.Relationship
	}
	return nil
}

// ListAssetRelationshipsRequest
type ListAssetRelationshipsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetId          *string              `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3,oneof" json:"asset_id,omitempty"`
	RelationshipType *v1.RelationshipType `protobuf:"varint,2,opt,name=relationship_type,json=relationshipType,proto3,enum=cqc.assets.v1.RelationshipType,oneof" json:"relationship_type,omitempty"`
}

func (x *ListAssetRelationshipsRequest) Reset() {
	*x = ListAssetRelationshipsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_v1_asset_registry_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAssetRelationshipsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAssetRelationshipsRequest) ProtoMessage() {}

func (x *ListAssetRelationshipsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_v1_asset_registry_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAssetRelationshipsRequest.ProtoReflect.Descriptor instead.
func (*ListAssetRelationshipsRequest) Descriptor() ([]byte, []int) {
	return file_proto_services_v1_asset_registry_proto_rawDescGZIP(), []int{26}
}

func (x *ListAssetRelationshipsRequest) GetAssetId() string {
	if x != nil && x.AssetId != nil {
		return *x.AssetId
	}
	return ""
}

func (x *ListAssetRelationshipsRequest) GetRelationshipType() v1.RelationshipType {
	if x != nil && x.RelationshipType != nil {
		return *x.RelationshipType
	}
	return v1.RelationshipType(0)
}

type ListAssetRelationshipsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Relationships []*v1.AssetRelationship `protobuf:"bytes,1,rep,name=relationships,proto3" json:"relationships,omitempty"`
}

func (x *ListAssetRelationshipsResponse) Reset() {
	*x = ListAssetRelationshipsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_v1_asset_registry_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAssetRelationshipsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAssetRelationshipsResponse) ProtoMessage() {}

func (x *ListAssetRelationshipsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_v1_asset_registry_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAssetRelationshipsResponse.ProtoReflect.Descriptor instead.
func (*ListAssetRelationshipsResponse) Descriptor() ([]byte, []int) {
	return file_proto_services_v1_asset_registry_proto_rawDescGZIP(), []int{27}
}

func (x *ListAssetRelationshipsResponse) GetRelationships() []*v1.AssetRelationship {
	if x != nil {
		return x.Relationships
	}
	return nil
}

// CreateAssetGroupRequest
type CreateAssetGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        *string `protobuf:"bytes,1,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Description *string `protobuf:"bytes,2,opt,name=description,proto3,oneof" json:"description,omitempty"`
	GroupType   *string `protobuf:"bytes,3,opt,name=group_type,json=groupType,proto3,oneof" json:"group_type,omitempty"`
}

func (x *CreateAssetGroupRequest) Reset() {
	*x = CreateAssetGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_v1_asset_registry_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAssetGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAssetGroupRequest) ProtoMessage() {}

func (x *CreateAssetGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_v1_asset_registry_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAssetGroupRequest.ProtoReflect.Descriptor instead.
func (*CreateAssetGroupRequest) Descriptor() ([]byte, []int) {
	return file_proto_services_v1_asset_registry_proto_rawDescGZIP(), []int{28}
}

func (x *CreateAssetGroupRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CreateAssetGroupRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *CreateAssetGroupRequest) GetGroupType() string {
	if x != nil && x.GroupType != nil {
		return *x.GroupType
	}
	return ""
}

type CreateAssetGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group *v1.AssetGroup `protobuf:"bytes,1,opt,name=group,proto3,oneof" json:"group,omitempty"`
}

func (x *CreateAssetGroupResponse) Reset() {
	*x = CreateAssetGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_v1_asset_registry_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAssetGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAssetGroupResponse) ProtoMessage() {}

func (x *CreateAssetGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_v1_asset_registry_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAssetGroupResponse.ProtoReflect.Descriptor instead.
func (*CreateAssetGroupResponse) Descriptor() ([]byte, []int) {
	return file_proto_services_v1_asset_registry_proto_rawDescGZIP(), []int{29}
}

func (x *CreateAssetGroupResponse) GetGroup() *v1.AssetGroup {
	if x != nil {
		return x.Group
	}
	return nil
}

// GetAssetGroupRequest
type GetAssetGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId *string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3,oneof" json:"group_id,omitempty"`
}

func (x *GetAssetGroupRequest) Reset() {
	*x = GetAssetGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_v1_asset_registry_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAssetGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssetGroupRequest) ProtoMessage() {}

func (x *GetAssetGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_v1_asset_registry_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssetGroupRequest.ProtoReflect.Descriptor instead.
func (*GetAssetGroupRequest) Descriptor() ([]byte, []int) {
	return file_proto_services_v1_asset_registry_proto_rawDescGZIP(), []int{30}
}

func (x *GetAssetGroupRequest) GetGroupId() string {
	if x != nil && x.GroupId != nil {
		return *x.GroupId
	}
	return ""
}

type GetAssetGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group *v1.AssetGroup `protobuf:"bytes,1,opt,name=group,proto3,oneof" json:"group,omitempty"`
}

func (x *GetAssetGroupResponse) Reset() {
	*x = GetAssetGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_v1_asset_registry_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAssetGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssetGroupResponse) ProtoMessage() {}

func (x *GetAssetGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_v1_asset_registry_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssetGroupResponse.ProtoReflect.Descriptor instead.
func (*GetAssetGroupResponse) Descriptor() ([]byte, []int) {
	return file_proto_services_v1_asset_registry_proto_rawDescGZIP(), []int{31}
}

func (x *GetAssetGroupResponse) GetGroup() *v1.AssetGroup {
	if x != nil {
		return x.Group
	}
	return nil
}

// AddAssetToGroupRequest
type AddAssetToGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId *string  `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3,oneof" json:"group_id,omitempty"`
	AssetId *string  `protobuf:"bytes,2,opt,name=asset_id,json=assetId,proto3,oneof" json:"asset_id,omitempty"`
	Weight  *float64 `protobuf:"fixed64,3,opt,name=weight,proto3,oneof" json:"weight,omitempty"`
}

func (x *AddAssetToGroupRequest) Reset() {
	*x = AddAssetToGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_v1_asset_registry_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAssetToGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAssetToGroupRequest) ProtoMessage() {}

func (x *AddAssetToGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_v1_asset_registry_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAssetToGroupRequest.ProtoReflect.Descriptor instead.
func (*AddAssetToGroupRequest) Descriptor() ([]byte, []int) {
	return file_proto_services_v1_asset_registry_proto_rawDescGZIP(), []int{32}
}

func (x *AddAssetToGroupRequest) GetGroupId() string {
	if x != nil && x.GroupId != nil {
		return *x.GroupId
	}
	return ""
}

func (x *AddAssetToGroupRequest) GetAssetId() string {
	if x != nil && x.AssetId != nil {
		return *x.AssetId
	}
	return ""
}

func (x *AddAssetToGroupRequest) GetWeight() float64 {
	if x != nil && x.Weight != nil {
		return *x.Weight
	}
	return 0
}

type AddAssetToGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Member *v1.AssetGroupMember `protobuf:"bytes,1,opt,name=member,proto3,oneof" json:"member,omitempty"`
}

func (x *AddAssetToGroupResponse) Reset() {
	*x = AddAssetToGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_v1_asset_registry_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAssetToGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAssetToGroupResponse) ProtoMessage() {}

func (x *AddAssetToGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_v1_asset_registry_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAssetToGroupResponse.ProtoReflect.Descriptor instead.
func (*AddAssetToGroupResponse) Descriptor() ([]byte, []int) {
	return file_proto_services_v1_asset_registry_proto_rawDescGZIP(), []int{33}
}

func (x *AddAssetToGroupResponse) GetMember() *v1.AssetGroupMember {
	if x != nil {
		return x.Member
	}
	return nil
}

// RemoveAssetFromGroupRequest
type RemoveAssetFromGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId *string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3,oneof" json:"group_id,omitempty"`
	AssetId *string `protobuf:"bytes,2,opt,name=asset_id,json=assetId,proto3,oneof" json:"asset_id,omitempty"`
}

func (x *RemoveAssetFromGroupRequest) Reset() {
	*x = RemoveAssetFromGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_v1_asset_registry_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveAssetFromGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveAssetFromGroupRequest) ProtoMessage() {}

func (x *RemoveAssetFromGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_v1_asset_registry_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveAssetFromGroupRequest.ProtoReflect.Descriptor instead.
func (*RemoveAssetFromGroupRequest) Descriptor() ([]byte, []int) {
	return file_proto_services_v1_asset_registry_proto_rawDescGZIP(), []int{34}
}

func (x *RemoveAssetFromGroupRequest) GetGroupId() string {
	if x != nil && x.GroupId != nil {
		return *x.GroupId
	}
	return ""
}

func (x *RemoveAssetFromGroupRequest) GetAssetId() string {
	if x != nil && x.AssetId != nil {
		return *x.AssetId
	}
	return ""
}

type RemoveAssetFromGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success *bool `protobuf:"varint,1,opt,name=success,proto3,oneof" json:"success,omitempty"`
}

func (x *RemoveAssetFromGroupResponse) Reset() {
	*x = RemoveAssetFromGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_v1_asset_registry_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveAssetFromGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveAssetFromGroupResponse) ProtoMessage() {}

func (x *RemoveAssetFromGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_v1_asset_registry_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveAssetFromGroupResponse.ProtoReflect.Descriptor instead.
func (*RemoveAssetFromGroupResponse) Descriptor() ([]byte, []int) {
	return file_proto_services_v1_asset_registry_proto_rawDescGZIP(), []int{35}
}

func (x *RemoveAssetFromGroupResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

// RaiseQualityFlagRequest
type RaiseQualityFlagRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetId     *string          `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3,oneof" json:"asset_id,omitempty"`
	FlagType    *v1.FlagType     `protobuf:"varint,2,opt,name=flag_type,json=flagType,proto3,enum=cqc.assets.v1.FlagType,oneof" json:"flag_type,omitempty"`
	Severity    *v1.FlagSeverity `protobuf:"varint,3,opt,name=severity,proto3,enum=cqc.assets.v1.FlagSeverity,oneof" json:"severity,omitempty"`
	Description *string          `protobuf:"bytes,4,opt,name=description,proto3,oneof" json:"description,omitempty"`
	RaisedBy    *string          `protobuf:"bytes,5,opt,name=raised_by,json=raisedBy,proto3,oneof" json:"raised_by,omitempty"`
}

func (x *RaiseQualityFlagRequest) Reset() {
	*x = RaiseQualityFlagRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_v1_asset_registry_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RaiseQualityFlagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RaiseQualityFlagRequest) ProtoMessage() {}

func (x *RaiseQualityFlagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_v1_asset_registry_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RaiseQualityFlagRequest.ProtoReflect.Descriptor instead.
func (*RaiseQualityFlagRequest) Descriptor() ([]byte, []int) {
	return file_proto_services_v1_asset_registry_proto_rawDescGZIP(), []int{36}
}

func (x *RaiseQualityFlagRequest) GetAssetId() string {
	if x != nil && x.AssetId != nil {
		return *x.AssetId
	}
	return ""
}

func (x *RaiseQualityFlagRequest) GetFlagType() v1.FlagType {
	if x != nil && x.FlagType != nil {
		return *x.FlagType
	}
	return v1.FlagType(0)
}

func (x *RaiseQualityFlagRequest) GetSeverity() v1.FlagSeverity {
	if x != nil && x.Severity != nil {
		return *x.Severity
	}
	return v1.FlagSeverity(0)
}

func (x *RaiseQualityFlagRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *RaiseQualityFlagRequest) GetRaisedBy() string {
	if x != nil && x.RaisedBy != nil {
		return *x.RaisedBy
	}
	return ""
}

type RaiseQualityFlagResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flag *v1.AssetQualityFlag `protobuf:"bytes,1,opt,name=flag,proto3,oneof" json:"flag,omitempty"`
}

func (x *RaiseQualityFlagResponse) Reset() {
	*x = RaiseQualityFlagResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_v1_asset_registry_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RaiseQualityFlagResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RaiseQualityFlagResponse) ProtoMessage() {}

func (x *RaiseQualityFlagResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_v1_asset_registry_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RaiseQualityFlagResponse.ProtoReflect.Descriptor instead.
func (*RaiseQualityFlagResponse) Descriptor() ([]byte, []int) {
	return file_proto_services_v1_asset_registry_proto_rawDescGZIP(), []int{37}
}

func (x *RaiseQualityFlagResponse) GetFlag() *v1.AssetQualityFlag {
	if x != nil {
		return x.Flag
	}
	return nil
}

// ResolveQualityFlagRequest
type ResolveQualityFlagRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlagId          *string `protobuf:"bytes,1,opt,name=flag_id,json=flagId,proto3,oneof" json:"flag_id,omitempty"`
	ResolutionNotes *string `protobuf:"bytes,2,opt,name=resolution_notes,json=resolutionNotes,proto3,oneof" json:"resolution_notes,omitempty"`
	ResolvedBy      *string `protobuf:"bytes,3,opt,name=resolved_by,json=resolvedBy,proto3,oneof" json:"resolved_by,omitempty"`
}

func (x *ResolveQualityFlagRequest) Reset() {
	*x = ResolveQualityFlagRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_v1_asset_registry_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResolveQualityFlagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolveQualityFlagRequest) ProtoMessage() {}

func (x *ResolveQualityFlagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_v1_asset_registry_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResolveQualityFlagRequest.ProtoReflect.Descriptor instead.
func (*ResolveQualityFlagRequest) Descriptor() ([]byte, []int) {
	return file_proto_services_v1_asset_registry_proto_rawDescGZIP(), []int{38}
}

func (x *ResolveQualityFlagRequest) GetFlagId() string {
	if x != nil && x.FlagId != nil {
		return *x.FlagId
	}
	return ""
}

func (x *ResolveQualityFlagRequest) GetResolutionNotes() string {
	if x != nil && x.ResolutionNotes != nil {
		return *x.ResolutionNotes
	}
	return ""
}

func (x *ResolveQualityFlagRequest) GetResolvedBy() string {
	if x != nil && x.ResolvedBy != nil {
		return *x.ResolvedBy
	}
	return ""
}

type ResolveQualityFlagResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flag *v1.AssetQualityFlag `protobuf:"bytes,1,opt,name=flag,proto3,oneof" json:"flag,omitempty"`
}

func (x *ResolveQualityFlagResponse) Reset() {
	*x = ResolveQualityFlagResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_v1_asset_registry_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResolveQualityFlagResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolveQualityFlagResponse) ProtoMessage() {}

func (x *ResolveQualityFlagResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_v1_asset_registry_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResolveQualityFlagResponse.ProtoReflect.Descriptor instead.
func (*ResolveQualityFlagResponse) Descriptor() ([]byte, []int) {
	return file_proto_services_v1_asset_registry_proto_rawDescGZIP(), []int{39}
}

func (x *ResolveQualityFlagResponse) GetFlag() *v1.AssetQualityFlag {
	if x != nil {
		return x.Flag
	}
	return nil
}

// ListQualityFlagsRequest
type ListQualityFlagsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetId         *string          `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3,oneof" json:"asset_id,omitempty"`
	MinSeverity     *v1.FlagSeverity `protobuf:"varint,2,opt,name=min_severity,json=minSeverity,proto3,enum=cqc.assets.v1.FlagSeverity,oneof" json:"min_severity,omitempty"`
	IncludeResolved *bool            `protobuf:"varint,3,opt,name=include_resolved,json=includeResolved,proto3,oneof" json:"include_resolved,omitempty"`
}

func (x *ListQualityFlagsRequest) Reset() {
	*x = ListQualityFlagsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_v1_asset_registry_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListQualityFlagsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQualityFlagsRequest) ProtoMessage() {}

func (x *ListQualityFlagsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_v1_asset_registry_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListQualityFlagsRequest.ProtoReflect.Descriptor instead.
func (*ListQualityFlagsRequest) Descriptor() ([]byte, []int) {
	return file_proto_services_v1_asset_registry_proto_rawDescGZIP(), []int{40}
}

func (x *ListQualityFlagsRequest) GetAssetId() string {
	if x != nil && x.AssetId != nil {
		return *x.AssetId
	}
	return ""
}

func (x *ListQualityFlagsRequest) GetMinSeverity() v1.FlagSeverity {
	if x != nil && x.MinSeverity != nil {
		return *x.MinSeverity
	}
	return v1.FlagSeverity(0)
}

func (x *ListQualityFlagsRequest) GetIncludeResolved() bool {
	if x != nil && x.IncludeResolved != nil {
		return *x.IncludeResolved
	}
	return false
}

type ListQualityFlagsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flags []*v1.AssetQualityFlag `protobuf:"bytes,1,rep,name=flags,proto3" json:"flags,omitempty"`
}

func (x *ListQualityFlagsResponse) Reset() {
	*x = ListQualityFlagsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_v1_asset_registry_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListQualityFlagsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQualityFlagsResponse) ProtoMessage() {}

func (x *ListQualityFlagsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_v1_asset_registry_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListQualityFlagsResponse.ProtoReflect.Descriptor instead.
func (*ListQualityFlagsResponse) Descriptor() ([]byte, []int) {
	return file_proto_services_v1_asset_registry_proto_rawDescGZIP(), []int{41}
}

func (x *ListQualityFlagsResponse) GetFlags() []*v1.AssetQualityFlag {
	if x != nil {
		return x.Flags
	}
	return nil
}

// CreateChainRequest
type CreateChainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name              *string `protobuf:"bytes,1,opt,name=name,proto3,oneof" json:"name,omitempty"`
	ChainType         *string `protobuf:"bytes,2,opt,name=chain_type,json=chainType,proto3,oneof" json:"chain_type,omitempty"`
	ChainId           *int64  `protobuf:"varint,3,opt,name=chain_id,json=chainId,proto3,oneof" json:"chain_id,omitempty"`
	NativeAssetSymbol *string `protobuf:"bytes,4,opt,name=native_asset_symbol,json=nativeAssetSymbol,proto3,oneof" json:"native_asset_symbol,omitempty"`
	BlockExplorerUrl  *string `protobuf:"bytes,5,opt,name=block_explorer_url,json=blockExplorerUrl,proto3,oneof" json:"block_explorer_url,omitempty"`
}

func (x *CreateChainRequest) Reset() {
	*x = CreateChainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_v1_asset_registry_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateChainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateChainRequest) ProtoMessage() {}

func (x *CreateChainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_v1_asset_registry_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateChainRequest.ProtoReflect.Descriptor instead.
func (*CreateChainRequest) Descriptor() ([]byte, []int) {
	return file_proto_services_v1_asset_registry_proto_rawDescGZIP(), []int{42}
}

func (x *CreateChainRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CreateChainRequest) GetChainType() string {
	if x != nil && x.ChainType != nil {
		return *x.ChainType
	}
	return ""
}

func (x *CreateChainRequest) GetChainId() int64 {
	if x != nil && x.ChainId != nil {
		return *x.ChainId
	}
	return 0
}

func (x *CreateChainRequest) GetNativeAssetSymbol() string {
	if x != nil && x.NativeAssetSymbol != nil {
		return *x.NativeAssetSymbol
	}
	return ""
}

func (x *CreateChainRequest) GetBlockExplorerUrl() string {
	if x != nil && x.BlockExplorerUrl != nil {
		return *x.BlockExplorerUrl
	}
	return ""
}

type CreateChainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chain *v1.Chain `protobuf:"bytes,1,opt,name=chain,proto3,oneof" json:"chain,omitempty"`
}

func (x *CreateChainResponse) Reset() {
	*x = CreateChainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_v1_asset_registry_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateChainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateChainResponse) ProtoMessage() {}

func (x *CreateChainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_v1_asset_registry_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateChainResponse.ProtoReflect.Descriptor instead.
func (*CreateChainResponse) Descriptor() ([]byte, []int) {
	return file_proto_services_v1_asset_registry_proto_rawDescGZIP(), []int{43}
}

func (x *CreateChainResponse) GetChain() *v1.Chain {
	if x != nil {
		return x.Chain
	}
	return nil
}

// GetChainRequest
type GetChainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainId *string `protobuf:"bytes,1,opt,name=chain_id,json=chainId,proto3,oneof" json:"chain_id,omitempty"`
}

func (x *GetChainRequest) Reset() {
	*x = GetChainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_v1_asset_registry_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChainRequest) ProtoMessage() {}

func (x *GetChainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_v1_asset_registry_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChainRequest.ProtoReflect.Descriptor instead.
func (*GetChainRequest) Descriptor() ([]byte, []int) {
	return file_proto_services_v1_asset_registry_proto_rawDescGZIP(), []int{44}
}

func (x *GetChainRequest) GetChainId() string {
	if x != nil && x.ChainId != nil {
		return *x.ChainId
	}
	return ""
}

type GetChainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chain *v1.Chain `protobuf:"bytes,1,opt,name=chain,proto3,oneof" json:"chain,omitempty"`
}

func (x *GetChainResponse) Reset() {
	*x = GetChainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_v1_asset_registry_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChainResponse) ProtoMessage() {}

func (x *GetChainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_v1_asset_registry_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChainResponse.ProtoReflect.Descriptor instead.
func (*GetChainResponse) Descriptor() ([]byte, []int) {
	return file_proto_services_v1_asset_registry_proto_rawDescGZIP(), []int{45}
}

func (x *GetChainResponse) GetChain() *v1.Chain {
	if x != nil {
		return x.Chain
	}
	return nil
}

// ListChainsRequest
type ListChainsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainType *string `protobuf:"bytes,1,opt,name=chain_type,json=chainType,proto3,oneof" json:"chain_type,omitempty"`
}

func (x *ListChainsRequest) Reset() {
	*x = ListChainsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_v1_asset_registry_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListChainsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChainsRequest) ProtoMessage() {}

func (x *ListChainsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_v1_asset_registry_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChainsRequest.ProtoReflect.Descriptor instead.
func (*ListChainsRequest) Descriptor() ([]byte, []int) {
	return file_proto_services_v1_asset_registry_proto_rawDescGZIP(), []int{46}
}

func (x *ListChainsRequest) GetChainType() string {
	if x != nil && x.ChainType != nil {
		return *x.ChainType
	}
	return ""
}

type ListChainsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chains []*v1.Chain `protobuf:"bytes,1,rep,name=chains,proto3" json:"chains,omitempty"`
}

func (x *ListChainsResponse) Reset() {
	*x = ListChainsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_v1_asset_registry_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListChainsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChainsResponse) ProtoMessage() {}

func (x *ListChainsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_v1_asset_registry_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChainsResponse.ProtoReflect.Descriptor instead.
func (*ListChainsResponse) Descriptor() ([]byte, []int) {
	return file_proto_services_v1_asset_registry_proto_rawDescGZIP(), []int{47}
}

func (x *ListChainsResponse) GetChains() []*v1.Chain {
	if x != nil {
		return x.Chains
	}
	return nil
}

// CreateVenueRequest
type CreateVenueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name              *string       `protobuf:"bytes,1,opt,name=name,proto3,oneof" json:"name,omitempty"`
	VenueType         *v1.VenueType `protobuf:"varint,2,opt,name=venue_type,json=venueType,proto3,enum=cqc.assets.v1.VenueType,oneof" json:"venue_type,omitempty"`
	ChainId           *string       `protobuf:"bytes,3,opt,name=chain_id,json=chainId,proto3,oneof" json:"chain_id,omitempty"`
	ApiEndpoint       *string       `protobuf:"bytes,4,opt,name=api_endpoint,json=apiEndpoint,proto3,oneof" json:"api_endpoint,omitempty"`
	WebsocketEndpoint *string       `protobuf:"bytes,5,opt,name=websocket_endpoint,json=websocketEndpoint,proto3,oneof" json:"websocket_endpoint,omitempty"`
}

func (x *CreateVenueRequest) Reset() {
	*x = CreateVenueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_v1_asset_registry_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVenueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVenueRequest) ProtoMessage() {}

func (x *CreateVenueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_v1_asset_registry_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVenueRequest.ProtoReflect.Descriptor instead.
func (*CreateVenueRequest) Descriptor() ([]byte, []int) {
	return file_proto_services_v1_asset_registry_proto_rawDescGZIP(), []int{48}
}

func (x *CreateVenueRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CreateVenueRequest) GetVenueType() v1.VenueType {
	if x != nil && x.VenueType != nil {
		return *x.VenueType
	}
	return v1.VenueType(0)
}

func (x *CreateVenueRequest) GetChainId() string {
	if x != nil && x.ChainId != nil {
		return *x.ChainId
	}
	return ""
}

func (x *CreateVenueRequest) GetApiEndpoint() string {
	if x != nil && x.ApiEndpoint != nil {
		return *x.ApiEndpoint
	}
	return ""
}

func (x *CreateVenueRequest) GetWebsocketEndpoint() string {
	if x != nil && x.WebsocketEndpoint != nil {
		return *x.WebsocketEndpoint
	}
	return ""
}

type CreateVenueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Venue *v1.Venue `protobuf:"bytes,1,opt,name=venue,proto3,oneof" json:"venue,omitempty"`
}

func (x *CreateVenueResponse) Reset() {
	*x = CreateVenueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_v1_asset_registry_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVenueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVenueResponse) ProtoMessage() {}

func (x *CreateVenueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_v1_asset_registry_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVenueResponse.ProtoReflect.Descriptor instead.
func (*CreateVenueResponse) Descriptor() ([]byte, []int) {
	return file_proto_services_v1_asset_registry_proto_rawDescGZIP(), []int{49}
}

func (x *CreateVenueResponse) GetVenue() *v1.Venue {
	if x != nil {
		return x.Venue
	}
	return nil
}

// GetVenueRequest
type GetVenueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VenueId *string `protobuf:"bytes,1,opt,name=venue_id,json=venueId,proto3,oneof" json:"venue_id,omitempty"`
}

func (x *GetVenueRequest) Reset() {
	*x = GetVenueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_v1_asset_registry_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVenueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVenueRequest) ProtoMessage() {}

func (x *GetVenueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_v1_asset_registry_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVenueRequest.ProtoReflect.Descriptor instead.
func (*GetVenueRequest) Descriptor() ([]byte, []int) {
	return file_proto_services_v1_asset_registry_proto_rawDescGZIP(), []int{50}
}

func (x *GetVenueRequest) GetVenueId() string {
	if x != nil && x.VenueId != nil {
		return *x.VenueId
	}
	return ""
}

type GetVenueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Venue *v1.Venue `protobuf:"bytes,1,opt,name=venue,proto3,oneof" json:"venue,omitempty"`
}

func (x *GetVenueResponse) Reset() {
	*x = GetVenueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_v1_asset_registry_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVenueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVenueResponse) ProtoMessage() {}

func (x *GetVenueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_v1_asset_registry_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVenueResponse.ProtoReflect.Descriptor instead.
func (*GetVenueResponse) Descriptor() ([]byte, []int) {
	return file_proto_services_v1_asset_registry_proto_rawDescGZIP(), []int{51}
}

func (x *GetVenueResponse) GetVenue() *v1.Venue {
	if x != nil {
		return x.Venue
	}
	return nil
}

// ListVenuesRequest
type ListVenuesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VenueType *v1.VenueType `protobuf:"varint,1,opt,name=venue_type,json=venueType,proto3,enum=cqc.assets.v1.VenueType,oneof" json:"venue_type,omitempty"`
	ChainId   *string       `protobuf:"bytes,2,opt,name=chain_id,json=chainId,proto3,oneof" json:"chain_id,omitempty"`
}

func (x *ListVenuesRequest) Reset() {
	*x = ListVenuesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_v1_asset_registry_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVenuesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVenuesRequest) ProtoMessage() {}

func (x *ListVenuesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_v1_asset_registry_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVenuesRequest.ProtoReflect.Descriptor instead.
func (*ListVenuesRequest) Descriptor() ([]byte, []int) {
	return file_proto_services_v1_asset_registry_proto_rawDescGZIP(), []int{52}
}

func (x *ListVenuesRequest) GetVenueType() v1.VenueType {
	if x != nil && x.VenueType != nil {
		return *x.VenueType
	}
	return v1.VenueType(0)
}

func (x *ListVenuesRequest) GetChainId() string {
	if x != nil && x.ChainId != nil {
		return *x.ChainId
	}
	return ""
}

type ListVenuesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Venues []*v1.Venue `protobuf:"bytes,1,rep,name=venues,proto3" json:"venues,omitempty"`
}

func (x *ListVenuesResponse) Reset() {
	*x = ListVenuesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_v1_asset_registry_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVenuesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVenuesResponse) ProtoMessage() {}

func (x *ListVenuesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_v1_asset_registry_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVenuesResponse.ProtoReflect.Descriptor instead.
func (*ListVenuesResponse) Descriptor() ([]byte, []int) {
	return file_proto_services_v1_asset_registry_proto_rawDescGZIP(), []int{53}
}

func (x *ListVenuesResponse) GetVenues() []*v1.Venue {
	if x != nil {
		return x.Venues
	}
	return nil
}

// CreateVenueSymbolRequest
type CreateVenueSymbolRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VenueId      *string `protobuf:"bytes,1,opt,name=venue_id,json=venueId,proto3,oneof" json:"venue_id,omitempty"`
	AssetId      *string `protobuf:"bytes,2,opt,name=asset_id,json=assetId,proto3,oneof" json:"asset_id,omitempty"`
	VenueSymbol  *string `protobuf:"bytes,3,opt,name=venue_symbol,json=venueSymbol,proto3,oneof" json:"venue_symbol,omitempty"`
	BaseAssetId  *string `protobuf:"bytes,4,opt,name=base_asset_id,json=baseAssetId,proto3,oneof" json:"base_asset_id,omitempty"`
	QuoteAssetId *string `protobuf:"bytes,5,opt,name=quote_asset_id,json=quoteAssetId,proto3,oneof" json:"quote_asset_id,omitempty"`
}

func (x *CreateVenueSymbolRequest) Reset() {
	*x = CreateVenueSymbolRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_v1_asset_registry_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVenueSymbolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVenueSymbolRequest) ProtoMessage() {}

func (x *CreateVenueSymbolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_v1_asset_registry_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVenueSymbolRequest.ProtoReflect.Descriptor instead.
func (*CreateVenueSymbolRequest) Descriptor() ([]byte, []int) {
	return file_proto_services_v1_asset_registry_proto_rawDescGZIP(), []int{54}
}

func (x *CreateVenueSymbolRequest) GetVenueId() string {
	if x != nil && x.VenueId != nil {
		return *x.VenueId
	}
	return ""
}

func (x *CreateVenueSymbolRequest) GetAssetId() string {
	if x != nil && x.AssetId != nil {
		return *x.AssetId
	}
	return ""
}

func (x *CreateVenueSymbolRequest) GetVenueSymbol() string {
	if x != nil && x.VenueSymbol != nil {
		return *x.VenueSymbol
	}
	return ""
}

func (x *CreateVenueSymbolRequest) GetBaseAssetId() string {
	if x != nil && x.BaseAssetId != nil {
		return *x.BaseAssetId
	}
	return ""
}

func (x *CreateVenueSymbolRequest) GetQuoteAssetId() string {
	if x != nil && x.QuoteAssetId != nil {
		return *x.QuoteAssetId
	}
	return ""
}

type CreateVenueSymbolResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VenueSymbol *v1.VenueSymbol `protobuf:"bytes,1,opt,name=venue_symbol,json=venueSymbol,proto3,oneof" json:"venue_symbol,omitempty"`
}

func (x *CreateVenueSymbolResponse) Reset() {
	*x = CreateVenueSymbolResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_v1_asset_registry_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVenueSymbolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVenueSymbolResponse) ProtoMessage() {}

func (x *CreateVenueSymbolResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_v1_asset_registry_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVenueSymbolResponse.ProtoReflect.Descriptor instead.
func (*CreateVenueSymbolResponse) Descriptor() ([]byte, []int) {
	return file_proto_services_v1_asset_registry_proto_rawDescGZIP(), []int{55}
}

func (x *CreateVenueSymbolResponse) GetVenueSymbol() *v1.VenueSymbol {
	if x != nil {
		return x.VenueSymbol
	}
	return nil
}

// GetVenueSymbolRequest
type GetVenueSymbolRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VenueId     *string `protobuf:"bytes,1,opt,name=venue_id,json=venueId,proto3,oneof" json:"venue_id,omitempty"`
	VenueSymbol *string `protobuf:"bytes,2,opt,name=venue_symbol,json=venueSymbol,proto3,oneof" json:"venue_symbol,omitempty"`
}

func (x *GetVenueSymbolRequest) Reset() {
	*x = GetVenueSymbolRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_v1_asset_registry_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVenueSymbolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVenueSymbolRequest) ProtoMessage() {}

func (x *GetVenueSymbolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_v1_asset_registry_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVenueSymbolRequest.ProtoReflect.Descriptor instead.
func (*GetVenueSymbolRequest) Descriptor() ([]byte, []int) {
	return file_proto_services_v1_asset_registry_proto_rawDescGZIP(), []int{56}
}

func (x *GetVenueSymbolRequest) GetVenueId() string {
	if x != nil && x.VenueId != nil {
		return *x.VenueId
	}
	return ""
}

func (x *GetVenueSymbolRequest) GetVenueSymbol() string {
	if x != nil && x.VenueSymbol != nil {
		return *x.VenueSymbol
	}
	return ""
}

type GetVenueSymbolResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VenueSymbol *v1.VenueSymbol `protobuf:"bytes,1,opt,name=venue_symbol,json=venueSymbol,proto3,oneof" json:"venue_symbol,omitempty"`
}

func (x *GetVenueSymbolResponse) Reset() {
	*x = GetVenueSymbolResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_v1_asset_registry_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVenueSymbolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVenueSymbolResponse) ProtoMessage() {}

func (x *GetVenueSymbolResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_v1_asset_registry_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVenueSymbolResponse.ProtoReflect.Descriptor instead.
func (*GetVenueSymbolResponse) Descriptor() ([]byte, []int) {
	return file_proto_services_v1_asset_registry_proto_rawDescGZIP(), []int{57}
}

func (x *GetVenueSymbolResponse) GetVenueSymbol() *v1.VenueSymbol {
	if x != nil {
		return x.VenueSymbol
	}
	return nil
}

// ListVenueSymbolsRequest
type ListVenueSymbolsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VenueId *string `protobuf:"bytes,1,opt,name=venue_id,json=venueId,proto3,oneof" json:"venue_id,omitempty"`
	AssetId *string `protobuf:"bytes,2,opt,name=asset_id,json=assetId,proto3,oneof" json:"asset_id,omitempty"`
}

func (x *ListVenueSymbolsRequest) Reset() {
	*x = ListVenueSymbolsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_v1_asset_registry_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVenueSymbolsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVenueSymbolsRequest) ProtoMessage() {}

func (x *ListVenueSymbolsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_v1_asset_registry_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVenueSymbolsRequest.ProtoReflect.Descriptor instead.
func (*ListVenueSymbolsRequest) Descriptor() ([]byte, []int) {
	return file_proto_services_v1_asset_registry_proto_rawDescGZIP(), []int{58}
}

func (x *ListVenueSymbolsRequest) GetVenueId() string {
	if x != nil && x.VenueId != nil {
		return *x.VenueId
	}
	return ""
}

func (x *ListVenueSymbolsRequest) GetAssetId() string {
	if x != nil && x.AssetId != nil {
		return *x.AssetId
	}
	return ""
}

type ListVenueSymbolsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VenueSymbols []*v1.VenueSymbol `protobuf:"bytes,1,rep,name=venue_symbols,json=venueSymbols,proto3" json:"venue_symbols,omitempty"`
}

func (x *ListVenueSymbolsResponse) Reset() {
	*x = ListVenueSymbolsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_v1_asset_registry_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVenueSymbolsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVenueSymbolsResponse) ProtoMessage() {}

func (x *ListVenueSymbolsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_v1_asset_registry_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVenueSymbolsResponse.ProtoReflect.Descriptor instead.
func (*ListVenueSymbolsResponse) Descriptor() ([]byte, []int) {
	return file_proto_services_v1_asset_registry_proto_rawDescGZIP(), []int{59}
}

func (x *ListVenueSymbolsResponse) GetVenueSymbols() []*v1.VenueSymbol {
	if x != nil {
		return x.VenueSymbols
	}
	return nil
}

var File_proto_services_v1_asset_registry_proto protoreflect.FileDescriptor

var file_proto_services_v1_asset_registry_proto_rawDesc = []byte{
	0x0a, 0x26, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2f, 0x76, 0x31, 0x2f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x63, 0x71, 0x63, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x75,
	0x61, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf3, 0x02, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x06,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x3c, 0x0a, 0x0a, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x48, 0x02, 0x52, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x1f, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x03, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x88, 0x01,
	0x01, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x6f,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x07, 0x6c, 0x6f,
	0x67, 0x6f, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x77, 0x65, 0x62, 0x73,
	0x69, 0x74, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52,
	0x0a, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x42, 0x0e,
	0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x22, 0x50, 0x0a, 0x13, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2f, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x48, 0x00, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x22, 0x3e, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1e, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x22, 0x4d, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2f, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x48, 0x00, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x88,
	0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x22, 0xa0, 0x03, 0x0a,
	0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x88, 0x01, 0x01,
	0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3c, 0x0a, 0x0a, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e,
	0x63, 0x71, 0x63, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x48, 0x03, 0x52, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x08, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12,
	0x1e, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x06, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x6f, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12,
	0x24, 0x0a, 0x0b, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x0a, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x55,
	0x72, 0x6c, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f,
	0x69, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x42, 0x07, 0x0a,
	0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x22,
	0x50, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x48, 0x00, 0x52, 0x05, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x22, 0x41, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x5f, 0x69, 0x64, 0x22, 0x40, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0xf1, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x00, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22,
	0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x88,
	0x01, 0x01, 0x12, 0x3c, 0x0a, 0x0a, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x48, 0x02, 0x52, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x1f, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x03, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x88, 0x01,
	0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x42,
	0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x22, 0xb9, 0x01, 0x0a, 0x12, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2c, 0x0a, 0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x12,
	0x2b, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74,
	0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x01, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x88,
	0x01, 0x01, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x5f, 0x0a, 0x13, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x42, 0x08, 0x0a,
	0x06, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x44, 0x0a, 0x14, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2c, 0x0a, 0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x22, 0x9b, 0x02,
	0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e,
	0x0a, 0x08, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1e,
	0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x01, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2e,
	0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1f,
	0x0a, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x03, 0x52, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x88, 0x01, 0x01, 0x12,
	0x20, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x48, 0x04, 0x52, 0x08, 0x69, 0x73, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x88, 0x01,
	0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x42, 0x13, 0x0a, 0x11, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x69, 0x73, 0x5f, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x22, 0x73, 0x0a, 0x1d, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0a,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x48, 0x00, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x88, 0x01,
	0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x22, 0x57, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a,
	0x0d, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x64, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x22, 0x70, 0x0a, 0x1a, 0x47, 0x65, 0x74,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x71,
	0x63, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x77, 0x0a, 0x1b, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x08, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x5f, 0x69, 0x64, 0x22, 0x60, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x71, 0x63, 0x2e,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xf7, 0x01, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x36, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x48, 0x01, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x24, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x6d,
	0x61, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x48, 0x03, 0x52, 0x09, 0x69, 0x73, 0x50,
	0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69,
	0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79,
	0x22, 0x73, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x43, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0x8b, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x36, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x48, 0x01,
	0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x22, 0x70, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x43, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0x4a, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69,
	0x64, 0x22, 0x60, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x40, 0x0a, 0x0b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x0b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x73, 0x22, 0xc2, 0x02, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x0f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x0d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0d,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x51, 0x0a, 0x11, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x63, 0x71,
	0x63, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x48, 0x02, 0x52, 0x10,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x12,
	0x0a, 0x10, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f,
	0x69, 0x64, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x68, 0x69, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x7d, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x68, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0c, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x68, 0x69, 0x70, 0x48, 0x00, 0x52, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x68, 0x69, 0x70, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x22, 0xb5, 0x01, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69,
	0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x08, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x51, 0x0a, 0x11, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69,
	0x70, 0x54, 0x79, 0x70, 0x65, 0x48, 0x01, 0x52, 0x10, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x68, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09,
	0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22,
	0x68, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x46, 0x0a, 0x0d, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69,
	0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x52, 0x0d, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x73, 0x22, 0xa5, 0x01, 0x0a, 0x17, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x25,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x09, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x22, 0x5a, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a,
	0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63,
	0x71, 0x63, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x00, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x43, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x69, 0x64, 0x22, 0x57, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x05, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x71, 0x63,
	0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x00, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x88, 0x01,
	0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x9a, 0x01, 0x0a, 0x16,
	0x41, 0x64, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x54, 0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x48, 0x02, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x62, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x54, 0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x48, 0x00, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x88, 0x01,
	0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x77, 0x0a, 0x1b,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x08, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52,
	0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x5f, 0x69, 0x64, 0x22, 0x49, 0x0a, 0x1c, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x22, 0xc1, 0x02, 0x0a, 0x17, 0x52, 0x61, 0x69, 0x73, 0x65, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74,
	0x79, 0x46, 0x6c, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x08,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x09,
	0x66, 0x6c, 0x61, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x17, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x6c, 0x61, 0x67, 0x54, 0x79, 0x70, 0x65, 0x48, 0x01, 0x52, 0x08, 0x66, 0x6c, 0x61, 0x67,
	0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3c, 0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72,
	0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x63, 0x71, 0x63, 0x2e,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6c, 0x61, 0x67, 0x53, 0x65,
	0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x48, 0x02, 0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69,
	0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09,
	0x72, 0x61, 0x69, 0x73, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x04, 0x52, 0x08, 0x72, 0x61, 0x69, 0x73, 0x65, 0x64, 0x42, 0x79, 0x88, 0x01, 0x01, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x66, 0x6c, 0x61, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x73, 0x65,
	0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x72, 0x61, 0x69, 0x73, 0x65,
	0x64, 0x5f, 0x62, 0x79, 0x22, 0x5d, 0x0a, 0x18, 0x52, 0x61, 0x69, 0x73, 0x65, 0x51, 0x75, 0x61,
	0x6c, 0x69, 0x74, 0x79, 0x46, 0x6c, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x38, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x63, 0x71, 0x63, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x46, 0x6c, 0x61, 0x67, 0x48,
	0x00, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x66,
	0x6c, 0x61, 0x67, 0x22, 0xc0, 0x01, 0x0a, 0x19, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x51,
	0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x46, 0x6c, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1c, 0x0a, 0x07, 0x66, 0x6c, 0x61, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x66, 0x6c, 0x61, 0x67, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x2e, 0x0a, 0x10, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x6f,
	0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0f, 0x72, 0x65, 0x73,
	0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x88, 0x01, 0x01, 0x12,
	0x24, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64,
	0x42, 0x79, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x5f, 0x69,
	0x64, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x6c,
	0x76, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x22, 0x5f, 0x0a, 0x1a, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76,
	0x65, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x46, 0x6c, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x46,
	0x6c, 0x61, 0x67, 0x48, 0x00, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x88, 0x01, 0x01, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x22, 0xe1, 0x01, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74,
	0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x43, 0x0a, 0x0c, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x76, 0x65, 0x72,
	0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x63, 0x71, 0x63, 0x2e,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6c, 0x61, 0x67, 0x53, 0x65,
	0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x48, 0x01, 0x52, 0x0b, 0x6d, 0x69, 0x6e, 0x53, 0x65, 0x76,
	0x65, 0x72, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x10, 0x69, 0x6e, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x48, 0x02, 0x52, 0x0f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x52, 0x65, 0x73,
	0x6f, 0x6c, 0x76, 0x65, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65,
	0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x69, 0x6e, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x22, 0x51, 0x0a, 0x18, 0x4c,
	0x69, 0x73, 0x74, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x51, 0x75, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x46, 0x6c, 0x61, 0x67, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x22, 0xad,
	0x02, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22,
	0x0a, 0x0a, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x48, 0x02, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x33, 0x0a, 0x13, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x03, 0x52, 0x11, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x53, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x12, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x65, 0x78, 0x70, 0x6c, 0x6f, 0x72, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x10, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x78, 0x70, 0x6c,
	0x6f, 0x72, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x42,
	0x16, 0x0a, 0x14, 0x5f, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x65, 0x78, 0x70, 0x6c, 0x6f, 0x72, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x22, 0x50,
	0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x48, 0x00, 0x52, 0x05, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x22, 0x3e, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64,
	0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64,
	0x22, 0x4d, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x48, 0x00, 0x52, 0x05, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x22,
	0x46, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0x42, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x68, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a,
	0x06, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x63, 0x71, 0x63, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x52, 0x06, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x73, 0x22, 0xb4, 0x02, 0x0a, 0x12,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3c, 0x0a, 0x0a, 0x76,
	0x65, 0x6e, 0x75, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x18, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x56, 0x65, 0x6e, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x48, 0x01, 0x52, 0x09, 0x76, 0x65, 0x6e,
	0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x07, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x61, 0x70, 0x69,
	0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x03, 0x52, 0x0b, 0x61, 0x70, 0x69, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x32, 0x0a, 0x12, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x65,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52,
	0x11, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x61,
	0x70, 0x69, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x42, 0x15, 0x0a, 0x13, 0x5f,
	0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x22, 0x50, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x65, 0x6e, 0x75,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x05, 0x76, 0x65, 0x6e,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x48, 0x00,
	0x52, 0x05, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x76,
	0x65, 0x6e, 0x75, 0x65, 0x22, 0x3e, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x56, 0x65, 0x6e, 0x75, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x08, 0x76, 0x65, 0x6e, 0x75, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x76, 0x65, 0x6e,
	0x75, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x76, 0x65, 0x6e, 0x75,
	0x65, 0x5f, 0x69, 0x64, 0x22, 0x4d, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x56, 0x65, 0x6e, 0x75, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x05, 0x76, 0x65, 0x6e, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x48, 0x00, 0x52,
	0x05, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x76, 0x65,
	0x6e, 0x75, 0x65, 0x22, 0x8d, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x65, 0x6e, 0x75,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x0a, 0x76, 0x65, 0x6e,
	0x75, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e,
	0x63, 0x71, 0x63, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65,
	0x6e, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x09, 0x76, 0x65, 0x6e, 0x75, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x76, 0x65, 0x6e, 0x75,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x5f, 0x69, 0x64, 0x22, 0x42, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x65, 0x6e, 0x75, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x76, 0x65, 0x6e,
	0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x71, 0x63, 0x2e,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x52,
	0x06, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x73, 0x22, 0xa6, 0x02, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x08, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x5f, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0b, 0x76, 0x65,
	0x6e, 0x75, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0d,
	0x62, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0e, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52,
	0x0c, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x76,
	0x65, 0x6e, 0x75, 0x65, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x42, 0x10, 0x0a, 0x0e, 0x5f,
	0x62, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x11, 0x0a,
	0x0f, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64,
	0x22, 0x70, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x53,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a,
	0x0c, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x48,
	0x00, 0x52, 0x0b, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x88, 0x01,
	0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x5f, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x22, 0x7d, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x53, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x08, 0x76,
	0x65, 0x6e, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x07, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x76,
	0x65, 0x6e, 0x75, 0x65, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x01, 0x52, 0x0b, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x5f, 0x69, 0x64,
	0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x22, 0x6d, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x53, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0c, 0x76,
	0x65, 0x6e, 0x75, 0x65, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x48, 0x00, 0x52,
	0x0b, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x88, 0x01, 0x01, 0x42,
	0x0f, 0x0a, 0x0d, 0x5f, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x22, 0x73, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x53, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x08, 0x76,
	0x65, 0x6e, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x07, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52,
	0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x76, 0x65, 0x6e, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x5f, 0x69, 0x64, 0x22, 0x5b, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x65, 0x6e,
	0x75, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x53, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x52, 0x0c, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x73, 0x32, 0xf4, 0x17, 0x0a, 0x0d, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x79, 0x12, 0x58, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x12, 0x23, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f,
	0x0a, 0x08, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x20, 0x2e, 0x63, 0x71, 0x63,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x63,
	0x71, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x58, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x23,
	0x2e, 0x63, 0x71, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x0b, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x23, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e,
	0x63, 0x71, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x73, 0x12, 0x22, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x0c, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x12, 0x24, 0x2e, 0x63, 0x71, 0x63,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x25, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x76, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x2d, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2e, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x6d, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2a, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2b, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x73,
	0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2c, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x76, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x2d, 0x2e, 0x63,
	0x71, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x63, 0x71,
	0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6d, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x12, 0x2a, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e,
	0x63, 0x71, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x73, 0x0a, 0x14, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x73, 0x12, 0x2c, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2d, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x7c, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x12, 0x2f, 0x2e, 0x63, 0x71, 0x63,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x63, 0x71,
	0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x79, 0x0a,
	0x16, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x73, 0x12, 0x2e, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x28, 0x2e, 0x63,
	0x71, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x5e, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x25, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x63, 0x71, 0x63, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x64, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x54, 0x6f, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x27, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x54,
	0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e,
	0x63, 0x71, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x64, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x54, 0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x73, 0x0a, 0x14, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x2c, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x46, 0x72, 0x6f,
	0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e,
	0x63, 0x71, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67, 0x0a, 0x10,
	0x52, 0x61, 0x69, 0x73, 0x65, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x46, 0x6c, 0x61, 0x67,
	0x12, 0x28, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x61, 0x69, 0x73, 0x65, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x46,
	0x6c, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x63, 0x71, 0x63,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x69,
	0x73, 0x65, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x46, 0x6c, 0x61, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6d, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65,
	0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x2a, 0x2e, 0x63, 0x71,
	0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x73, 0x6f, 0x6c, 0x76, 0x65, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x46, 0x6c, 0x61, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76,
	0x65, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x46, 0x6c, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x28, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x51,
	0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x29, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79,
	0x46, 0x6c, 0x61, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a,
	0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x23, 0x2e, 0x63,
	0x71, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x24, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x12, 0x20, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x68, 0x61, 0x69, 0x6e, 0x73, 0x12, 0x22, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61,
	0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x63, 0x71, 0x63,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x58, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x12, 0x23,
	0x2e, 0x63, 0x71, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x65, 0x6e, 0x75,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x08, 0x47, 0x65, 0x74,
	0x56, 0x65, 0x6e, 0x75, 0x65, 0x12, 0x20, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x6e, 0x75, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x6e,
	0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x0a, 0x4c, 0x69,
	0x73, 0x74, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x73, 0x12, 0x22, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56,
	0x65, 0x6e, 0x75, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x63,
	0x71, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x6a, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x65, 0x6e, 0x75, 0x65,
	0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x29, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56,
	0x65, 0x6e, 0x75, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2a, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x53,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12,
	0x26, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x6e,
	0x75, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x67, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x53, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x73, 0x12, 0x28, 0x2e, 0x63, 0x71, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x65, 0x6e, 0x75, 0x65,
	0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29,
	0x2e, 0x63, 0x71, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x42, 0x5a, 0x40, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x2d,
	0x43, 0x61, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x2f, 0x63, 0x71, 0x63, 0x2f, 0x67, 0x65, 0x6e, 0x2f,
	0x67, 0x6f, 0x2f, 0x63, 0x71, 0x63, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f,
	0x76, 0x31, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x76, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_services_v1_asset_registry_proto_rawDescOnce sync.Once
	file_proto_services_v1_asset_registry_proto_rawDescData = file_proto_services_v1_asset_registry_proto_rawDesc
)

func file_proto_services_v1_asset_registry_proto_rawDescGZIP() []byte {
	file_proto_services_v1_asset_registry_proto_rawDescOnce.Do(func() {
		file_proto_services_v1_asset_registry_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_services_v1_asset_registry_proto_rawDescData)
	})
	return file_proto_services_v1_asset_registry_proto_rawDescData
}

var file_proto_services_v1_asset_registry_proto_msgTypes = make([]protoimpl.MessageInfo, 60)
var file_proto_services_v1_asset_registry_proto_goTypes = []interface{}{
	(*CreateAssetRequest)(nil),              // 0: cqc.services.v1.CreateAssetRequest
	(*CreateAssetResponse)(nil),             // 1: cqc.services.v1.CreateAssetResponse
	(*GetAssetRequest)(nil),                 // 2: cqc.services.v1.GetAssetRequest
	(*GetAssetResponse)(nil),                // 3: cqc.services.v1.GetAssetResponse
	(*UpdateAssetRequest)(nil),              // 4: cqc.services.v1.UpdateAssetRequest
	(*UpdateAssetResponse)(nil),             // 5: cqc.services.v1.UpdateAssetResponse
	(*DeleteAssetRequest)(nil),              // 6: cqc.services.v1.DeleteAssetRequest
	(*DeleteAssetResponse)(nil),             // 7: cqc.services.v1.DeleteAssetResponse
	(*ListAssetsRequest)(nil),               // 8: cqc.services.v1.ListAssetsRequest
	(*ListAssetsResponse)(nil),              // 9: cqc.services.v1.ListAssetsResponse
	(*SearchAssetsRequest)(nil),             // 10: cqc.services.v1.SearchAssetsRequest
	(*SearchAssetsResponse)(nil),            // 11: cqc.services.v1.SearchAssetsResponse
	(*CreateAssetDeploymentRequest)(nil),    // 12: cqc.services.v1.CreateAssetDeploymentRequest
	(*CreateAssetDeploymentResponse)(nil),   // 13: cqc.services.v1.CreateAssetDeploymentResponse
	(*GetAssetDeploymentRequest)(nil),       // 14: cqc.services.v1.GetAssetDeploymentRequest
	(*GetAssetDeploymentResponse)(nil),      // 15: cqc.services.v1.GetAssetDeploymentResponse
	(*ListAssetDeploymentsRequest)(nil),     // 16: cqc.services.v1.ListAssetDeploymentsRequest
	(*ListAssetDeploymentsResponse)(nil),    // 17: cqc.services.v1.ListAssetDeploymentsResponse
	(*CreateAssetIdentifierRequest)(nil),    // 18: cqc.services.v1.CreateAssetIdentifierRequest
	(*CreateAssetIdentifierResponse)(nil),   // 19: cqc.services.v1.CreateAssetIdentifierResponse
	(*GetAssetIdentifierRequest)(nil),       // 20: cqc.services.v1.GetAssetIdentifierRequest
	(*GetAssetIdentifierResponse)(nil),      // 21: cqc.services.v1.GetAssetIdentifierResponse
	(*ListAssetIdentifiersRequest)(nil),     // 22: cqc.services.v1.ListAssetIdentifiersRequest
	(*ListAssetIdentifiersResponse)(nil),    // 23: cqc.services.v1.ListAssetIdentifiersResponse
	(*CreateAssetRelationshipRequest)(nil),  // 24: cqc.services.v1.CreateAssetRelationshipRequest
	(*CreateAssetRelationshipResponse)(nil), // 25: cqc.services.v1.CreateAssetRelationshipResponse
	(*ListAssetRelationshipsRequest)(nil),   // 26: cqc.services.v1.ListAssetRelationshipsRequest
	(*ListAssetRelationshipsResponse)(nil),  // 27: cqc.services.v1.ListAssetRelationshipsResponse
	(*CreateAssetGroupRequest)(nil),         // 28: cqc.services.v1.CreateAssetGroupRequest
	(*CreateAssetGroupResponse)(nil),        // 29: cqc.services.v1.CreateAssetGroupResponse
	(*GetAssetGroupRequest)(nil),            // 30: cqc.services.v1.GetAssetGroupRequest
	(*GetAssetGroupResponse)(nil),           // 31: cqc.services.v1.GetAssetGroupResponse
	(*AddAssetToGroupRequest)(nil),          // 32: cqc.services.v1.AddAssetToGroupRequest
	(*AddAssetToGroupResponse)(nil),         // 33: cqc.services.v1.AddAssetToGroupResponse
	(*RemoveAssetFromGroupRequest)(nil),     // 34: cqc.services.v1.RemoveAssetFromGroupRequest
	(*RemoveAssetFromGroupResponse)(nil),    // 35: cqc.services.v1.RemoveAssetFromGroupResponse
	(*RaiseQualityFlagRequest)(nil),         // 36: cqc.services.v1.RaiseQualityFlagRequest
	(*RaiseQualityFlagResponse)(nil),        // 37: cqc.services.v1.RaiseQualityFlagResponse
	(*ResolveQualityFlagRequest)(nil),       // 38: cqc.services.v1.ResolveQualityFlagRequest
	(*ResolveQualityFlagResponse)(nil),      // 39: cqc.services.v1.ResolveQualityFlagResponse
	(*ListQualityFlagsRequest)(nil),         // 40: cqc.services.v1.ListQualityFlagsRequest
	(*ListQualityFlagsResponse)(nil),        // 41: cqc.services.v1.ListQualityFlagsResponse
	(*CreateChainRequest)(nil),              // 42: cqc.services.v1.CreateChainRequest
	(*CreateChainResponse)(nil),             // 43: cqc.services.v1.CreateChainResponse
	(*GetChainRequest)(nil),                 // 44: cqc.services.v1.GetChainRequest
	(*GetChainResponse)(nil),                // 45: cqc.services.v1.GetChainResponse
	(*ListChainsRequest)(nil),               // 46: cqc.services.v1.ListChainsRequest
	(*ListChainsResponse)(nil),              // 47: cqc.services.v1.ListChainsResponse
	(*CreateVenueRequest)(nil),              // 48: cqc.services.v1.CreateVenueRequest
	(*CreateVenueResponse)(nil),             // 49: cqc.services.v1.CreateVenueResponse
	(*GetVenueRequest)(nil),                 // 50: cqc.services.v1.GetVenueRequest
	(*GetVenueResponse)(nil),                // 51: cqc.services.v1.GetVenueResponse
	(*ListVenuesRequest)(nil),               // 52: cqc.services.v1.ListVenuesRequest
	(*ListVenuesResponse)(nil),              // 53: cqc.services.v1.ListVenuesResponse
	(*CreateVenueSymbolRequest)(nil),        // 54: cqc.services.v1.CreateVenueSymbolRequest
	(*CreateVenueSymbolResponse)(nil),       // 55: cqc.services.v1.CreateVenueSymbolResponse
	(*GetVenueSymbolRequest)(nil),           // 56: cqc.services.v1.GetVenueSymbolRequest
	(*GetVenueSymbolResponse)(nil),          // 57: cqc.services.v1.GetVenueSymbolResponse
	(*ListVenueSymbolsRequest)(nil),         // 58: cqc.services.v1.ListVenueSymbolsRequest
	(*ListVenueSymbolsResponse)(nil),        // 59: cqc.services.v1.ListVenueSymbolsResponse
	(v1.AssetType)(0),                       // 60: cqc.assets.v1.AssetType
	(*v1.Asset)(nil),                        // 61: cqc.assets.v1.Asset
	(*v1.AssetDeployment)(nil),              // 62: cqc.assets.v1.AssetDeployment
	(v1.DataSource)(0),                      // 63: cqc.assets.v1.DataSource
	(*v1.AssetIdentifier)(nil),              // 64: cqc.assets.v1.AssetIdentifier
	(v1.RelationshipType)(0),                // 65: cqc.assets.v1.RelationshipType
	(*v1.AssetRelationship)(nil),            // 66: cqc.assets.v1.AssetRelationship
	(*v1.AssetGroup)(nil),                   // 67: cqc.assets.v1.AssetGroup
	(*v1.AssetGroupMember)(nil),             // 68: cqc.assets.v1.AssetGroupMember
	(v1.FlagType)(0),                        // 69: cqc.assets.v1.FlagType
	(v1.FlagSeverity)(0),                    // 70: cqc.assets.v1.FlagSeverity
	(*v1.AssetQualityFlag)(nil),             // 71: cqc.assets.v1.AssetQualityFlag
	(*v1.Chain)(nil),                        // 72: cqc.assets.v1.Chain
	(v1.VenueType)(0),                       // 73: cqc.assets.v1.VenueType
	(*v1.Venue)(nil),                        // 74: cqc.assets.v1.Venue
	(*v1.VenueSymbol)(nil),                  // 75: cqc.assets.v1.VenueSymbol
}
var file_proto_services_v1_asset_registry_proto_depIdxs = []int32{
	60, // 0: cqc.services.v1.CreateAssetRequest.asset_type:type_name -> cqc.assets.v1.AssetType
	61, // 1: cqc.services.v1.CreateAssetResponse.asset:type_name -> cqc.assets.v1.Asset
	61, // 2: cqc.services.v1.GetAssetResponse.asset:type_name -> cqc.assets.v1.Asset
	60, // 3: cqc.services.v1.UpdateAssetRequest.asset_type:type_name -> cqc.assets.v1.AssetType
	61, // 4: cqc.services.v1.UpdateAssetResponse.asset:type_name -> cqc.assets.v1.Asset
	60, // 5: cqc.services.v1.ListAssetsRequest.asset_type:type_name -> cqc.assets.v1.AssetType
	61, // 6: cqc.services.v1.ListAssetsResponse.assets:type_name -> cqc.assets.v1.Asset
	61, // 7: cqc.services.v1.SearchAssetsResponse.assets:type_name -> cqc.assets.v1.Asset
	62, // 8: cqc.services.v1.CreateAssetDeploymentResponse.deployment:type_name -> cqc.assets.v1.AssetDeployment
	62, // 9: cqc.services.v1.GetAssetDeploymentResponse.deployment:type_name -> cqc.assets.v1.AssetDeployment
	62, // 10: cqc.services.v1.ListAssetDeploymentsResponse.deployments:type_name -> cqc.assets.v1.AssetDeployment
	63, // 11: cqc.services.v1.CreateAssetIdentifierRequest.source:type_name -> cqc.assets.v1.DataSource
	64, // 12: cqc.services.v1.CreateAssetIdentifierResponse.identifier:type_name -> cqc.assets.v1.AssetIdentifier
	63, // 13: cqc.services.v1.GetAssetIdentifierRequest.source:type_name -> cqc.assets.v1.DataSource
	64, // 14: cqc.services.v1.GetAssetIdentifierResponse.identifier:type_name -> cqc.assets.v1.AssetIdentifier
	64, // 15: cqc.services.v1.ListAssetIdentifiersResponse.identifiers:type_name -> cqc.assets.v1.AssetIdentifier
	65, // 16: cqc.services.v1.CreateAssetRelationshipRequest.relationship_type:type_name -> cqc.assets.v1.RelationshipType
	66, // 17: cqc.services.v1.CreateAssetRelationshipResponse.relationship:type_name -> cqc.assets.v1.AssetRelationship
	65, // 18: cqc.services.v1.ListAssetRelationshipsRequest.relationship_type:type_name -> cqc.assets.v1.RelationshipType
	66, // 19: cqc.services.v1.ListAssetRelationshipsResponse.relationships:type_name -> cqc.assets.v1.AssetRelationship
	67, // 20: cqc.services.v1.CreateAssetGroupResponse.group:type_name -> cqc.assets.v1.AssetGroup
	67, // 21: cqc.services.v1.GetAssetGroupResponse.group:type_name -> cqc.assets.v1.AssetGroup
	68, // 22: cqc.services.v1.AddAssetToGroupResponse.member:type_name -> cqc.assets.v1.AssetGroupMember
	69, // 23: cqc.services.v1.RaiseQualityFlagRequest.flag_type:type_name -> cqc.assets.v1.FlagType
	70, // 24: cqc.services.v1.RaiseQualityFlagRequest.severity:type_name -> cqc.assets.v1.FlagSeverity
	71, // 25: cqc.services.v1.RaiseQualityFlagResponse.flag:type_name -> cqc.assets.v1.AssetQualityFlag
	71, // 26: cqc.services.v1.ResolveQualityFlagResponse.flag:type_name -> cqc.assets.v1.AssetQualityFlag
	70, // 27: cqc.services.v1.ListQualityFlagsRequest.min_severity:type_name -> cqc.assets.v1.FlagSeverity
	71, // 28: cqc.services.v1.ListQualityFlagsResponse.flags:type_name -> cqc.assets.v1.AssetQualityFlag
	72, // 29: cqc.services.v1.CreateChainResponse.chain:type_name -> cqc.assets.v1.Chain
	72, // 30: cqc.services.v1.GetChainResponse.chain:type_name -> cqc.assets.v1.Chain
	72, // 31: cqc.services.v1.ListChainsResponse.chains:type_name -> cqc.assets.v1.Chain
	73, // 32: cqc.services.v1.CreateVenueRequest.venue_type:type_name -> cqc.assets.v1.VenueType
	74, // 33: cqc.services.v1.CreateVenueResponse.venue:type_name -> cqc.assets.v1.Venue
	74, // 34: cqc.services.v1.GetVenueResponse.venue:type_name -> cqc.assets.v1.Venue
	73, // 35: cqc.services.v1.ListVenuesRequest.venue_type:type_name -> cqc.assets.v1.VenueType
	74, // 36: cqc.services.v1.ListVenuesResponse.venues:type_name -> cqc.assets.v1.Venue
	75, // 37: cqc.services.v1.CreateVenueSymbolResponse.venue_symbol:type_name -> cqc.assets.v1.VenueSymbol
	75, // 38: cqc.services.v1.GetVenueSymbolResponse.venue_symbol:type_name -> cqc.assets.v1.VenueSymbol
	75, // 39: cqc.services.v1.ListVenueSymbolsResponse.venue_symbols:type_name -> cqc.assets.v1.VenueSymbol
	0,  // 40: cqc.services.v1.AssetRegistry.CreateAsset:input_type -> cqc.services.v1.CreateAssetRequest
	2,  // 41: cqc.services.v1.AssetRegistry.GetAsset:input_type -> cqc.services.v1.GetAssetRequest
	4,  // 42: cqc.services.v1.AssetRegistry.UpdateAsset:input_type -> cqc.services.v1.UpdateAssetRequest
	6,  // 43: cqc.services.v1.AssetRegistry.DeleteAsset:input_type -> cqc.services.v1.DeleteAssetRequest
	8,  // 44: cqc.services.v1.AssetRegistry.ListAssets:input_type -> cqc.services.v1.ListAssetsRequest
	10, // 45: cqc.services.v1.AssetRegistry.SearchAssets:input_type -> cqc.services.v1.SearchAssetsRequest
	12, // 46: cqc.services.v1.AssetRegistry.CreateAssetDeployment:input_type -> cqc.services.v1.CreateAssetDeploymentRequest
	14, // 47: cqc.services.v1.AssetRegistry.GetAssetDeployment:input_type -> cqc.services.v1.GetAssetDeploymentRequest
	16, // 48: cqc.services.v1.AssetRegistry.ListAssetDeployments:input_type -> cqc.services.v1.ListAssetDeploymentsRequest
	18, // 49: cqc.services.v1.AssetRegistry.CreateAssetIdentifier:input_type -> cqc.services.v1.CreateAssetIdentifierRequest
	20, // 50: cqc.services.v1.AssetRegistry.GetAssetIdentifier:input_type -> cqc.services.v1.GetAssetIdentifierRequest
	22, // 51: cqc.services.v1.AssetRegistry.ListAssetIdentifiers:input_type -> cqc.services.v1.ListAssetIdentifiersRequest
	24, // 52: cqc.services.v1.AssetRegistry.CreateAssetRelationship:input_type -> cqc.services.v1.CreateAssetRelationshipRequest
	26, // 53: cqc.services.v1.AssetRegistry.ListAssetRelationships:input_type -> cqc.services.v1.ListAssetRelationshipsRequest
	28, // 54: cqc.services.v1.AssetRegistry.CreateAssetGroup:input_type -> cqc.services.v1.CreateAssetGroupRequest
	30, // 55: cqc.services.v1.AssetRegistry.GetAssetGroup:input_type -> cqc.services.v1.GetAssetGroupRequest
	32, // 56: cqc.services.v1.AssetRegistry.AddAssetToGroup:input_type -> cqc.services.v1.AddAssetToGroupRequest
	34, // 57: cqc.services.v1.AssetRegistry.RemoveAssetFromGroup:input_type -> cqc.services.v1.RemoveAssetFromGroupRequest
	36, // 58: cqc.services.v1.AssetRegistry.RaiseQualityFlag:input_type -> cqc.services.v1.RaiseQualityFlagRequest
	38, // 59: cqc.services.v1.AssetRegistry.ResolveQualityFlag:input_type -> cqc.services.v1.ResolveQualityFlagRequest
	40, // 60: cqc.services.v1.AssetRegistry.ListQualityFlags:input_type -> cqc.services.v1.ListQualityFlagsRequest
	42, // 61: cqc.services.v1.AssetRegistry.CreateChain:input_type -> cqc.services.v1.CreateChainRequest
	44, // 62: cqc.services.v1.AssetRegistry.GetChain:input_type -> cqc.services.v1.GetChainRequest
	46, // 63: cqc.services.v1.AssetRegistry.ListChains:input_type -> cqc.services.v1.ListChainsRequest
	48, // 64: cqc.services.v1.AssetRegistry.CreateVenue:input_type -> cqc.services.v1.CreateVenueRequest
	50, // 65: cqc.services.v1.AssetRegistry.GetVenue:input_type -> cqc.services.v1.GetVenueRequest
	52, // 66: cqc.services.v1.AssetRegistry.ListVenues:input_type -> cqc.services.v1.ListVenuesRequest
	54, // 67: cqc.services.v1.AssetRegistry.CreateVenueSymbol:input_type -> cqc.services.v1.CreateVenueSymbolRequest
	56, // 68: cqc.services.v1.AssetRegistry.GetVenueSymbol:input_type -> cqc.services.v1.GetVenueSymbolRequest
	58, // 69: cqc.services.v1.AssetRegistry.ListVenueSymbols:input_type -> cqc.services.v1.ListVenueSymbolsRequest
	1,  // 70: cqc.services.v1.AssetRegistry.CreateAsset:output_type -> cqc.services.v1.CreateAssetResponse
	3,  // 71: cqc.services.v1.AssetRegistry.GetAsset:output_type -> cqc.services.v1.GetAssetResponse
	5,  // 72: cqc.services.v1.AssetRegistry.UpdateAsset:output_type -> cqc.services.v1.UpdateAssetResponse
	7,  // 73: cqc.services.v1.AssetRegistry.DeleteAsset:output_type -> cqc.services.v1.DeleteAssetResponse
	9,  // 74: cqc.services.v1.AssetRegistry.ListAssets:output_type -> cqc.services.v1.ListAssetsResponse
	11, // 75: cqc.services.v1.AssetRegistry.SearchAssets:output_type -> cqc.services.v1.SearchAssetsResponse
	13, // 76: cqc.services.v1.AssetRegistry.CreateAssetDeployment:output_type -> cqc.services.v1.CreateAssetDeploymentResponse
	15, // 77: cqc.services.v1.AssetRegistry.GetAssetDeployment:output_type -> cqc.services.v1.GetAssetDeploymentResponse
	17, // 78: cqc.services.v1.AssetRegistry.ListAssetDeployments:output_type -> cqc.services.v1.ListAssetDeploymentsResponse
	19, // 79: cqc.services.v1.AssetRegistry.CreateAssetIdentifier:output_type -> cqc.services.v1.CreateAssetIdentifierResponse
	21, // 80: cqc.services.v1.AssetRegistry.GetAssetIdentifier:output_type -> cqc.services.v1.GetAssetIdentifierResponse
	23, // 81: cqc.services.v1.AssetRegistry.ListAssetIdentifiers:output_type -> cqc.services.v1.ListAssetIdentifiersResponse
	25, // 82: cqc.services.v1.AssetRegistry.CreateAssetRelationship:output_type -> cqc.services.v1.CreateAssetRelationshipResponse
	27, // 83: cqc.services.v1.AssetRegistry.ListAssetRelationships:output_type -> cqc.services.v1.ListAssetRelationshipsResponse
	29, // 84: cqc.services.v1.AssetRegistry.CreateAssetGroup:output_type -> cqc.services.v1.CreateAssetGroupResponse
	31, // 85: cqc.services.v1.AssetRegistry.GetAssetGroup:output_type -> cqc.services.v1.GetAssetGroupResponse
	33, // 86: cqc.services.v1.AssetRegistry.AddAssetToGroup:output_type -> cqc.services.v1.AddAssetToGroupResponse
	35, // 87: cqc.services.v1.AssetRegistry.RemoveAssetFromGroup:output_type -> cqc.services.v1.RemoveAssetFromGroupResponse
	37, // 88: cqc.services.v1.AssetRegistry.RaiseQualityFlag:output_type -> cqc.services.v1.RaiseQualityFlagResponse
	39, // 89: cqc.services.v1.AssetRegistry.ResolveQualityFlag:output_type -> cqc.services.v1.ResolveQualityFlagResponse
	41, // 90: cqc.services.v1.AssetRegistry.ListQualityFlags:output_type -> cqc.services.v1.ListQualityFlagsResponse
	43, // 91: cqc.services.v1.AssetRegistry.CreateChain:output_type -> cqc.services.v1.CreateChainResponse
	45, // 92: cqc.services.v1.AssetRegistry.GetChain:output_type -> cqc.services.v1.GetChainResponse
	47, // 93: cqc.services.v1.AssetRegistry.ListChains:output_type -> cqc.services.v1.ListChainsResponse
	49, // 94: cqc.services.v1.AssetRegistry.CreateVenue:output_type -> cqc.services.v1.CreateVenueResponse
	51, // 95: cqc.services.v1.AssetRegistry.GetVenue:output_type -> cqc.services.v1.GetVenueResponse
	53, // 96: cqc.services.v1.AssetRegistry.ListVenues:output_type -> cqc.services.v1.ListVenuesResponse
	55, // 97: cqc.services.v1.AssetRegistry.CreateVenueSymbol:output_type -> cqc.services.v1.CreateVenueSymbolResponse
	57, // 98: cqc.services.v1.AssetRegistry.GetVenueSymbol:output_type -> cqc.services.v1.GetVenueSymbolResponse
	59, // 99: cqc.services.v1.AssetRegistry.ListVenueSymbols:output_type -> cqc.services.v1.ListVenueSymbolsResponse
	70, // [70:100] is the sub-list for method output_type
	40, // [40:70] is the sub-list for method input_type
	40, // [40:40] is the sub-list for extension type_name
	40, // [40:40] is the sub-list for extension extendee
	0,  // [0:40] is the sub-list for field type_name
}

func init() { file_proto_services_v1_asset_registry_proto_init() }
func file_proto_services_v1_asset_registry_proto_init() {
	if File_proto_services_v1_asset_registry_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_services_v1_asset_registry_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAssetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_v1_asset_registry_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAssetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_v1_asset_registry_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAssetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_v1_asset_registry_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAssetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_v1_asset_registry_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAssetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_v1_asset_registry_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAssetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_v1_asset_registry_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAssetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_v1_asset_registry_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAssetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_v1_asset_registry_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAssetsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_v1_asset_registry_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAssetsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_v1_asset_registry_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchAssetsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_v1_asset_registry_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchAssetsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_v1_asset_registry_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAssetDeploymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_v1_asset_registry_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAssetDeploymentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_v1_asset_registry_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAssetDeploymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_v1_asset_registry_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAssetDeploymentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_v1_asset_registry_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAssetDeploymentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_v1_asset_registry_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAssetDeploymentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_v1_asset_registry_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAssetIdentifierRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_v1_asset_registry_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAssetIdentifierResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_v1_asset_registry_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAssetIdentifierRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_v1_asset_registry_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAssetIdentifierResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_v1_asset_registry_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAssetIdentifiersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_v1_asset_registry_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAssetIdentifiersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_v1_asset_registry_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAssetRelationshipRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_v1_asset_registry_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAssetRelationshipResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_v1_asset_registry_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAssetRelationshipsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_v1_asset_registry_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAssetRelationshipsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_v1_asset_registry_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAssetGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_v1_asset_registry_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAssetGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_v1_asset_registry_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAssetGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_v1_asset_registry_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAssetGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_v1_asset_registry_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAssetToGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_v1_asset_registry_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAssetToGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_v1_asset_registry_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveAssetFromGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_v1_asset_registry_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveAssetFromGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_v1_asset_registry_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RaiseQualityFlagRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_v1_asset_registry_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RaiseQualityFlagResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_v1_asset_registry_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResolveQualityFlagRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_v1_asset_registry_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResolveQualityFlagResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_v1_asset_registry_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListQualityFlagsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_v1_asset_registry_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListQualityFlagsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_v1_asset_registry_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateChainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_v1_asset_registry_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateChainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_v1_asset_registry_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_v1_asset_registry_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_v1_asset_registry_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListChainsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_v1_asset_registry_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListChainsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_v1_asset_registry_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVenueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_v1_asset_registry_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVenueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_v1_asset_registry_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVenueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_v1_asset_registry_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVenueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_v1_asset_registry_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVenuesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_v1_asset_registry_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVenuesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_v1_asset_registry_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVenueSymbolRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_v1_asset_registry_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVenueSymbolResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_v1_asset_registry_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVenueSymbolRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_v1_asset_registry_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVenueSymbolResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_v1_asset_registry_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVenueSymbolsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_v1_asset_registry_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVenueSymbolsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_services_v1_asset_registry_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_proto_services_v1_asset_registry_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_proto_services_v1_asset_registry_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_proto_services_v1_asset_registry_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_proto_services_v1_asset_registry_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_proto_services_v1_asset_registry_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_proto_services_v1_asset_registry_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_proto_services_v1_asset_registry_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_proto_services_v1_asset_registry_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_proto_services_v1_asset_registry_proto_msgTypes[9].OneofWrappers = []interface{}{}
	file_proto_services_v1_asset_registry_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_proto_services_v1_asset_registry_proto_msgTypes[12].OneofWrappers = []interface{}{}
	file_proto_services_v1_asset_registry_proto_msgTypes[13].OneofWrappers = []interface{}{}
	file_proto_services_v1_asset_registry_proto_msgTypes[14].OneofWrappers = []interface{}{}
	file_proto_services_v1_asset_registry_proto_msgTypes[15].OneofWrappers = []interface{}{}
	file_proto_services_v1_asset_registry_proto_msgTypes[16].OneofWrappers = []interface{}{}
	file_proto_services_v1_asset_registry_proto_msgTypes[18].OneofWrappers = []interface{}{}
	file_proto_services_v1_asset_registry_proto_msgTypes[19].OneofWrappers = []interface{}{}
	file_proto_services_v1_asset_registry_proto_msgTypes[20].OneofWrappers = []interface{}{}
	file_proto_services_v1_asset_registry_proto_msgTypes[21].OneofWrappers = []interface{}{}
	file_proto_services_v1_asset_registry_proto_msgTypes[22].OneofWrappers = []interface{}{}
	file_proto_services_v1_asset_registry_proto_msgTypes[24].OneofWrappers = []interface{}{}
	file_proto_services_v1_asset_registry_proto_msgTypes[25].OneofWrappers = []interface{}{}
	file_proto_services_v1_asset_registry_proto_msgTypes[26].OneofWrappers = []interface{}{}
	file_proto_services_v1_asset_registry_proto_msgTypes[28].OneofWrappers = []interface{}{}
	file_proto_services_v1_asset_registry_proto_msgTypes[29].OneofWrappers = []interface{}{}
	file_proto_services_v1_asset_registry_proto_msgTypes[30].OneofWrappers = []interface{}{}
	file_proto_services_v1_asset_registry_proto_msgTypes[31].OneofWrappers = []interface{}{}
	file_proto_services_v1_asset_registry_proto_msgTypes[32].OneofWrappers = []interface{}{}
	file_proto_services_v1_asset_registry_proto_msgTypes[33].OneofWrappers = []interface{}{}
	file_proto_services_v1_asset_registry_proto_msgTypes[34].OneofWrappers = []interface{}{}
	file_proto_services_v1_asset_registry_proto_msgTypes[35].OneofWrappers = []interface{}{}
	file_proto_services_v1_asset_registry_proto_msgTypes[36].OneofWrappers = []interface{}{}
	file_proto_services_v1_asset_registry_proto_msgTypes[37].OneofWrappers = []interface{}{}
	file_proto_services_v1_asset_registry_proto_msgTypes[38].OneofWrappers = []interface{}{}
	file_proto_services_v1_asset_registry_proto_msgTypes[39].OneofWrappers = []interface{}{}
	file_proto_services_v1_asset_registry_proto_msgTypes[40].OneofWrappers = []interface{}{}
	file_proto_services_v1_asset_registry_proto_msgTypes[42].OneofWrappers = []interface{}{}
	file_proto_services_v1_asset_registry_proto_msgTypes[43].OneofWrappers = []interface{}{}
	file_proto_services_v1_asset_registry_proto_msgTypes[44].OneofWrappers = []interface{}{}
	file_proto_services_v1_asset_registry_proto_msgTypes[45].OneofWrappers = []interface{}{}
	file_proto_services_v1_asset_registry_proto_msgTypes[46].OneofWrappers = []interface{}{}
	file_proto_services_v1_asset_registry_proto_msgTypes[48].OneofWrappers = []interface{}{}
	file_proto_services_v1_asset_registry_proto_msgTypes[49].OneofWrappers = []interface{}{}
	file_proto_services_v1_asset_registry_proto_msgTypes[50].OneofWrappers = []interface{}{}
	file_proto_services_v1_asset_registry_proto_msgTypes[51].OneofWrappers = []interface{}{}
	file_proto_services_v1_asset_registry_proto_msgTypes[52].OneofWrappers = []interface{}{}
	file_proto_services_v1_asset_registry_proto_msgTypes[54].OneofWrappers = []interface{}{}
	file_proto_services_v1_asset_registry_proto_msgTypes[55].OneofWrappers = []interface{}{}
	file_proto_services_v1_asset_registry_proto_msgTypes[56].OneofWrappers = []interface{}{}
	file_proto_services_v1_asset_registry_proto_msgTypes[57].OneofWrappers = []interface{}{}
	file_proto_services_v1_asset_registry_proto_msgTypes[58].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_services_v1_asset_registry_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   60,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_services_v1_asset_registry_proto_goTypes,
		DependencyIndexes: file_proto_services_v1_asset_registry_proto_depIdxs,
		MessageInfos:      file_proto_services_v1_asset_registry_proto_msgTypes,
	}.Build()
	File_proto_services_v1_asset_registry_proto = out.File
	file_proto_services_v1_asset_registry_proto_rawDesc = nil
	file_proto_services_v1_asset_registry_proto_goTypes = nil
	file_proto_services_v1_asset_registry_proto_depIdxs = nil
}
